id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: eDIA
  commentId: N:eDIA
  language: CSharp
  name:
    CSharp: eDIA
    VB: eDIA
  nameWithType:
    CSharp: eDIA
    VB: eDIA
  qualifiedName:
    CSharp: eDIA
    VB: eDIA
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: eDIA.eParam
    commentId: T:eDIA.eParam
    language: CSharp
    name:
      CSharp: eParam
      VB: eParam
    nameWithType:
      CSharp: eParam
      VB: eParam
    qualifiedName:
      CSharp: eDIA.eParam
      VB: eDIA.eParam
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: eParam
      path: ''
      startLine: 5419
    summary: "\nParameter package definition to send along with an event. \n"
    example: []
    syntax:
      content:
        CSharp: public class eParam
        VB: Public Class eParam
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.eParam.#ctor
      commentId: M:eDIA.eParam.#ctor
      language: CSharp
      name:
        CSharp: eParam()
        VB: eParam()
      nameWithType:
        CSharp: eParam.eParam()
        VB: eParam.eParam()
      qualifiedName:
        CSharp: eDIA.eParam.eParam()
        VB: eDIA.eParam.eParam()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: .ctor
        path: ''
        startLine: 5422
      summary: 'Default empty '
      example: []
      syntax:
        content:
          CSharp: public eParam()
          VB: Public Sub New
      overload: eDIA.eParam.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.floatP
      commentId: F:eDIA.eParam.floatP
      language: CSharp
      name:
        CSharp: floatP
        VB: floatP
      nameWithType:
        CSharp: eParam.floatP
        VB: eParam.floatP
      qualifiedName:
        CSharp: eDIA.eParam.floatP
        VB: eDIA.eParam.floatP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: floatP
        path: ''
        startLine: 5427
      syntax:
        content:
          CSharp: public float floatP
          VB: Public floatP As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.floatPs
      commentId: F:eDIA.eParam.floatPs
      language: CSharp
      name:
        CSharp: floatPs
        VB: floatPs
      nameWithType:
        CSharp: eParam.floatPs
        VB: eParam.floatPs
      qualifiedName:
        CSharp: eDIA.eParam.floatPs
        VB: eDIA.eParam.floatPs
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: floatPs
        path: ''
        startLine: 5428
      syntax:
        content:
          CSharp: public float[] floatPs
          VB: Public floatPs As Single()
        return:
          type: System.Single[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.#ctor(System.Single)
      commentId: M:eDIA.eParam.#ctor(System.Single)
      language: CSharp
      name:
        CSharp: eParam(Single)
        VB: eParam(Single)
      nameWithType:
        CSharp: eParam.eParam(Single)
        VB: eParam.eParam(Single)
      qualifiedName:
        CSharp: eDIA.eParam.eParam(System.Single)
        VB: eDIA.eParam.eParam(System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: .ctor
        path: ''
        startLine: 5431
      summary: Pass on a float
      example: []
      syntax:
        content:
          CSharp: public eParam(float _float)
          VB: Public Sub New(_float As Single)
        parameters:
        - id: _float
          type: System.Single
      overload: eDIA.eParam.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.GetFloat
      commentId: M:eDIA.eParam.GetFloat
      language: CSharp
      name:
        CSharp: GetFloat()
        VB: GetFloat()
      nameWithType:
        CSharp: eParam.GetFloat()
        VB: eParam.GetFloat()
      qualifiedName:
        CSharp: eDIA.eParam.GetFloat()
        VB: eDIA.eParam.GetFloat()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: GetFloat
        path: ''
        startLine: 5435
      syntax:
        content:
          CSharp: public float GetFloat()
          VB: Public Function GetFloat As Single
        return:
          type: System.Single
      overload: eDIA.eParam.GetFloat*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.#ctor(System.Single[])
      commentId: M:eDIA.eParam.#ctor(System.Single[])
      language: CSharp
      name:
        CSharp: eParam(Single[])
        VB: eParam(Single())
      nameWithType:
        CSharp: eParam.eParam(Single[])
        VB: eParam.eParam(Single())
      qualifiedName:
        CSharp: eDIA.eParam.eParam(System.Single[])
        VB: eDIA.eParam.eParam(System.Single())
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: .ctor
        path: ''
        startLine: 5440
      summary: 'Pass on value array &apos;new float[] { value01, value02, .. }&apos; '
      example: []
      syntax:
        content:
          CSharp: public eParam(float[] _floats)
          VB: Public Sub New(_floats As Single())
        parameters:
        - id: _floats
          type: System.Single[]
      overload: eDIA.eParam.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.GetFloats
      commentId: M:eDIA.eParam.GetFloats
      language: CSharp
      name:
        CSharp: GetFloats()
        VB: GetFloats()
      nameWithType:
        CSharp: eParam.GetFloats()
        VB: eParam.GetFloats()
      qualifiedName:
        CSharp: eDIA.eParam.GetFloats()
        VB: eDIA.eParam.GetFloats()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: GetFloats
        path: ''
        startLine: 5444
      syntax:
        content:
          CSharp: public float[] GetFloats()
          VB: Public Function GetFloats As Single()
        return:
          type: System.Single[]
      overload: eDIA.eParam.GetFloats*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.stringP
      commentId: F:eDIA.eParam.stringP
      language: CSharp
      name:
        CSharp: stringP
        VB: stringP
      nameWithType:
        CSharp: eParam.stringP
        VB: eParam.stringP
      qualifiedName:
        CSharp: eDIA.eParam.stringP
        VB: eDIA.eParam.stringP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: stringP
        path: ''
        startLine: 5449
      syntax:
        content:
          CSharp: public string stringP
          VB: Public stringP As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.stringPs
      commentId: F:eDIA.eParam.stringPs
      language: CSharp
      name:
        CSharp: stringPs
        VB: stringPs
      nameWithType:
        CSharp: eParam.stringPs
        VB: eParam.stringPs
      qualifiedName:
        CSharp: eDIA.eParam.stringPs
        VB: eDIA.eParam.stringPs
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: stringPs
        path: ''
        startLine: 5450
      syntax:
        content:
          CSharp: public string[] stringPs
          VB: Public stringPs As String()
        return:
          type: System.String[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.#ctor(System.String)
      commentId: M:eDIA.eParam.#ctor(System.String)
      language: CSharp
      name:
        CSharp: eParam(String)
        VB: eParam(String)
      nameWithType:
        CSharp: eParam.eParam(String)
        VB: eParam.eParam(String)
      qualifiedName:
        CSharp: eDIA.eParam.eParam(System.String)
        VB: eDIA.eParam.eParam(System.String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: .ctor
        path: ''
        startLine: 5452
      syntax:
        content:
          CSharp: public eParam(string _string)
          VB: Public Sub New(_string As String)
        parameters:
        - id: _string
          type: System.String
      overload: eDIA.eParam.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.GetString
      commentId: M:eDIA.eParam.GetString
      language: CSharp
      name:
        CSharp: GetString()
        VB: GetString()
      nameWithType:
        CSharp: eParam.GetString()
        VB: eParam.GetString()
      qualifiedName:
        CSharp: eDIA.eParam.GetString()
        VB: eDIA.eParam.GetString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: GetString
        path: ''
        startLine: 5456
      syntax:
        content:
          CSharp: public string GetString()
          VB: Public Function GetString As String
        return:
          type: System.String
      overload: eDIA.eParam.GetString*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.#ctor(System.String[])
      commentId: M:eDIA.eParam.#ctor(System.String[])
      language: CSharp
      name:
        CSharp: eParam(String[])
        VB: eParam(String())
      nameWithType:
        CSharp: eParam.eParam(String[])
        VB: eParam.eParam(String())
      qualifiedName:
        CSharp: eDIA.eParam.eParam(System.String[])
        VB: eDIA.eParam.eParam(System.String())
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: .ctor
        path: ''
        startLine: 5461
      summary: 'Pass on value array &quot;new string[] { value01, value02, .. }&quot; '
      example: []
      syntax:
        content:
          CSharp: public eParam(string[] _strings)
          VB: Public Sub New(_strings As String())
        parameters:
        - id: _strings
          type: System.String[]
      overload: eDIA.eParam.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.GetStrings
      commentId: M:eDIA.eParam.GetStrings
      language: CSharp
      name:
        CSharp: GetStrings()
        VB: GetStrings()
      nameWithType:
        CSharp: eParam.GetStrings()
        VB: eParam.GetStrings()
      qualifiedName:
        CSharp: eDIA.eParam.GetStrings()
        VB: eDIA.eParam.GetStrings()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: GetStrings
        path: ''
        startLine: 5464
      syntax:
        content:
          CSharp: public string[] GetStrings()
          VB: Public Function GetStrings As String()
        return:
          type: System.String[]
      overload: eDIA.eParam.GetStrings*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.intP
      commentId: F:eDIA.eParam.intP
      language: CSharp
      name:
        CSharp: intP
        VB: intP
      nameWithType:
        CSharp: eParam.intP
        VB: eParam.intP
      qualifiedName:
        CSharp: eDIA.eParam.intP
        VB: eDIA.eParam.intP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: intP
        path: ''
        startLine: 5469
      syntax:
        content:
          CSharp: public int intP
          VB: Public intP As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.intPs
      commentId: F:eDIA.eParam.intPs
      language: CSharp
      name:
        CSharp: intPs
        VB: intPs
      nameWithType:
        CSharp: eParam.intPs
        VB: eParam.intPs
      qualifiedName:
        CSharp: eDIA.eParam.intPs
        VB: eDIA.eParam.intPs
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: intPs
        path: ''
        startLine: 5470
      syntax:
        content:
          CSharp: public int[] intPs
          VB: Public intPs As Integer()
        return:
          type: System.Int32[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.#ctor(System.Int32)
      commentId: M:eDIA.eParam.#ctor(System.Int32)
      language: CSharp
      name:
        CSharp: eParam(Int32)
        VB: eParam(Int32)
      nameWithType:
        CSharp: eParam.eParam(Int32)
        VB: eParam.eParam(Int32)
      qualifiedName:
        CSharp: eDIA.eParam.eParam(System.Int32)
        VB: eDIA.eParam.eParam(System.Int32)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: .ctor
        path: ''
        startLine: 5472
      syntax:
        content:
          CSharp: public eParam(int _int)
          VB: Public Sub New(_int As Integer)
        parameters:
        - id: _int
          type: System.Int32
      overload: eDIA.eParam.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.GetInt
      commentId: M:eDIA.eParam.GetInt
      language: CSharp
      name:
        CSharp: GetInt()
        VB: GetInt()
      nameWithType:
        CSharp: eParam.GetInt()
        VB: eParam.GetInt()
      qualifiedName:
        CSharp: eDIA.eParam.GetInt()
        VB: eDIA.eParam.GetInt()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: GetInt
        path: ''
        startLine: 5476
      syntax:
        content:
          CSharp: public int GetInt()
          VB: Public Function GetInt As Integer
        return:
          type: System.Int32
      overload: eDIA.eParam.GetInt*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.#ctor(System.Int32[])
      commentId: M:eDIA.eParam.#ctor(System.Int32[])
      language: CSharp
      name:
        CSharp: eParam(Int32[])
        VB: eParam(Int32())
      nameWithType:
        CSharp: eParam.eParam(Int32[])
        VB: eParam.eParam(Int32())
      qualifiedName:
        CSharp: eDIA.eParam.eParam(System.Int32[])
        VB: eDIA.eParam.eParam(System.Int32())
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: .ctor
        path: ''
        startLine: 5481
      summary: 'Pass on value array &quot;new int[] { value01, value02, .. }&quot; '
      example: []
      syntax:
        content:
          CSharp: public eParam(int[] _ints)
          VB: Public Sub New(_ints As Integer())
        parameters:
        - id: _ints
          type: System.Int32[]
      overload: eDIA.eParam.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.GetInts
      commentId: M:eDIA.eParam.GetInts
      language: CSharp
      name:
        CSharp: GetInts()
        VB: GetInts()
      nameWithType:
        CSharp: eParam.GetInts()
        VB: eParam.GetInts()
      qualifiedName:
        CSharp: eDIA.eParam.GetInts()
        VB: eDIA.eParam.GetInts()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: GetInts
        path: ''
        startLine: 5485
      syntax:
        content:
          CSharp: public int[] GetInts()
          VB: Public Function GetInts As Integer()
        return:
          type: System.Int32[]
      overload: eDIA.eParam.GetInts*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.GetIntAt(System.Int32)
      commentId: M:eDIA.eParam.GetIntAt(System.Int32)
      language: CSharp
      name:
        CSharp: GetIntAt(Int32)
        VB: GetIntAt(Int32)
      nameWithType:
        CSharp: eParam.GetIntAt(Int32)
        VB: eParam.GetIntAt(Int32)
      qualifiedName:
        CSharp: eDIA.eParam.GetIntAt(System.Int32)
        VB: eDIA.eParam.GetIntAt(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: GetIntAt
        path: ''
        startLine: 5489
      syntax:
        content:
          CSharp: public int GetIntAt(int _index)
          VB: Public Function GetIntAt(_index As Integer) As Integer
        parameters:
        - id: _index
          type: System.Int32
        return:
          type: System.Int32
      overload: eDIA.eParam.GetIntAt*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.boolP
      commentId: F:eDIA.eParam.boolP
      language: CSharp
      name:
        CSharp: boolP
        VB: boolP
      nameWithType:
        CSharp: eParam.boolP
        VB: eParam.boolP
      qualifiedName:
        CSharp: eDIA.eParam.boolP
        VB: eDIA.eParam.boolP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: boolP
        path: ''
        startLine: 5494
      syntax:
        content:
          CSharp: public bool boolP
          VB: Public boolP As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.boolPs
      commentId: F:eDIA.eParam.boolPs
      language: CSharp
      name:
        CSharp: boolPs
        VB: boolPs
      nameWithType:
        CSharp: eParam.boolPs
        VB: eParam.boolPs
      qualifiedName:
        CSharp: eDIA.eParam.boolPs
        VB: eDIA.eParam.boolPs
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: boolPs
        path: ''
        startLine: 5495
      syntax:
        content:
          CSharp: public bool[] boolPs
          VB: Public boolPs As Boolean()
        return:
          type: System.Boolean[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.#ctor(System.Boolean)
      commentId: M:eDIA.eParam.#ctor(System.Boolean)
      language: CSharp
      name:
        CSharp: eParam(Boolean)
        VB: eParam(Boolean)
      nameWithType:
        CSharp: eParam.eParam(Boolean)
        VB: eParam.eParam(Boolean)
      qualifiedName:
        CSharp: eDIA.eParam.eParam(System.Boolean)
        VB: eDIA.eParam.eParam(System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: .ctor
        path: ''
        startLine: 5497
      syntax:
        content:
          CSharp: public eParam(bool _bool)
          VB: Public Sub New(_bool As Boolean)
        parameters:
        - id: _bool
          type: System.Boolean
      overload: eDIA.eParam.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.GetBool
      commentId: M:eDIA.eParam.GetBool
      language: CSharp
      name:
        CSharp: GetBool()
        VB: GetBool()
      nameWithType:
        CSharp: eParam.GetBool()
        VB: eParam.GetBool()
      qualifiedName:
        CSharp: eDIA.eParam.GetBool()
        VB: eDIA.eParam.GetBool()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: GetBool
        path: ''
        startLine: 5501
      syntax:
        content:
          CSharp: public bool GetBool()
          VB: Public Function GetBool As Boolean
        return:
          type: System.Boolean
      overload: eDIA.eParam.GetBool*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.#ctor(System.Boolean[])
      commentId: M:eDIA.eParam.#ctor(System.Boolean[])
      language: CSharp
      name:
        CSharp: eParam(Boolean[])
        VB: eParam(Boolean())
      nameWithType:
        CSharp: eParam.eParam(Boolean[])
        VB: eParam.eParam(Boolean())
      qualifiedName:
        CSharp: eDIA.eParam.eParam(System.Boolean[])
        VB: eDIA.eParam.eParam(System.Boolean())
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: .ctor
        path: ''
        startLine: 5506
      summary: 'Pass on value array &quot;new bool[] { value01, value02, .. }&quot; '
      example: []
      syntax:
        content:
          CSharp: public eParam(bool[] _boolPs)
          VB: Public Sub New(_boolPs As Boolean())
        parameters:
        - id: _boolPs
          type: System.Boolean[]
      overload: eDIA.eParam.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.GetBools
      commentId: M:eDIA.eParam.GetBools
      language: CSharp
      name:
        CSharp: GetBools()
        VB: GetBools()
      nameWithType:
        CSharp: eParam.GetBools()
        VB: eParam.GetBools()
      qualifiedName:
        CSharp: eDIA.eParam.GetBools()
        VB: eDIA.eParam.GetBools()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: GetBools
        path: ''
        startLine: 5510
      syntax:
        content:
          CSharp: public bool[] GetBools()
          VB: Public Function GetBools As Boolean()
        return:
          type: System.Boolean[]
      overload: eDIA.eParam.GetBools*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.vector3P
      commentId: F:eDIA.eParam.vector3P
      language: CSharp
      name:
        CSharp: vector3P
        VB: vector3P
      nameWithType:
        CSharp: eParam.vector3P
        VB: eParam.vector3P
      qualifiedName:
        CSharp: eDIA.eParam.vector3P
        VB: eDIA.eParam.vector3P
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: vector3P
        path: ''
        startLine: 5515
      syntax:
        content:
          CSharp: public Vector3 vector3P
          VB: Public vector3P As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.vector3Ps
      commentId: F:eDIA.eParam.vector3Ps
      language: CSharp
      name:
        CSharp: vector3Ps
        VB: vector3Ps
      nameWithType:
        CSharp: eParam.vector3Ps
        VB: eParam.vector3Ps
      qualifiedName:
        CSharp: eDIA.eParam.vector3Ps
        VB: eDIA.eParam.vector3Ps
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: vector3Ps
        path: ''
        startLine: 5516
      syntax:
        content:
          CSharp: public Vector3[] vector3Ps
          VB: Public vector3Ps As Vector3()
        return:
          type: Global.Vector3[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.#ctor(Vector3)
      commentId: M:eDIA.eParam.#ctor(Vector3)
      language: CSharp
      name:
        CSharp: eParam(Vector3)
        VB: eParam(Vector3)
      nameWithType:
        CSharp: eParam.eParam(Vector3)
        VB: eParam.eParam(Vector3)
      qualifiedName:
        CSharp: eDIA.eParam.eParam(Vector3)
        VB: eDIA.eParam.eParam(Vector3)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: .ctor
        path: ''
        startLine: 5518
      syntax:
        content:
          CSharp: public eParam(Vector3 _vector3)
          VB: Public Sub New(_vector3 As Vector3)
        parameters:
        - id: _vector3
          type: Global.Vector3
      overload: eDIA.eParam.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.GetVector3
      commentId: M:eDIA.eParam.GetVector3
      language: CSharp
      name:
        CSharp: GetVector3()
        VB: GetVector3()
      nameWithType:
        CSharp: eParam.GetVector3()
        VB: eParam.GetVector3()
      qualifiedName:
        CSharp: eDIA.eParam.GetVector3()
        VB: eDIA.eParam.GetVector3()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: GetVector3
        path: ''
        startLine: 5522
      syntax:
        content:
          CSharp: public Vector3 GetVector3()
          VB: Public Function GetVector3 As Vector3
        return:
          type: Global.Vector3
      overload: eDIA.eParam.GetVector3*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.objectP
      commentId: F:eDIA.eParam.objectP
      language: CSharp
      name:
        CSharp: objectP
        VB: objectP
      nameWithType:
        CSharp: eParam.objectP
        VB: eParam.objectP
      qualifiedName:
        CSharp: eDIA.eParam.objectP
        VB: eDIA.eParam.objectP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: objectP
        path: ''
        startLine: 5527
      syntax:
        content:
          CSharp: public object objectP
          VB: Public objectP As Object
        return:
          type: System.Object
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.#ctor(System.Object)
      commentId: M:eDIA.eParam.#ctor(System.Object)
      language: CSharp
      name:
        CSharp: eParam(Object)
        VB: eParam(Object)
      nameWithType:
        CSharp: eParam.eParam(Object)
        VB: eParam.eParam(Object)
      qualifiedName:
        CSharp: eDIA.eParam.eParam(System.Object)
        VB: eDIA.eParam.eParam(System.Object)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: .ctor
        path: ''
        startLine: 5529
      syntax:
        content:
          CSharp: public eParam(object _objectP)
          VB: Public Sub New(_objectP As Object)
        parameters:
        - id: _objectP
          type: System.Object
      overload: eDIA.eParam.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.GetObject
      commentId: M:eDIA.eParam.GetObject
      language: CSharp
      name:
        CSharp: GetObject()
        VB: GetObject()
      nameWithType:
        CSharp: eParam.GetObject()
        VB: eParam.GetObject()
      qualifiedName:
        CSharp: eDIA.eParam.GetObject()
        VB: eDIA.eParam.GetObject()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: GetObject
        path: ''
        startLine: 5533
      syntax:
        content:
          CSharp: public object GetObject()
          VB: Public Function GetObject As Object
        return:
          type: System.Object
      overload: eDIA.eParam.GetObject*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.transformP
      commentId: F:eDIA.eParam.transformP
      language: CSharp
      name:
        CSharp: transformP
        VB: transformP
      nameWithType:
        CSharp: eParam.transformP
        VB: eParam.transformP
      qualifiedName:
        CSharp: eDIA.eParam.transformP
        VB: eDIA.eParam.transformP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: transformP
        path: ''
        startLine: 5538
      syntax:
        content:
          CSharp: public Transform transformP
          VB: Public transformP As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.#ctor(Transform)
      commentId: M:eDIA.eParam.#ctor(Transform)
      language: CSharp
      name:
        CSharp: eParam(Transform)
        VB: eParam(Transform)
      nameWithType:
        CSharp: eParam.eParam(Transform)
        VB: eParam.eParam(Transform)
      qualifiedName:
        CSharp: eDIA.eParam.eParam(Transform)
        VB: eDIA.eParam.eParam(Transform)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: .ctor
        path: ''
        startLine: 5540
      syntax:
        content:
          CSharp: public eParam(Transform _transformP)
          VB: Public Sub New(_transformP As Transform)
        parameters:
        - id: _transformP
          type: Global.Transform
      overload: eDIA.eParam.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.GetTransform
      commentId: M:eDIA.eParam.GetTransform
      language: CSharp
      name:
        CSharp: GetTransform()
        VB: GetTransform()
      nameWithType:
        CSharp: eParam.GetTransform()
        VB: eParam.GetTransform()
      qualifiedName:
        CSharp: eDIA.eParam.GetTransform()
        VB: eDIA.eParam.GetTransform()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: GetTransform
        path: ''
        startLine: 5544
      syntax:
        content:
          CSharp: public Transform GetTransform()
          VB: Public Function GetTransform As Transform
        return:
          type: Global.Transform
      overload: eDIA.eParam.GetTransform*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.stringBool
      commentId: F:eDIA.eParam.stringBool
      language: CSharp
      name:
        CSharp: stringBool
        VB: stringBool
      nameWithType:
        CSharp: eParam.stringBool
        VB: eParam.stringBool
      qualifiedName:
        CSharp: eDIA.eParam.stringBool
        VB: eDIA.eParam.stringBool
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: stringBool
        path: ''
        startLine: 5554
      syntax:
        content:
          CSharp: public eParam.StringBool stringBool
          VB: Public stringBool As eParam.StringBool
        return:
          type: eDIA.eParam.StringBool
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.#ctor(System.String,System.Boolean)
      commentId: M:eDIA.eParam.#ctor(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: eParam(String, Boolean)
        VB: eParam(String, Boolean)
      nameWithType:
        CSharp: eParam.eParam(String, Boolean)
        VB: eParam.eParam(String, Boolean)
      qualifiedName:
        CSharp: eDIA.eParam.eParam(System.String, System.Boolean)
        VB: eDIA.eParam.eParam(System.String, System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: .ctor
        path: ''
        startLine: 5555
      syntax:
        content:
          CSharp: public eParam(string _string, bool _bool)
          VB: Public Sub New(_string As String, _bool As Boolean)
        parameters:
        - id: _string
          type: System.String
        - id: _bool
          type: System.Boolean
      overload: eDIA.eParam.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.GetStringBoolString
      commentId: M:eDIA.eParam.GetStringBoolString
      language: CSharp
      name:
        CSharp: GetStringBoolString()
        VB: GetStringBoolString()
      nameWithType:
        CSharp: eParam.GetStringBoolString()
        VB: eParam.GetStringBoolString()
      qualifiedName:
        CSharp: eDIA.eParam.GetStringBoolString()
        VB: eDIA.eParam.GetStringBoolString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: GetStringBoolString
        path: ''
        startLine: 5560
      syntax:
        content:
          CSharp: public string GetStringBoolString()
          VB: Public Function GetStringBoolString As String
        return:
          type: System.String
      overload: eDIA.eParam.GetStringBoolString*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.GetStringBoolBool
      commentId: M:eDIA.eParam.GetStringBoolBool
      language: CSharp
      name:
        CSharp: GetStringBoolBool()
        VB: GetStringBoolBool()
      nameWithType:
        CSharp: eParam.GetStringBoolBool()
        VB: eParam.GetStringBoolBool()
      qualifiedName:
        CSharp: eDIA.eParam.GetStringBoolBool()
        VB: eDIA.eParam.GetStringBoolBool()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: GetStringBoolBool
        path: ''
        startLine: 5564
      syntax:
        content:
          CSharp: public bool GetStringBoolBool()
          VB: Public Function GetStringBoolBool As Boolean
        return:
          type: System.Boolean
      overload: eDIA.eParam.GetStringBoolBool*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.eParam.StringBool
    commentId: T:eDIA.eParam.StringBool
    language: CSharp
    name:
      CSharp: eParam.StringBool
      VB: eParam.StringBool
    nameWithType:
      CSharp: eParam.StringBool
      VB: eParam.StringBool
    qualifiedName:
      CSharp: eDIA.eParam.StringBool
      VB: eDIA.eParam.StringBool
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: StringBool
      path: ''
      startLine: 5549
    syntax:
      content:
        CSharp: public class StringBool
        VB: Public Class StringBool
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.eParam.StringBool.stringP
      commentId: F:eDIA.eParam.StringBool.stringP
      language: CSharp
      name:
        CSharp: stringP
        VB: stringP
      nameWithType:
        CSharp: eParam.StringBool.stringP
        VB: eParam.StringBool.stringP
      qualifiedName:
        CSharp: eDIA.eParam.StringBool.stringP
        VB: eDIA.eParam.StringBool.stringP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: stringP
        path: ''
        startLine: 5550
      syntax:
        content:
          CSharp: public string stringP
          VB: Public stringP As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.eParam.StringBool.boolP
      commentId: F:eDIA.eParam.StringBool.boolP
      language: CSharp
      name:
        CSharp: boolP
        VB: boolP
      nameWithType:
        CSharp: eParam.StringBool.boolP
        VB: eParam.StringBool.boolP
      qualifiedName:
        CSharp: eDIA.eParam.StringBool.boolP
        VB: eDIA.eParam.StringBool.boolP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: boolP
        path: ''
        startLine: 5551
      syntax:
        content:
          CSharp: public bool boolP
          VB: Public boolP As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.EventManager
    commentId: T:eDIA.EventManager
    language: CSharp
    name:
      CSharp: EventManager
      VB: EventManager
    nameWithType:
      CSharp: EventManager
      VB: EventManager
    qualifiedName:
      CSharp: eDIA.EventManager
      VB: eDIA.EventManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: EventManager
      path: ''
      startLine: 5579
    summary: "\nEventManager handles eventlisteners and fire events when triggered.<br />\nIt uses <code>eparam</code> class to be able to send custom packages along with the event.\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class EventManager
        VB: >-
          <Serializable>

          Public Class EventManager
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.EventManager.showLog
      commentId: P:eDIA.EventManager.showLog
      language: CSharp
      name:
        CSharp: showLog
        VB: showLog
      nameWithType:
        CSharp: EventManager.showLog
        VB: EventManager.showLog
      qualifiedName:
        CSharp: eDIA.EventManager.showLog
        VB: eDIA.EventManager.showLog
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: showLog
        path: ''
        startLine: 5583
      syntax:
        content:
          CSharp: public static bool showLog { get; set; }
          VB: Public Shared Property showLog As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: eDIA.EventManager.showLog*
      modifiers:
        CSharp:
        - public
        - static
        - get
        - set
        VB:
        - Public
        - Shared
    - id: eDIA.EventManager.StartListening(System.String,System.Action{eDIA.eParam})
      commentId: M:eDIA.EventManager.StartListening(System.String,System.Action{eDIA.eParam})
      language: CSharp
      name:
        CSharp: StartListening(String, Action<eParam>)
        VB: StartListening(String, Action(Of eParam))
      nameWithType:
        CSharp: EventManager.StartListening(String, Action<eParam>)
        VB: EventManager.StartListening(String, Action(Of eParam))
      qualifiedName:
        CSharp: eDIA.EventManager.StartListening(System.String, System.Action<eDIA.eParam>)
        VB: eDIA.EventManager.StartListening(System.String, System.Action(Of eDIA.eParam))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: StartListening
        path: ''
        startLine: 5590
      summary: "\nStarts a listener to the given <code>eventName</code> string\n"
      example: []
      syntax:
        content:
          CSharp: public static void StartListening(string eventName, Action<eParam> listener)
          VB: Public Shared Sub StartListening(eventName As String, listener As Action(Of eParam))
        parameters:
        - id: eventName
          type: System.String
          description: String definition of the event
        - id: listener
          type: System.Action{eDIA.eParam}
          description: Method to trigger when event is fired
      overload: eDIA.EventManager.StartListening*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.EventManager.StopListening(System.String,System.Action{eDIA.eParam})
      commentId: M:eDIA.EventManager.StopListening(System.String,System.Action{eDIA.eParam})
      language: CSharp
      name:
        CSharp: StopListening(String, Action<eParam>)
        VB: StopListening(String, Action(Of eParam))
      nameWithType:
        CSharp: EventManager.StopListening(String, Action<eParam>)
        VB: EventManager.StopListening(String, Action(Of eParam))
      qualifiedName:
        CSharp: eDIA.EventManager.StopListening(System.String, System.Action<eDIA.eParam>)
        VB: eDIA.EventManager.StopListening(System.String, System.Action(Of eDIA.eParam))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: StopListening
        path: ''
        startLine: 5615
      summary: "\nStops the listener, if any, to the given <code>eventName</code> string\n"
      example: []
      syntax:
        content:
          CSharp: public static void StopListening(string eventName, Action<eParam> listener)
          VB: Public Shared Sub StopListening(eventName As String, listener As Action(Of eParam))
        parameters:
        - id: eventName
          type: System.String
          description: String definition of the event
        - id: listener
          type: System.Action{eDIA.eParam}
          description: Method to trigger when event is fired
      overload: eDIA.EventManager.StopListening*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.EventManager.TriggerEvent(System.String,eDIA.eParam)
      commentId: M:eDIA.EventManager.TriggerEvent(System.String,eDIA.eParam)
      language: CSharp
      name:
        CSharp: TriggerEvent(String, eParam)
        VB: TriggerEvent(String, eParam)
      nameWithType:
        CSharp: EventManager.TriggerEvent(String, eParam)
        VB: EventManager.TriggerEvent(String, eParam)
      qualifiedName:
        CSharp: eDIA.EventManager.TriggerEvent(System.String, eDIA.eParam)
        VB: eDIA.EventManager.TriggerEvent(System.String, eDIA.eParam)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: TriggerEvent
        path: ''
        startLine: 5636
      summary: "\nTriggers the event with the given eventname\n"
      example: []
      syntax:
        content:
          CSharp: public static void TriggerEvent(string eventName, eParam eventParam)
          VB: Public Shared Sub TriggerEvent(eventName As String, eventParam As eParam)
        parameters:
        - id: eventName
          type: System.String
          description: String definition of the event
        - id: eventParam
          type: eDIA.eParam
          description: Parameter package to pass along
      overload: eDIA.EventManager.TriggerEvent*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: eDIA.Constants
    commentId: T:eDIA.Constants
    language: CSharp
    name:
      CSharp: Constants
      VB: Constants
    nameWithType:
      CSharp: Constants
      VB: Constants
    qualifiedName:
      CSharp: eDIA.Constants
      VB: eDIA.Constants
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: Constants
      path: ''
      startLine: 5866
    summary: Static definitions
    example: []
    syntax:
      content:
        CSharp: public static class Constants
        VB: Public Module Constants
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: eDIA.Constants.localConfigDirectoryName
      commentId: F:eDIA.Constants.localConfigDirectoryName
      language: CSharp
      name:
        CSharp: localConfigDirectoryName
        VB: localConfigDirectoryName
      nameWithType:
        CSharp: Constants.localConfigDirectoryName
        VB: Constants.localConfigDirectoryName
      qualifiedName:
        CSharp: eDIA.Constants.localConfigDirectoryName
        VB: eDIA.Constants.localConfigDirectoryName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: localConfigDirectoryName
        path: ''
        startLine: 5867
      syntax:
        content:
          CSharp: public static string localConfigDirectoryName
          VB: Public Shared localConfigDirectoryName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Constants.screenResolutions
      commentId: F:eDIA.Constants.screenResolutions
      language: CSharp
      name:
        CSharp: screenResolutions
        VB: screenResolutions
      nameWithType:
        CSharp: Constants.screenResolutions
        VB: Constants.screenResolutions
      qualifiedName:
        CSharp: eDIA.Constants.screenResolutions
        VB: eDIA.Constants.screenResolutions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: screenResolutions
        path: ''
        startLine: 5878
      syntax:
        content:
          CSharp: public static List<Vector2> screenResolutions
          VB: Public Shared screenResolutions As List(Of Vector2)
        return:
          type: System.Collections.Generic.List{Vector2}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: eDIA.Constants.Interactor
    commentId: T:eDIA.Constants.Interactor
    language: CSharp
    name:
      CSharp: Constants.Interactor
      VB: Constants.Interactor
    nameWithType:
      CSharp: Constants.Interactor
      VB: Constants.Interactor
    qualifiedName:
      CSharp: eDIA.Constants.Interactor
      VB: eDIA.Constants.Interactor
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: Interactor
      path: ''
      startLine: 5869
    syntax:
      content:
        CSharp: public enum Interactor
        VB: Public Enum Interactor
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: eDIA.Constants.Interactor.LEFT
      commentId: F:eDIA.Constants.Interactor.LEFT
      language: CSharp
      name:
        CSharp: LEFT
        VB: LEFT
      nameWithType:
        CSharp: Constants.Interactor.LEFT
        VB: Constants.Interactor.LEFT
      qualifiedName:
        CSharp: eDIA.Constants.Interactor.LEFT
        VB: eDIA.Constants.Interactor.LEFT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: LEFT
        path: ''
        startLine: 5869
      syntax:
        content:
          CSharp: LEFT = 0
          VB: LEFT = 0
        return:
          type: eDIA.Constants.Interactor
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: eDIA.Constants.Interactor.RIGHT
      commentId: F:eDIA.Constants.Interactor.RIGHT
      language: CSharp
      name:
        CSharp: RIGHT
        VB: RIGHT
      nameWithType:
        CSharp: Constants.Interactor.RIGHT
        VB: Constants.Interactor.RIGHT
      qualifiedName:
        CSharp: eDIA.Constants.Interactor.RIGHT
        VB: eDIA.Constants.Interactor.RIGHT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: RIGHT
        path: ''
        startLine: 5869
      syntax:
        content:
          CSharp: RIGHT = 1
          VB: RIGHT = 1
        return:
          type: eDIA.Constants.Interactor
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: eDIA.Constants.Interactor.BOTH
      commentId: F:eDIA.Constants.Interactor.BOTH
      language: CSharp
      name:
        CSharp: BOTH
        VB: BOTH
      nameWithType:
        CSharp: Constants.Interactor.BOTH
        VB: Constants.Interactor.BOTH
      qualifiedName:
        CSharp: eDIA.Constants.Interactor.BOTH
        VB: eDIA.Constants.Interactor.BOTH
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: BOTH
        path: ''
        startLine: 5869
      syntax:
        content:
          CSharp: BOTH = 2
          VB: BOTH = 2
        return:
          type: eDIA.Constants.Interactor
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: eDIA.Constants.TargetHZ
    commentId: T:eDIA.Constants.TargetHZ
    language: CSharp
    name:
      CSharp: Constants.TargetHZ
      VB: Constants.TargetHZ
    nameWithType:
      CSharp: Constants.TargetHZ
      VB: Constants.TargetHZ
    qualifiedName:
      CSharp: eDIA.Constants.TargetHZ
      VB: eDIA.Constants.TargetHZ
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: TargetHZ
      path: ''
      startLine: 5872
    syntax:
      content:
        CSharp: public enum TargetHZ
        VB: Public Enum TargetHZ
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: eDIA.Constants.TargetHZ.NONE
      commentId: F:eDIA.Constants.TargetHZ.NONE
      language: CSharp
      name:
        CSharp: NONE
        VB: NONE
      nameWithType:
        CSharp: Constants.TargetHZ.NONE
        VB: Constants.TargetHZ.NONE
      qualifiedName:
        CSharp: eDIA.Constants.TargetHZ.NONE
        VB: eDIA.Constants.TargetHZ.NONE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: NONE
        path: ''
        startLine: 5872
      syntax:
        content:
          CSharp: NONE = 0
          VB: NONE = 0
        return:
          type: eDIA.Constants.TargetHZ
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: eDIA.Constants.TargetHZ.H60
      commentId: F:eDIA.Constants.TargetHZ.H60
      language: CSharp
      name:
        CSharp: H60
        VB: H60
      nameWithType:
        CSharp: Constants.TargetHZ.H60
        VB: Constants.TargetHZ.H60
      qualifiedName:
        CSharp: eDIA.Constants.TargetHZ.H60
        VB: eDIA.Constants.TargetHZ.H60
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: H60
        path: ''
        startLine: 5872
      syntax:
        content:
          CSharp: H60 = 1
          VB: H60 = 1
        return:
          type: eDIA.Constants.TargetHZ
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: eDIA.Constants.TargetHZ.H72
      commentId: F:eDIA.Constants.TargetHZ.H72
      language: CSharp
      name:
        CSharp: H72
        VB: H72
      nameWithType:
        CSharp: Constants.TargetHZ.H72
        VB: Constants.TargetHZ.H72
      qualifiedName:
        CSharp: eDIA.Constants.TargetHZ.H72
        VB: eDIA.Constants.TargetHZ.H72
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: H72
        path: ''
        startLine: 5872
      syntax:
        content:
          CSharp: H72 = 2
          VB: H72 = 2
        return:
          type: eDIA.Constants.TargetHZ
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: eDIA.Constants.TargetHZ.H90
      commentId: F:eDIA.Constants.TargetHZ.H90
      language: CSharp
      name:
        CSharp: H90
        VB: H90
      nameWithType:
        CSharp: Constants.TargetHZ.H90
        VB: Constants.TargetHZ.H90
      qualifiedName:
        CSharp: eDIA.Constants.TargetHZ.H90
        VB: eDIA.Constants.TargetHZ.H90
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: H90
        path: ''
        startLine: 5872
      syntax:
        content:
          CSharp: H90 = 3
          VB: H90 = 3
        return:
          type: eDIA.Constants.TargetHZ
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: eDIA.Constants.TargetHZ.H120
      commentId: F:eDIA.Constants.TargetHZ.H120
      language: CSharp
      name:
        CSharp: H120
        VB: H120
      nameWithType:
        CSharp: Constants.TargetHZ.H120
        VB: Constants.TargetHZ.H120
      qualifiedName:
        CSharp: eDIA.Constants.TargetHZ.H120
        VB: eDIA.Constants.TargetHZ.H120
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: H120
        path: ''
        startLine: 5872
      syntax:
        content:
          CSharp: H120 = 4
          VB: H120 = 4
        return:
          type: eDIA.Constants.TargetHZ
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: eDIA.Constants.Languages
    commentId: T:eDIA.Constants.Languages
    language: CSharp
    name:
      CSharp: Constants.Languages
      VB: Constants.Languages
    nameWithType:
      CSharp: Constants.Languages
      VB: Constants.Languages
    qualifiedName:
      CSharp: eDIA.Constants.Languages
      VB: eDIA.Constants.Languages
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: Languages
      path: ''
      startLine: 5875
    syntax:
      content:
        CSharp: public enum Languages
        VB: Public Enum Languages
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: eDIA.Constants.Languages.ENG
      commentId: F:eDIA.Constants.Languages.ENG
      language: CSharp
      name:
        CSharp: ENG
        VB: ENG
      nameWithType:
        CSharp: Constants.Languages.ENG
        VB: Constants.Languages.ENG
      qualifiedName:
        CSharp: eDIA.Constants.Languages.ENG
        VB: eDIA.Constants.Languages.ENG
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: ENG
        path: ''
        startLine: 5875
      syntax:
        content:
          CSharp: ENG = 0
          VB: ENG = 0
        return:
          type: eDIA.Constants.Languages
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: eDIA.Constants.Languages.DU
      commentId: F:eDIA.Constants.Languages.DU
      language: CSharp
      name:
        CSharp: DU
        VB: DU
      nameWithType:
        CSharp: Constants.Languages.DU
        VB: Constants.Languages.DU
      qualifiedName:
        CSharp: eDIA.Constants.Languages.DU
        VB: eDIA.Constants.Languages.DU
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: DU
        path: ''
        startLine: 5875
      syntax:
        content:
          CSharp: DU = 1
          VB: DU = 1
        return:
          type: eDIA.Constants.Languages
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: eDIA.Experiment
    commentId: T:eDIA.Experiment
    language: CSharp
    name:
      CSharp: Experiment
      VB: Experiment
    nameWithType:
      CSharp: Experiment
      VB: Experiment
    qualifiedName:
      CSharp: eDIA.Experiment
      VB: eDIA.Experiment
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: Experiment
      path: ''
      startLine: 5899
    syntax:
      content:
        CSharp: 'public class Experiment : Singleton<Experiment>'
        VB: >-
          Public Class Experiment

              Inherits Singleton(Of Experiment)
    inheritance:
    - System.Object
    - Global.Singleton{eDIA.Experiment}
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.Experiment.showLog
      commentId: F:eDIA.Experiment.showLog
      language: CSharp
      name:
        CSharp: showLog
        VB: showLog
      nameWithType:
        CSharp: Experiment.showLog
        VB: Experiment.showLog
      qualifiedName:
        CSharp: eDIA.Experiment.showLog
        VB: eDIA.Experiment.showLog
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: showLog
        path: ''
        startLine: 5902
      syntax:
        content:
          CSharp: public bool showLog
          VB: Public showLog As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.Experiment.taskColor
      commentId: F:eDIA.Experiment.taskColor
      language: CSharp
      name:
        CSharp: taskColor
        VB: taskColor
      nameWithType:
        CSharp: Experiment.taskColor
        VB: Experiment.taskColor
      qualifiedName:
        CSharp: eDIA.Experiment.taskColor
        VB: eDIA.Experiment.taskColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: taskColor
        path: ''
        startLine: 5903
      syntax:
        content:
          CSharp: public Color taskColor
          VB: Public taskColor As Color
        return:
          type: Global.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.Experiment.taskBlocks
      commentId: F:eDIA.Experiment.taskBlocks
      language: CSharp
      name:
        CSharp: taskBlocks
        VB: taskBlocks
      nameWithType:
        CSharp: Experiment.taskBlocks
        VB: Experiment.taskBlocks
      qualifiedName:
        CSharp: eDIA.Experiment.taskBlocks
        VB: eDIA.Experiment.taskBlocks
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: taskBlocks
        path: ''
        startLine: 5906
      syntax:
        content:
          CSharp: public List<TaskBlock> taskBlocks
          VB: Public taskBlocks As List(Of TaskBlock)
        return:
          type: System.Collections.Generic.List{eDIA.TaskBlock}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.Experiment.OnSessionStart
      commentId: F:eDIA.Experiment.OnSessionStart
      language: CSharp
      name:
        CSharp: OnSessionStart
        VB: OnSessionStart
      nameWithType:
        CSharp: Experiment.OnSessionStart
        VB: Experiment.OnSessionStart
      qualifiedName:
        CSharp: eDIA.Experiment.OnSessionStart
        VB: eDIA.Experiment.OnSessionStart
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: OnSessionStart
        path: ''
        startLine: 5910
      syntax:
        content:
          CSharp: public UnityEvent OnSessionStart
          VB: Public OnSessionStart As UnityEvent
        return:
          type: Global.UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.Experiment.OnSessionBreak
      commentId: F:eDIA.Experiment.OnSessionBreak
      language: CSharp
      name:
        CSharp: OnSessionBreak
        VB: OnSessionBreak
      nameWithType:
        CSharp: Experiment.OnSessionBreak
        VB: Experiment.OnSessionBreak
      qualifiedName:
        CSharp: eDIA.Experiment.OnSessionBreak
        VB: eDIA.Experiment.OnSessionBreak
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: OnSessionBreak
        path: ''
        startLine: 5911
      syntax:
        content:
          CSharp: public UnityEvent OnSessionBreak
          VB: Public OnSessionBreak As UnityEvent
        return:
          type: Global.UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.Experiment.OnSessionEnd
      commentId: F:eDIA.Experiment.OnSessionEnd
      language: CSharp
      name:
        CSharp: OnSessionEnd
        VB: OnSessionEnd
      nameWithType:
        CSharp: Experiment.OnSessionEnd
        VB: Experiment.OnSessionEnd
      qualifiedName:
        CSharp: eDIA.Experiment.OnSessionEnd
        VB: eDIA.Experiment.OnSessionEnd
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: OnSessionEnd
        path: ''
        startLine: 5912
      syntax:
        content:
          CSharp: public UnityEvent OnSessionEnd
          VB: Public OnSessionEnd As UnityEvent
        return:
          type: Global.UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.Experiment.experimentConfig
      commentId: F:eDIA.Experiment.experimentConfig
      language: CSharp
      name:
        CSharp: experimentConfig
        VB: experimentConfig
      nameWithType:
        CSharp: Experiment.experimentConfig
        VB: Experiment.experimentConfig
      qualifiedName:
        CSharp: eDIA.Experiment.experimentConfig
        VB: eDIA.Experiment.experimentConfig
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: experimentConfig
        path: ''
        startLine: 5916
      example: []
      syntax:
        content:
          CSharp: public ExperimentConfig experimentConfig
          VB: Public experimentConfig As ExperimentConfig
        return:
          type: eDIA.ExperimentConfig
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.Experiment.taskConfig
      commentId: F:eDIA.Experiment.taskConfig
      language: CSharp
      name:
        CSharp: taskConfig
        VB: taskConfig
      nameWithType:
        CSharp: Experiment.taskConfig
        VB: Experiment.taskConfig
      qualifiedName:
        CSharp: eDIA.Experiment.taskConfig
        VB: eDIA.Experiment.taskConfig
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: taskConfig
        path: ''
        startLine: 5918
      syntax:
        content:
          CSharp: public TaskConfig taskConfig
          VB: Public taskConfig As TaskConfig
        return:
          type: eDIA.TaskConfig
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.Experiment.currentStepNum
      commentId: F:eDIA.Experiment.currentStepNum
      language: CSharp
      name:
        CSharp: currentStepNum
        VB: currentStepNum
      nameWithType:
        CSharp: Experiment.currentStepNum
        VB: Experiment.currentStepNum
      qualifiedName:
        CSharp: eDIA.Experiment.currentStepNum
        VB: eDIA.Experiment.currentStepNum
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: currentStepNum
        path: ''
        startLine: 5930
      summary: 'Currently active step number. '
      example: []
      syntax:
        content:
          CSharp: public int currentStepNum
          VB: Public currentStepNum As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.Experiment.StartExperiment
      commentId: M:eDIA.Experiment.StartExperiment
      language: CSharp
      name:
        CSharp: StartExperiment()
        VB: StartExperiment()
      nameWithType:
        CSharp: Experiment.StartExperiment()
        VB: Experiment.StartExperiment()
      qualifiedName:
        CSharp: eDIA.Experiment.StartExperiment()
        VB: eDIA.Experiment.StartExperiment()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: StartExperiment
        path: ''
        startLine: 6052
      summary: Starts the experiment
      example: []
      syntax:
        content:
          CSharp: public void StartExperiment()
          VB: Public Sub StartExperiment
      overload: eDIA.Experiment.StartExperiment*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.Experiment.EnablePauseButton(System.Boolean)
      commentId: M:eDIA.Experiment.EnablePauseButton(System.Boolean)
      language: CSharp
      name:
        CSharp: EnablePauseButton(Boolean)
        VB: EnablePauseButton(Boolean)
      nameWithType:
        CSharp: Experiment.EnablePauseButton(Boolean)
        VB: Experiment.EnablePauseButton(Boolean)
      qualifiedName:
        CSharp: eDIA.Experiment.EnablePauseButton(System.Boolean)
        VB: eDIA.Experiment.EnablePauseButton(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: EnablePauseButton
        path: ''
        startLine: 6086
      syntax:
        content:
          CSharp: public void EnablePauseButton(bool _onOff)
          VB: Public Sub EnablePauseButton(_onOff As Boolean)
        parameters:
        - id: _onOff
          type: System.Boolean
      overload: eDIA.Experiment.EnablePauseButton*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.Experiment.WaitOnProceed
      commentId: M:eDIA.Experiment.WaitOnProceed
      language: CSharp
      name:
        CSharp: WaitOnProceed()
        VB: WaitOnProceed()
      nameWithType:
        CSharp: Experiment.WaitOnProceed()
        VB: Experiment.WaitOnProceed()
      qualifiedName:
        CSharp: eDIA.Experiment.WaitOnProceed()
        VB: eDIA.Experiment.WaitOnProceed()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: WaitOnProceed
        path: ''
        startLine: 6091
      syntax:
        content:
          CSharp: public void WaitOnProceed()
          VB: Public Sub WaitOnProceed
      overload: eDIA.Experiment.WaitOnProceed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.Experiment.EnableEyeCalibrationTrigger(System.Boolean)
      commentId: M:eDIA.Experiment.EnableEyeCalibrationTrigger(System.Boolean)
      language: CSharp
      name:
        CSharp: EnableEyeCalibrationTrigger(Boolean)
        VB: EnableEyeCalibrationTrigger(Boolean)
      nameWithType:
        CSharp: Experiment.EnableEyeCalibrationTrigger(Boolean)
        VB: Experiment.EnableEyeCalibrationTrigger(Boolean)
      qualifiedName:
        CSharp: eDIA.Experiment.EnableEyeCalibrationTrigger(System.Boolean)
        VB: eDIA.Experiment.EnableEyeCalibrationTrigger(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: EnableEyeCalibrationTrigger
        path: ''
        startLine: 6105
      summary: Set system open for calibration call from event or button
      example: []
      syntax:
        content:
          CSharp: public void EnableEyeCalibrationTrigger(bool _onOff)
          VB: Public Sub EnableEyeCalibrationTrigger(_onOff As Boolean)
        parameters:
        - id: _onOff
          type: System.Boolean
      overload: eDIA.Experiment.EnableEyeCalibrationTrigger*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.Experiment.AddToTrialResults(System.String,System.String)
      commentId: M:eDIA.Experiment.AddToTrialResults(System.String,System.String)
      language: CSharp
      name:
        CSharp: AddToTrialResults(String, String)
        VB: AddToTrialResults(String, String)
      nameWithType:
        CSharp: Experiment.AddToTrialResults(String, String)
        VB: Experiment.AddToTrialResults(String, String)
      qualifiedName:
        CSharp: eDIA.Experiment.AddToTrialResults(System.String, System.String)
        VB: eDIA.Experiment.AddToTrialResults(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: AddToTrialResults
        path: ''
        startLine: 6124
      syntax:
        content:
          CSharp: public void AddToTrialResults(string key, string value)
          VB: Public Sub AddToTrialResults(key As String, value As String)
        parameters:
        - id: key
          type: System.String
        - id: value
          type: System.String
      overload: eDIA.Experiment.AddToTrialResults*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.Experiment.NextStepWithDelay(System.Single)
      commentId: M:eDIA.Experiment.NextStepWithDelay(System.Single)
      language: CSharp
      name:
        CSharp: NextStepWithDelay(Single)
        VB: NextStepWithDelay(Single)
      nameWithType:
        CSharp: Experiment.NextStepWithDelay(Single)
        VB: Experiment.NextStepWithDelay(Single)
      qualifiedName:
        CSharp: eDIA.Experiment.NextStepWithDelay(System.Single)
        VB: eDIA.Experiment.NextStepWithDelay(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: NextStepWithDelay
        path: ''
        startLine: 6358
      summary: Call next step in the trial with delay.
      example: []
      syntax:
        content:
          CSharp: public void NextStepWithDelay(float duration)
          VB: Public Sub NextStepWithDelay(duration As Single)
        parameters:
        - id: duration
          type: System.Single
          description: Time to wait before proceeding. Expects float
      overload: eDIA.Experiment.NextStepWithDelay*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.Experiment.NextStep
      commentId: M:eDIA.Experiment.NextStep
      language: CSharp
      name:
        CSharp: NextStep()
        VB: NextStep()
      nameWithType:
        CSharp: Experiment.NextStep()
        VB: Experiment.NextStep()
      qualifiedName:
        CSharp: eDIA.Experiment.NextStep()
        VB: eDIA.Experiment.NextStep()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: NextStep
        path: ''
        startLine: 6372
      summary: Call next step in the trial.
      example: []
      syntax:
        content:
          CSharp: public void NextStep()
          VB: Public Sub NextStep
      overload: eDIA.Experiment.NextStep*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.Experiment.ConvertAndSaveDataToUXF(System.String[],System.Collections.Generic.List{System.String[]},System.String)
      commentId: M:eDIA.Experiment.ConvertAndSaveDataToUXF(System.String[],System.Collections.Generic.List{System.String[]},System.String)
      language: CSharp
      name:
        CSharp: ConvertAndSaveDataToUXF(String[], List<String[]>, String)
        VB: ConvertAndSaveDataToUXF(String(), List(Of String()), String)
      nameWithType:
        CSharp: Experiment.ConvertAndSaveDataToUXF(String[], List<String[]>, String)
        VB: Experiment.ConvertAndSaveDataToUXF(String(), List(Of String()), String)
      qualifiedName:
        CSharp: eDIA.Experiment.ConvertAndSaveDataToUXF(System.String[], System.Collections.Generic.List<System.String[]>, System.String)
        VB: eDIA.Experiment.ConvertAndSaveDataToUXF(System.String(), System.Collections.Generic.List(Of System.String()), System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: ConvertAndSaveDataToUXF
        path: ''
        startLine: 6437
      syntax:
        content:
          CSharp: public void ConvertAndSaveDataToUXF(string[] headers, List<string[]> values, string filename)
          VB: Public Sub ConvertAndSaveDataToUXF(headers As String(), values As List(Of String()), filename As String)
        parameters:
        - id: headers
          type: System.String[]
        - id: values
          type: System.Collections.Generic.List{System.String[]}
        - id: filename
          type: System.String
      overload: eDIA.Experiment.ConvertAndSaveDataToUXF*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.Experiment.ConvertAndSaveDataToUXF(System.String[],System.Collections.Generic.List{System.Int32},System.String)
      commentId: M:eDIA.Experiment.ConvertAndSaveDataToUXF(System.String[],System.Collections.Generic.List{System.Int32},System.String)
      language: CSharp
      name:
        CSharp: ConvertAndSaveDataToUXF(String[], List<Int32>, String)
        VB: ConvertAndSaveDataToUXF(String(), List(Of Int32), String)
      nameWithType:
        CSharp: Experiment.ConvertAndSaveDataToUXF(String[], List<Int32>, String)
        VB: Experiment.ConvertAndSaveDataToUXF(String(), List(Of Int32), String)
      qualifiedName:
        CSharp: eDIA.Experiment.ConvertAndSaveDataToUXF(System.String[], System.Collections.Generic.List<System.Int32>, System.String)
        VB: eDIA.Experiment.ConvertAndSaveDataToUXF(System.String(), System.Collections.Generic.List(Of System.Int32), System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: ConvertAndSaveDataToUXF
        path: ''
        startLine: 6459
      syntax:
        content:
          CSharp: public void ConvertAndSaveDataToUXF(string[] headers, List<int> values, string filename)
          VB: Public Sub ConvertAndSaveDataToUXF(headers As String(), values As List(Of Integer), filename As String)
        parameters:
        - id: headers
          type: System.String[]
        - id: values
          type: System.Collections.Generic.List{System.Int32}
        - id: filename
          type: System.String
      overload: eDIA.Experiment.ConvertAndSaveDataToUXF*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.Experiment.SendMarker(System.String)
      commentId: M:eDIA.Experiment.SendMarker(System.String)
      language: CSharp
      name:
        CSharp: SendMarker(String)
        VB: SendMarker(String)
      nameWithType:
        CSharp: Experiment.SendMarker(String)
        VB: Experiment.SendMarker(String)
      qualifiedName:
        CSharp: eDIA.Experiment.SendMarker(System.String)
        VB: eDIA.Experiment.SendMarker(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: SendMarker
        path: ''
        startLine: 6483
      summary: "\nSaves a marker with a timestamp\n"
      example: []
      syntax:
        content:
          CSharp: public void SendMarker(string annotation)
          VB: Public Sub SendMarker(annotation As String)
        parameters:
        - id: annotation
          type: System.String
          description: Annotation to store
      overload: eDIA.Experiment.SendMarker*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.SettingsTuple
    commentId: T:eDIA.SettingsTuple
    language: CSharp
    name:
      CSharp: SettingsTuple
      VB: SettingsTuple
    nameWithType:
      CSharp: SettingsTuple
      VB: SettingsTuple
    qualifiedName:
      CSharp: eDIA.SettingsTuple
      VB: eDIA.SettingsTuple
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: SettingsTuple
      path: ''
      startLine: 6517
    summary: Tuple of strings, this is serializable in the inspector and dictionaries are not
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class SettingsTuple
        VB: >-
          <Serializable>

          Public Class SettingsTuple
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.SettingsTuple.key
      commentId: F:eDIA.SettingsTuple.key
      language: CSharp
      name:
        CSharp: key
        VB: key
      nameWithType:
        CSharp: SettingsTuple.key
        VB: SettingsTuple.key
      qualifiedName:
        CSharp: eDIA.SettingsTuple.key
        VB: eDIA.SettingsTuple.key
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: key
        path: ''
        startLine: 6520
      syntax:
        content:
          CSharp: public string key
          VB: Public key As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.SettingsTuple.value
      commentId: F:eDIA.SettingsTuple.value
      language: CSharp
      name:
        CSharp: value
        VB: value
      nameWithType:
        CSharp: SettingsTuple.value
        VB: SettingsTuple.value
      qualifiedName:
        CSharp: eDIA.SettingsTuple.value
        VB: eDIA.SettingsTuple.value
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: value
        path: ''
        startLine: 6521
      syntax:
        content:
          CSharp: public string value
          VB: Public value As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.ValueList
    commentId: T:eDIA.ValueList
    language: CSharp
    name:
      CSharp: ValueList
      VB: ValueList
    nameWithType:
      CSharp: ValueList
      VB: ValueList
    qualifiedName:
      CSharp: eDIA.ValueList
      VB: eDIA.ValueList
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: ValueList
      path: ''
      startLine: 6525
    summary: List of string values, in a class to make it serializable by JSON
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class ValueList
        VB: >-
          <Serializable>

          Public Class ValueList
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.ValueList.values
      commentId: F:eDIA.ValueList.values
      language: CSharp
      name:
        CSharp: values
        VB: values
      nameWithType:
        CSharp: ValueList.values
        VB: ValueList.values
      qualifiedName:
        CSharp: eDIA.ValueList.values
        VB: eDIA.ValueList.values
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: values
        path: ''
        startLine: 6527
      syntax:
        content:
          CSharp: public List<string> values
          VB: Public values As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.TrialSettings
    commentId: T:eDIA.TrialSettings
    language: CSharp
    name:
      CSharp: TrialSettings
      VB: TrialSettings
    nameWithType:
      CSharp: TrialSettings
      VB: TrialSettings
    qualifiedName:
      CSharp: eDIA.TrialSettings
      VB: eDIA.TrialSettings
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: TrialSettings
      path: ''
      startLine: 6531
    summary: Experiment trial settings container
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class TrialSettings
        VB: >-
          <Serializable>

          Public Class TrialSettings
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.TrialSettings.keys
      commentId: F:eDIA.TrialSettings.keys
      language: CSharp
      name:
        CSharp: keys
        VB: keys
      nameWithType:
        CSharp: TrialSettings.keys
        VB: TrialSettings.keys
      qualifiedName:
        CSharp: eDIA.TrialSettings.keys
        VB: eDIA.TrialSettings.keys
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: keys
        path: ''
        startLine: 6534
      syntax:
        content:
          CSharp: public List<string> keys
          VB: Public keys As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.TrialSettings.valueList
      commentId: F:eDIA.TrialSettings.valueList
      language: CSharp
      name:
        CSharp: valueList
        VB: valueList
      nameWithType:
        CSharp: TrialSettings.valueList
        VB: TrialSettings.valueList
      qualifiedName:
        CSharp: eDIA.TrialSettings.valueList
        VB: eDIA.TrialSettings.valueList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: valueList
        path: ''
        startLine: 6535
      syntax:
        content:
          CSharp: public List<ValueList> valueList
          VB: Public valueList As List(Of ValueList)
        return:
          type: System.Collections.Generic.List{eDIA.ValueList}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.ExperimentBlock
    commentId: T:eDIA.ExperimentBlock
    language: CSharp
    name:
      CSharp: ExperimentBlock
      VB: ExperimentBlock
    nameWithType:
      CSharp: ExperimentBlock
      VB: ExperimentBlock
    qualifiedName:
      CSharp: eDIA.ExperimentBlock
      VB: eDIA.ExperimentBlock
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: ExperimentBlock
      path: ''
      startLine: 6539
    summary: 'Experiment block container  '
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class ExperimentBlock
        VB: >-
          <Serializable>

          Public Class ExperimentBlock
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.ExperimentBlock.block_name
      commentId: F:eDIA.ExperimentBlock.block_name
      language: CSharp
      name:
        CSharp: block_name
        VB: block_name
      nameWithType:
        CSharp: ExperimentBlock.block_name
        VB: ExperimentBlock.block_name
      qualifiedName:
        CSharp: eDIA.ExperimentBlock.block_name
        VB: eDIA.ExperimentBlock.block_name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: block_name
        path: ''
        startLine: 6541
      syntax:
        content:
          CSharp: public string block_name
          VB: Public block_name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.ExperimentBlock.intro
      commentId: F:eDIA.ExperimentBlock.intro
      language: CSharp
      name:
        CSharp: intro
        VB: intro
      nameWithType:
        CSharp: ExperimentBlock.intro
        VB: ExperimentBlock.intro
      qualifiedName:
        CSharp: eDIA.ExperimentBlock.intro
        VB: eDIA.ExperimentBlock.intro
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: intro
        path: ''
        startLine: 6542
      syntax:
        content:
          CSharp: public string intro
          VB: Public intro As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.ExperimentBlock.outro
      commentId: F:eDIA.ExperimentBlock.outro
      language: CSharp
      name:
        CSharp: outro
        VB: outro
      nameWithType:
        CSharp: ExperimentBlock.outro
        VB: ExperimentBlock.outro
      qualifiedName:
        CSharp: eDIA.ExperimentBlock.outro
        VB: eDIA.ExperimentBlock.outro
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: outro
        path: ''
        startLine: 6543
      syntax:
        content:
          CSharp: public string outro
          VB: Public outro As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.ExperimentBlock.block_settings
      commentId: F:eDIA.ExperimentBlock.block_settings
      language: CSharp
      name:
        CSharp: block_settings
        VB: block_settings
      nameWithType:
        CSharp: ExperimentBlock.block_settings
        VB: ExperimentBlock.block_settings
      qualifiedName:
        CSharp: eDIA.ExperimentBlock.block_settings
        VB: eDIA.ExperimentBlock.block_settings
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: block_settings
        path: ''
        startLine: 6544
      syntax:
        content:
          CSharp: public List<SettingsTuple> block_settings
          VB: Public block_settings As List(Of SettingsTuple)
        return:
          type: System.Collections.Generic.List{eDIA.SettingsTuple}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.ExperimentBlock.trial_settings
      commentId: F:eDIA.ExperimentBlock.trial_settings
      language: CSharp
      name:
        CSharp: trial_settings
        VB: trial_settings
      nameWithType:
        CSharp: ExperimentBlock.trial_settings
        VB: ExperimentBlock.trial_settings
      qualifiedName:
        CSharp: eDIA.ExperimentBlock.trial_settings
        VB: eDIA.ExperimentBlock.trial_settings
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: trial_settings
        path: ''
        startLine: 6545
      syntax:
        content:
          CSharp: public TrialSettings trial_settings
          VB: Public trial_settings As TrialSettings
        return:
          type: eDIA.TrialSettings
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.ExperimentConfig
    commentId: T:eDIA.ExperimentConfig
    language: CSharp
    name:
      CSharp: ExperimentConfig
      VB: ExperimentConfig
    nameWithType:
      CSharp: ExperimentConfig
      VB: ExperimentConfig
    qualifiedName:
      CSharp: eDIA.ExperimentConfig
      VB: eDIA.ExperimentConfig
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: ExperimentConfig
      path: ''
      startLine: 6550
    summary: Experiment config container
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class ExperimentConfig
        VB: >-
          <Serializable>

          Public Class ExperimentConfig
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.ExperimentConfig.experiment
      commentId: F:eDIA.ExperimentConfig.experiment
      language: CSharp
      name:
        CSharp: experiment
        VB: experiment
      nameWithType:
        CSharp: ExperimentConfig.experiment
        VB: ExperimentConfig.experiment
      qualifiedName:
        CSharp: eDIA.ExperimentConfig.experiment
        VB: eDIA.ExperimentConfig.experiment
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: experiment
        path: ''
        startLine: 6552
      syntax:
        content:
          CSharp: public string experiment
          VB: Public experiment As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.ExperimentConfig.experimenter
      commentId: F:eDIA.ExperimentConfig.experimenter
      language: CSharp
      name:
        CSharp: experimenter
        VB: experimenter
      nameWithType:
        CSharp: ExperimentConfig.experimenter
        VB: ExperimentConfig.experimenter
      qualifiedName:
        CSharp: eDIA.ExperimentConfig.experimenter
        VB: eDIA.ExperimentConfig.experimenter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: experimenter
        path: ''
        startLine: 6553
      syntax:
        content:
          CSharp: public string experimenter
          VB: Public experimenter As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.ExperimentConfig.session_number
      commentId: F:eDIA.ExperimentConfig.session_number
      language: CSharp
      name:
        CSharp: session_number
        VB: session_number
      nameWithType:
        CSharp: ExperimentConfig.session_number
        VB: ExperimentConfig.session_number
      qualifiedName:
        CSharp: eDIA.ExperimentConfig.session_number
        VB: eDIA.ExperimentConfig.session_number
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: session_number
        path: ''
        startLine: 6554
      syntax:
        content:
          CSharp: public int session_number
          VB: Public session_number As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.ExperimentConfig.participant_details
      commentId: F:eDIA.ExperimentConfig.participant_details
      language: CSharp
      name:
        CSharp: participant_details
        VB: participant_details
      nameWithType:
        CSharp: ExperimentConfig.participant_details
        VB: ExperimentConfig.participant_details
      qualifiedName:
        CSharp: eDIA.ExperimentConfig.participant_details
        VB: eDIA.ExperimentConfig.participant_details
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: participant_details
        path: ''
        startLine: 6555
      syntax:
        content:
          CSharp: public List<SettingsTuple> participant_details
          VB: Public participant_details As List(Of SettingsTuple)
        return:
          type: System.Collections.Generic.List{eDIA.SettingsTuple}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.ExperimentConfig.isReady
      commentId: F:eDIA.ExperimentConfig.isReady
      language: CSharp
      name:
        CSharp: isReady
        VB: isReady
      nameWithType:
        CSharp: ExperimentConfig.isReady
        VB: ExperimentConfig.isReady
      qualifiedName:
        CSharp: eDIA.ExperimentConfig.isReady
        VB: eDIA.ExperimentConfig.isReady
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: isReady
        path: ''
        startLine: 6558
      syntax:
        content:
          CSharp: public bool isReady
          VB: Public isReady As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.ExperimentConfig.GetExperimentSummary
      commentId: M:eDIA.ExperimentConfig.GetExperimentSummary
      language: CSharp
      name:
        CSharp: GetExperimentSummary()
        VB: GetExperimentSummary()
      nameWithType:
        CSharp: ExperimentConfig.GetExperimentSummary()
        VB: ExperimentConfig.GetExperimentSummary()
      qualifiedName:
        CSharp: eDIA.ExperimentConfig.GetExperimentSummary()
        VB: eDIA.ExperimentConfig.GetExperimentSummary()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: GetExperimentSummary
        path: ''
        startLine: 6561
      syntax:
        content:
          CSharp: public string[] GetExperimentSummary()
          VB: Public Function GetExperimentSummary As String()
        return:
          type: System.String[]
      overload: eDIA.ExperimentConfig.GetExperimentSummary*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.ExperimentConfig.GetParticipantID
      commentId: M:eDIA.ExperimentConfig.GetParticipantID
      language: CSharp
      name:
        CSharp: GetParticipantID()
        VB: GetParticipantID()
      nameWithType:
        CSharp: ExperimentConfig.GetParticipantID()
        VB: ExperimentConfig.GetParticipantID()
      qualifiedName:
        CSharp: eDIA.ExperimentConfig.GetParticipantID()
        VB: eDIA.ExperimentConfig.GetParticipantID()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: GetParticipantID
        path: ''
        startLine: 6565
      syntax:
        content:
          CSharp: public string GetParticipantID()
          VB: Public Function GetParticipantID As String
        return:
          type: System.String
      overload: eDIA.ExperimentConfig.GetParticipantID*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.ExperimentConfig.GetParticipantDetailsAsDict
      commentId: M:eDIA.ExperimentConfig.GetParticipantDetailsAsDict
      language: CSharp
      name:
        CSharp: GetParticipantDetailsAsDict()
        VB: GetParticipantDetailsAsDict()
      nameWithType:
        CSharp: ExperimentConfig.GetParticipantDetailsAsDict()
        VB: ExperimentConfig.GetParticipantDetailsAsDict()
      qualifiedName:
        CSharp: eDIA.ExperimentConfig.GetParticipantDetailsAsDict()
        VB: eDIA.ExperimentConfig.GetParticipantDetailsAsDict()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: GetParticipantDetailsAsDict
        path: ''
        startLine: 6569
      syntax:
        content:
          CSharp: public Dictionary<string, object> GetParticipantDetailsAsDict()
          VB: Public Function GetParticipantDetailsAsDict As Dictionary(Of String, Object)
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.Object}
      overload: eDIA.ExperimentConfig.GetParticipantDetailsAsDict*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.TaskConfig
    commentId: T:eDIA.TaskConfig
    language: CSharp
    name:
      CSharp: TaskConfig
      VB: TaskConfig
    nameWithType:
      CSharp: TaskConfig
      VB: TaskConfig
    qualifiedName:
      CSharp: eDIA.TaskConfig
      VB: eDIA.TaskConfig
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: TaskConfig
      path: ''
      startLine: 6576
    summary: Experiment config container
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class TaskConfig
        VB: >-
          <Serializable>

          Public Class TaskConfig
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.TaskConfig.taskSettings
      commentId: F:eDIA.TaskConfig.taskSettings
      language: CSharp
      name:
        CSharp: taskSettings
        VB: taskSettings
      nameWithType:
        CSharp: TaskConfig.taskSettings
        VB: TaskConfig.taskSettings
      qualifiedName:
        CSharp: eDIA.TaskConfig.taskSettings
        VB: eDIA.TaskConfig.taskSettings
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: taskSettings
        path: ''
        startLine: 6578
      syntax:
        content:
          CSharp: public List<SettingsTuple> taskSettings
          VB: Public taskSettings As List(Of SettingsTuple)
        return:
          type: System.Collections.Generic.List{eDIA.SettingsTuple}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.TaskConfig.breakAfter
      commentId: F:eDIA.TaskConfig.breakAfter
      language: CSharp
      name:
        CSharp: breakAfter
        VB: breakAfter
      nameWithType:
        CSharp: TaskConfig.breakAfter
        VB: TaskConfig.breakAfter
      qualifiedName:
        CSharp: eDIA.TaskConfig.breakAfter
        VB: eDIA.TaskConfig.breakAfter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: breakAfter
        path: ''
        startLine: 6579
      syntax:
        content:
          CSharp: public List<int> breakAfter
          VB: Public breakAfter As List(Of Integer)
        return:
          type: System.Collections.Generic.List{System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.TaskConfig.blocks
      commentId: F:eDIA.TaskConfig.blocks
      language: CSharp
      name:
        CSharp: blocks
        VB: blocks
      nameWithType:
        CSharp: TaskConfig.blocks
        VB: TaskConfig.blocks
      qualifiedName:
        CSharp: eDIA.TaskConfig.blocks
        VB: eDIA.TaskConfig.blocks
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: blocks
        path: ''
        startLine: 6580
      syntax:
        content:
          CSharp: public List<ExperimentBlock> blocks
          VB: Public blocks As List(Of ExperimentBlock)
        return:
          type: System.Collections.Generic.List{eDIA.ExperimentBlock}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.TaskConfig.isReady
      commentId: F:eDIA.TaskConfig.isReady
      language: CSharp
      name:
        CSharp: isReady
        VB: isReady
      nameWithType:
        CSharp: TaskConfig.isReady
        VB: TaskConfig.isReady
      qualifiedName:
        CSharp: eDIA.TaskConfig.isReady
        VB: eDIA.TaskConfig.isReady
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: isReady
        path: ''
        startLine: 6583
      syntax:
        content:
          CSharp: public bool isReady
          VB: Public isReady As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.TaskConfig.GetTaskSettingsAsDict
      commentId: M:eDIA.TaskConfig.GetTaskSettingsAsDict
      language: CSharp
      name:
        CSharp: GetTaskSettingsAsDict()
        VB: GetTaskSettingsAsDict()
      nameWithType:
        CSharp: TaskConfig.GetTaskSettingsAsDict()
        VB: TaskConfig.GetTaskSettingsAsDict()
      qualifiedName:
        CSharp: eDIA.TaskConfig.GetTaskSettingsAsDict()
        VB: eDIA.TaskConfig.GetTaskSettingsAsDict()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: GetTaskSettingsAsDict
        path: ''
        startLine: 6586
      syntax:
        content:
          CSharp: public Dictionary<string, object> GetTaskSettingsAsDict()
          VB: Public Function GetTaskSettingsAsDict As Dictionary(Of String, Object)
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.Object}
      overload: eDIA.TaskConfig.GetTaskSettingsAsDict*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.TaskConfig.GenerateUXFSequence
      commentId: M:eDIA.TaskConfig.GenerateUXFSequence
      language: CSharp
      name:
        CSharp: GenerateUXFSequence()
        VB: GenerateUXFSequence()
      nameWithType:
        CSharp: TaskConfig.GenerateUXFSequence()
        VB: TaskConfig.GenerateUXFSequence()
      qualifiedName:
        CSharp: eDIA.TaskConfig.GenerateUXFSequence()
        VB: eDIA.TaskConfig.GenerateUXFSequence()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: GenerateUXFSequence
        path: ''
        startLine: 6591
      summary: '/// Convert JSON formatted definition for the seqence into a UXF format to run in the session/// '
      example: []
      syntax:
        content:
          CSharp: public void GenerateUXFSequence()
          VB: Public Sub GenerateUXFSequence
      overload: eDIA.TaskConfig.GenerateUXFSequence*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.Helpers
    commentId: T:eDIA.Helpers
    language: CSharp
    name:
      CSharp: Helpers
      VB: Helpers
    nameWithType:
      CSharp: Helpers
      VB: Helpers
    qualifiedName:
      CSharp: eDIA.Helpers
      VB: eDIA.Helpers
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: Helpers
      path: ''
      startLine: 6634
    syntax:
      content:
        CSharp: public static class Helpers
        VB: Public Module Helpers
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: eDIA.Helpers.GetSettingsTupleListAsDict(System.Collections.Generic.List{eDIA.SettingsTuple})
      commentId: M:eDIA.Helpers.GetSettingsTupleListAsDict(System.Collections.Generic.List{eDIA.SettingsTuple})
      language: CSharp
      name:
        CSharp: GetSettingsTupleListAsDict(List<SettingsTuple>)
        VB: GetSettingsTupleListAsDict(List(Of SettingsTuple))
      nameWithType:
        CSharp: Helpers.GetSettingsTupleListAsDict(List<SettingsTuple>)
        VB: Helpers.GetSettingsTupleListAsDict(List(Of SettingsTuple))
      qualifiedName:
        CSharp: eDIA.Helpers.GetSettingsTupleListAsDict(System.Collections.Generic.List<eDIA.SettingsTuple>)
        VB: eDIA.Helpers.GetSettingsTupleListAsDict(System.Collections.Generic.List(Of eDIA.SettingsTuple))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: GetSettingsTupleListAsDict
        path: ''
        startLine: 6636
      syntax:
        content:
          CSharp: public static Dictionary<string, object> GetSettingsTupleListAsDict(List<SettingsTuple> list)
          VB: Public Shared Function GetSettingsTupleListAsDict(list As List(Of SettingsTuple)) As Dictionary(Of String, Object)
        parameters:
        - id: list
          type: System.Collections.Generic.List{eDIA.SettingsTuple}
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.Object}
      overload: eDIA.Helpers.GetSettingsTupleListAsDict*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: eDIA.TrialStep
    commentId: T:eDIA.TrialStep
    language: CSharp
    name:
      CSharp: TrialStep
      VB: TrialStep
    nameWithType:
      CSharp: TrialStep
      VB: TrialStep
    qualifiedName:
      CSharp: eDIA.TrialStep
      VB: eDIA.TrialStep
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: TrialStep
      path: ''
      startLine: 6653
    summary: One step of a trial
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class TrialStep
        VB: >-
          <Serializable>

          Public Class TrialStep
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.TrialStep.title
      commentId: F:eDIA.TrialStep.title
      language: CSharp
      name:
        CSharp: title
        VB: title
      nameWithType:
        CSharp: TrialStep.title
        VB: TrialStep.title
      qualifiedName:
        CSharp: eDIA.TrialStep.title
        VB: eDIA.TrialStep.title
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: title
        path: ''
        startLine: 6655
      syntax:
        content:
          CSharp: public string title
          VB: Public title As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.TrialStep.methodToCall
      commentId: F:eDIA.TrialStep.methodToCall
      language: CSharp
      name:
        CSharp: methodToCall
        VB: methodToCall
      nameWithType:
        CSharp: TrialStep.methodToCall
        VB: TrialStep.methodToCall
      qualifiedName:
        CSharp: eDIA.TrialStep.methodToCall
        VB: eDIA.TrialStep.methodToCall
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: methodToCall
        path: ''
        startLine: 6656
      syntax:
        content:
          CSharp: public Action methodToCall
          VB: Public methodToCall As Action
        return:
          type: System.Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.TrialStep.#ctor(System.String,System.Action)
      commentId: M:eDIA.TrialStep.#ctor(System.String,System.Action)
      language: CSharp
      name:
        CSharp: TrialStep(String, Action)
        VB: TrialStep(String, Action)
      nameWithType:
        CSharp: TrialStep.TrialStep(String, Action)
        VB: TrialStep.TrialStep(String, Action)
      qualifiedName:
        CSharp: eDIA.TrialStep.TrialStep(System.String, System.Action)
        VB: eDIA.TrialStep.TrialStep(System.String, System.Action)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: .ctor
        path: ''
        startLine: 6658
      syntax:
        content:
          CSharp: public TrialStep(string title, Action methodToCall)
          VB: Public Sub New(title As String, methodToCall As Action)
        parameters:
        - id: title
          type: System.String
        - id: methodToCall
          type: System.Action
      overload: eDIA.TrialStep.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.SettingsDeclaration
    commentId: T:eDIA.SettingsDeclaration
    language: CSharp
    name:
      CSharp: SettingsDeclaration
      VB: SettingsDeclaration
    nameWithType:
      CSharp: SettingsDeclaration
      VB: SettingsDeclaration
    qualifiedName:
      CSharp: eDIA.SettingsDeclaration
      VB: eDIA.SettingsDeclaration
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: SettingsDeclaration
      path: ''
      startLine: 6669
    summary: 'Container to hold main settings of the application '
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class SettingsDeclaration
        VB: >-
          <Serializable>

          Public Class SettingsDeclaration
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.SettingsDeclaration.VisableInteractor
      commentId: F:eDIA.SettingsDeclaration.VisableInteractor
      language: CSharp
      name:
        CSharp: VisableInteractor
        VB: VisableInteractor
      nameWithType:
        CSharp: SettingsDeclaration.VisableInteractor
        VB: SettingsDeclaration.VisableInteractor
      qualifiedName:
        CSharp: eDIA.SettingsDeclaration.VisableInteractor
        VB: eDIA.SettingsDeclaration.VisableInteractor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: VisableInteractor
        path: ''
        startLine: 6672
      syntax:
        content:
          CSharp: public Constants.Interactor VisableInteractor
          VB: Public VisableInteractor As Constants.Interactor
        return:
          type: eDIA.Constants.Interactor
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.SettingsDeclaration.InteractiveInteractor
      commentId: F:eDIA.SettingsDeclaration.InteractiveInteractor
      language: CSharp
      name:
        CSharp: InteractiveInteractor
        VB: InteractiveInteractor
      nameWithType:
        CSharp: SettingsDeclaration.InteractiveInteractor
        VB: SettingsDeclaration.InteractiveInteractor
      qualifiedName:
        CSharp: eDIA.SettingsDeclaration.InteractiveInteractor
        VB: eDIA.SettingsDeclaration.InteractiveInteractor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: InteractiveInteractor
        path: ''
        startLine: 6673
      syntax:
        content:
          CSharp: public Constants.Interactor InteractiveInteractor
          VB: Public InteractiveInteractor As Constants.Interactor
        return:
          type: eDIA.Constants.Interactor
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.SettingsDeclaration.screenResolution
      commentId: F:eDIA.SettingsDeclaration.screenResolution
      language: CSharp
      name:
        CSharp: screenResolution
        VB: screenResolution
      nameWithType:
        CSharp: SettingsDeclaration.screenResolution
        VB: SettingsDeclaration.screenResolution
      qualifiedName:
        CSharp: eDIA.SettingsDeclaration.screenResolution
        VB: eDIA.SettingsDeclaration.screenResolution
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: screenResolution
        path: ''
        startLine: 6674
      syntax:
        content:
          CSharp: public int screenResolution
          VB: Public screenResolution As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.SettingsDeclaration.volume
      commentId: F:eDIA.SettingsDeclaration.volume
      language: CSharp
      name:
        CSharp: volume
        VB: volume
      nameWithType:
        CSharp: SettingsDeclaration.volume
        VB: SettingsDeclaration.volume
      qualifiedName:
        CSharp: eDIA.SettingsDeclaration.volume
        VB: eDIA.SettingsDeclaration.volume
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: volume
        path: ''
        startLine: 6675
      syntax:
        content:
          CSharp: public float volume
          VB: Public volume As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.SettingsDeclaration.language
      commentId: F:eDIA.SettingsDeclaration.language
      language: CSharp
      name:
        CSharp: language
        VB: language
      nameWithType:
        CSharp: SettingsDeclaration.language
        VB: SettingsDeclaration.language
      qualifiedName:
        CSharp: eDIA.SettingsDeclaration.language
        VB: eDIA.SettingsDeclaration.language
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: language
        path: ''
        startLine: 6676
      syntax:
        content:
          CSharp: public Constants.Languages language
          VB: Public language As Constants.Languages
        return:
          type: eDIA.Constants.Languages
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.SettingsDeclaration.pathToLogfiles
      commentId: F:eDIA.SettingsDeclaration.pathToLogfiles
      language: CSharp
      name:
        CSharp: pathToLogfiles
        VB: pathToLogfiles
      nameWithType:
        CSharp: SettingsDeclaration.pathToLogfiles
        VB: SettingsDeclaration.pathToLogfiles
      qualifiedName:
        CSharp: eDIA.SettingsDeclaration.pathToLogfiles
        VB: eDIA.SettingsDeclaration.pathToLogfiles
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: pathToLogfiles
        path: ''
        startLine: 6678
      syntax:
        content:
          CSharp: public string pathToLogfiles
          VB: Public pathToLogfiles As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.SettingsDeclaration.localConfigDirectoryName
      commentId: F:eDIA.SettingsDeclaration.localConfigDirectoryName
      language: CSharp
      name:
        CSharp: localConfigDirectoryName
        VB: localConfigDirectoryName
      nameWithType:
        CSharp: SettingsDeclaration.localConfigDirectoryName
        VB: SettingsDeclaration.localConfigDirectoryName
      qualifiedName:
        CSharp: eDIA.SettingsDeclaration.localConfigDirectoryName
        VB: eDIA.SettingsDeclaration.localConfigDirectoryName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: localConfigDirectoryName
        path: ''
        startLine: 6679
      syntax:
        content:
          CSharp: public static string localConfigDirectoryName
          VB: Public Shared localConfigDirectoryName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: eDIA.MessagePanelInVR
    commentId: T:eDIA.MessagePanelInVR
    language: CSharp
    name:
      CSharp: MessagePanelInVR
      VB: MessagePanelInVR
    nameWithType:
      CSharp: MessagePanelInVR
      VB: MessagePanelInVR
    qualifiedName:
      CSharp: eDIA.MessagePanelInVR
      VB: eDIA.MessagePanelInVR
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: MessagePanelInVR
      path: ''
      startLine: 6732
    summary: Sample script to show the user a message in VR canvas
    example: []
    syntax:
      content:
        CSharp: 'public class MessagePanelInVR : Singleton<MessagePanelInVR>'
        VB: >-
          Public Class MessagePanelInVR

              Inherits Singleton(Of MessagePanelInVR)
    inheritance:
    - System.Object
    - Global.Singleton{eDIA.MessagePanelInVR}
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.MessagePanelInVR.msgField
      commentId: F:eDIA.MessagePanelInVR.msgField
      language: CSharp
      name:
        CSharp: msgField
        VB: msgField
      nameWithType:
        CSharp: MessagePanelInVR.msgField
        VB: MessagePanelInVR.msgField
      qualifiedName:
        CSharp: eDIA.MessagePanelInVR.msgField
        VB: eDIA.MessagePanelInVR.msgField
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: msgField
        path: ''
        startLine: 6735
      syntax:
        content:
          CSharp: public TextMeshProUGUI msgField
          VB: Public msgField As TextMeshProUGUI
        return:
          type: Global.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.MessagePanelInVR.button
      commentId: F:eDIA.MessagePanelInVR.button
      language: CSharp
      name:
        CSharp: button
        VB: button
      nameWithType:
        CSharp: MessagePanelInVR.button
        VB: MessagePanelInVR.button
      qualifiedName:
        CSharp: eDIA.MessagePanelInVR.button
        VB: eDIA.MessagePanelInVR.button
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: button
        path: ''
        startLine: 6736
      syntax:
        content:
          CSharp: public Button button
          VB: Public button As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.MessagePanelInVR.menuHolder
      commentId: F:eDIA.MessagePanelInVR.menuHolder
      language: CSharp
      name:
        CSharp: menuHolder
        VB: menuHolder
      nameWithType:
        CSharp: MessagePanelInVR.menuHolder
        VB: MessagePanelInVR.menuHolder
      qualifiedName:
        CSharp: eDIA.MessagePanelInVR.menuHolder
        VB: eDIA.MessagePanelInVR.menuHolder
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: menuHolder
        path: ''
        startLine: 6737
      syntax:
        content:
          CSharp: public GameObject menuHolder
          VB: Public menuHolder As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.MessagePanelInVR.stickToHMD
      commentId: F:eDIA.MessagePanelInVR.stickToHMD
      language: CSharp
      name:
        CSharp: stickToHMD
        VB: stickToHMD
      nameWithType:
        CSharp: MessagePanelInVR.stickToHMD
        VB: MessagePanelInVR.stickToHMD
      qualifiedName:
        CSharp: eDIA.MessagePanelInVR.stickToHMD
        VB: eDIA.MessagePanelInVR.stickToHMD
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: stickToHMD
        path: ''
        startLine: 6740
      syntax:
        content:
          CSharp: public bool stickToHMD
          VB: Public stickToHMD As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.MessagePanelInVR.ShowMessage(System.String)
      commentId: M:eDIA.MessagePanelInVR.ShowMessage(System.String)
      language: CSharp
      name:
        CSharp: ShowMessage(String)
        VB: ShowMessage(String)
      nameWithType:
        CSharp: MessagePanelInVR.ShowMessage(String)
        VB: MessagePanelInVR.ShowMessage(String)
      qualifiedName:
        CSharp: eDIA.MessagePanelInVR.ShowMessage(System.String)
        VB: eDIA.MessagePanelInVR.ShowMessage(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: ShowMessage
        path: ''
        startLine: 6790
      summary: Shows the message in VR on a canvas.
      example: []
      syntax:
        content:
          CSharp: public void ShowMessage(string msg)
          VB: Public Sub ShowMessage(msg As String)
        parameters:
        - id: msg
          type: System.String
          description: Message to show
      overload: eDIA.MessagePanelInVR.ShowMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.MessagePanelInVR.ShowMessage(System.String,System.Single)
      commentId: M:eDIA.MessagePanelInVR.ShowMessage(System.String,System.Single)
      language: CSharp
      name:
        CSharp: ShowMessage(String, Single)
        VB: ShowMessage(String, Single)
      nameWithType:
        CSharp: MessagePanelInVR.ShowMessage(String, Single)
        VB: MessagePanelInVR.ShowMessage(String, Single)
      qualifiedName:
        CSharp: eDIA.MessagePanelInVR.ShowMessage(System.String, System.Single)
        VB: eDIA.MessagePanelInVR.ShowMessage(System.String, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: ShowMessage
        path: ''
        startLine: 6804
      summary: Shows the message in VR on a canvas for a certain duration.
      example: []
      syntax:
        content:
          CSharp: public void ShowMessage(string msg, float duration)
          VB: Public Sub ShowMessage(msg As String, duration As Single)
        parameters:
        - id: msg
          type: System.String
          description: Message to show
        - id: duration
          type: System.Single
          description: Duration
      overload: eDIA.MessagePanelInVR.ShowMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.MessagePanelInVR.ShowMessage(System.String,System.Boolean)
      commentId: M:eDIA.MessagePanelInVR.ShowMessage(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: ShowMessage(String, Boolean)
        VB: ShowMessage(String, Boolean)
      nameWithType:
        CSharp: MessagePanelInVR.ShowMessage(String, Boolean)
        VB: MessagePanelInVR.ShowMessage(String, Boolean)
      qualifiedName:
        CSharp: eDIA.MessagePanelInVR.ShowMessage(System.String, System.Boolean)
        VB: eDIA.MessagePanelInVR.ShowMessage(System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: ShowMessage
        path: ''
        startLine: 6813
      summary: Shows the message in VR on a canvas with button to proceed.
      example: []
      syntax:
        content:
          CSharp: public void ShowMessage(string msg, bool showButton)
          VB: Public Sub ShowMessage(msg As String, showButton As Boolean)
        parameters:
        - id: msg
          type: System.String
          description: Message to show
        - id: showButton
          type: System.Boolean
      overload: eDIA.MessagePanelInVR.ShowMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.MessagePanelInVR.HidePanel
      commentId: M:eDIA.MessagePanelInVR.HidePanel
      language: CSharp
      name:
        CSharp: HidePanel()
        VB: HidePanel()
      nameWithType:
        CSharp: MessagePanelInVR.HidePanel()
        VB: MessagePanelInVR.HidePanel()
      qualifiedName:
        CSharp: eDIA.MessagePanelInVR.HidePanel()
        VB: eDIA.MessagePanelInVR.HidePanel()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: HidePanel
        path: ''
        startLine: 6828
      summary: Doublecheck running routines and hides the panel
      example: []
      syntax:
        content:
          CSharp: public void HidePanel()
          VB: Public Sub HidePanel
      overload: eDIA.MessagePanelInVR.HidePanel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.MessagePanelInVR.BtnPressed
      commentId: M:eDIA.MessagePanelInVR.BtnPressed
      language: CSharp
      name:
        CSharp: BtnPressed()
        VB: BtnPressed()
      nameWithType:
        CSharp: MessagePanelInVR.BtnPressed()
        VB: MessagePanelInVR.BtnPressed()
      qualifiedName:
        CSharp: eDIA.MessagePanelInVR.BtnPressed()
        VB: eDIA.MessagePanelInVR.BtnPressed()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: BtnPressed
        path: ''
        startLine: 6853
      syntax:
        content:
          CSharp: public void BtnPressed()
          VB: Public Sub BtnPressed
      overload: eDIA.MessagePanelInVR.BtnPressed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.SystemSettings
    commentId: T:eDIA.SystemSettings
    language: CSharp
    name:
      CSharp: SystemSettings
      VB: SystemSettings
    nameWithType:
      CSharp: SystemSettings
      VB: SystemSettings
    qualifiedName:
      CSharp: eDIA.SystemSettings
      VB: eDIA.SystemSettings
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: SystemSettings
      path: ''
      startLine: 6919
    summary: Global settings of the application
    example: []
    syntax:
      content:
        CSharp: public static class SystemSettings
        VB: Public Module SystemSettings
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: eDIA.SystemSettings.systemSettings
      commentId: F:eDIA.SystemSettings.systemSettings
      language: CSharp
      name:
        CSharp: systemSettings
        VB: systemSettings
      nameWithType:
        CSharp: SystemSettings.systemSettings
        VB: SystemSettings.systemSettings
      qualifiedName:
        CSharp: eDIA.SystemSettings.systemSettings
        VB: eDIA.SystemSettings.systemSettings
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: systemSettings
        path: ''
        startLine: 6924
      summary: Instance of the Settings declaration class in order to (de)serialize to JSON
      example: []
      syntax:
        content:
          CSharp: public static SettingsDeclaration systemSettings
          VB: Public Shared systemSettings As SettingsDeclaration
        return:
          type: eDIA.SettingsDeclaration
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.SystemSettings.InitSystemSettings
      commentId: M:eDIA.SystemSettings.InitSystemSettings
      language: CSharp
      name:
        CSharp: InitSystemSettings()
        VB: InitSystemSettings()
      nameWithType:
        CSharp: SystemSettings.InitSystemSettings()
        VB: SystemSettings.InitSystemSettings()
      qualifiedName:
        CSharp: eDIA.SystemSettings.InitSystemSettings()
        VB: eDIA.SystemSettings.InitSystemSettings()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: InitSystemSettings
        path: ''
        startLine: 6931
      summary: 'Gets called from XRrigmanager to init the system. '
      example: []
      syntax:
        content:
          CSharp: public static void InitSystemSettings()
          VB: Public Shared Sub InitSystemSettings
      overload: eDIA.SystemSettings.InitSystemSettings*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.SystemSettings.OnEvUpdateSystemSettings(eDIA.eParam)
      commentId: M:eDIA.SystemSettings.OnEvUpdateSystemSettings(eDIA.eParam)
      language: CSharp
      name:
        CSharp: OnEvUpdateSystemSettings(eParam)
        VB: OnEvUpdateSystemSettings(eParam)
      nameWithType:
        CSharp: SystemSettings.OnEvUpdateSystemSettings(eParam)
        VB: SystemSettings.OnEvUpdateSystemSettings(eParam)
      qualifiedName:
        CSharp: eDIA.SystemSettings.OnEvUpdateSystemSettings(eDIA.eParam)
        VB: eDIA.SystemSettings.OnEvUpdateSystemSettings(eDIA.eParam)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: OnEvUpdateSystemSettings
        path: ''
        startLine: 6968
      syntax:
        content:
          CSharp: public static void OnEvUpdateSystemSettings(eParam obj)
          VB: Public Shared Sub OnEvUpdateSystemSettings(obj As eParam)
        parameters:
        - id: obj
          type: eDIA.eParam
      overload: eDIA.SystemSettings.OnEvUpdateSystemSettings*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.SystemSettings.GetSettingsAsJSONstring
      commentId: M:eDIA.SystemSettings.GetSettingsAsJSONstring
      language: CSharp
      name:
        CSharp: GetSettingsAsJSONstring()
        VB: GetSettingsAsJSONstring()
      nameWithType:
        CSharp: SystemSettings.GetSettingsAsJSONstring()
        VB: SystemSettings.GetSettingsAsJSONstring()
      qualifiedName:
        CSharp: eDIA.SystemSettings.GetSettingsAsJSONstring()
        VB: eDIA.SystemSettings.GetSettingsAsJSONstring()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: GetSettingsAsJSONstring
        path: ''
        startLine: 7020
      summary: Gets all settings from the &apos;SettingsDeclaration&apos; instance &apos;systemSettings&apos; as a JSON string
      example: []
      syntax:
        content:
          CSharp: public static string GetSettingsAsJSONstring()
          VB: Public Shared Function GetSettingsAsJSONstring As String
        return:
          type: System.String
          description: JSON string
      overload: eDIA.SystemSettings.GetSettingsAsJSONstring*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: eDIA.TaskBlock
    commentId: T:eDIA.TaskBlock
    language: CSharp
    name:
      CSharp: TaskBlock
      VB: TaskBlock
    nameWithType:
      CSharp: TaskBlock
      VB: TaskBlock
    qualifiedName:
      CSharp: eDIA.TaskBlock
      VB: eDIA.TaskBlock
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: TaskBlock
      path: ''
      startLine: 7036
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class TaskBlock : MonoBehaviour
        VB: >-
          <Serializable>

          Public Class TaskBlock

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.TaskBlock.block_name
      commentId: F:eDIA.TaskBlock.block_name
      language: CSharp
      name:
        CSharp: block_name
        VB: block_name
      nameWithType:
        CSharp: TaskBlock.block_name
        VB: TaskBlock.block_name
      qualifiedName:
        CSharp: eDIA.TaskBlock.block_name
        VB: eDIA.TaskBlock.block_name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: block_name
        path: ''
        startLine: 7040
      syntax:
        content:
          CSharp: public string block_name
          VB: Public block_name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.TaskBlock.trialSteps
      commentId: F:eDIA.TaskBlock.trialSteps
      language: CSharp
      name:
        CSharp: trialSteps
        VB: trialSteps
      nameWithType:
        CSharp: TaskBlock.trialSteps
        VB: TaskBlock.trialSteps
      qualifiedName:
        CSharp: eDIA.TaskBlock.trialSteps
        VB: eDIA.TaskBlock.trialSteps
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: trialSteps
        path: ''
        startLine: 7043
      syntax:
        content:
          CSharp: public List<Action> trialSteps
          VB: Public trialSteps As List(Of Action)
        return:
          type: System.Collections.Generic.List{System.Action}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.TaskBlock.AddToTrialSequence(System.Action)
      commentId: M:eDIA.TaskBlock.AddToTrialSequence(System.Action)
      language: CSharp
      name:
        CSharp: AddToTrialSequence(Action)
        VB: AddToTrialSequence(Action)
      nameWithType:
        CSharp: TaskBlock.AddToTrialSequence(Action)
        VB: TaskBlock.AddToTrialSequence(Action)
      qualifiedName:
        CSharp: eDIA.TaskBlock.AddToTrialSequence(System.Action)
        VB: eDIA.TaskBlock.AddToTrialSequence(System.Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: AddToTrialSequence
        path: ''
        startLine: 7045
      syntax:
        content:
          CSharp: public void AddToTrialSequence(Action methodStep)
          VB: Public Sub AddToTrialSequence(methodStep As Action)
        parameters:
        - id: methodStep
          type: System.Action
      overload: eDIA.TaskBlock.AddToTrialSequence*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.TaskBlock.OnBlockStart
      commentId: M:eDIA.TaskBlock.OnBlockStart
      language: CSharp
      name:
        CSharp: OnBlockStart()
        VB: OnBlockStart()
      nameWithType:
        CSharp: TaskBlock.OnBlockStart()
        VB: TaskBlock.OnBlockStart()
      qualifiedName:
        CSharp: eDIA.TaskBlock.OnBlockStart()
        VB: eDIA.TaskBlock.OnBlockStart()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: OnBlockStart
        path: ''
        startLine: 7051
      syntax:
        content:
          CSharp: public virtual void OnBlockStart()
          VB: Public Overridable Sub OnBlockStart
      overload: eDIA.TaskBlock.OnBlockStart*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: eDIA.TaskBlock.OnStartTrial
      commentId: M:eDIA.TaskBlock.OnStartTrial
      language: CSharp
      name:
        CSharp: OnStartTrial()
        VB: OnStartTrial()
      nameWithType:
        CSharp: TaskBlock.OnStartTrial()
        VB: TaskBlock.OnStartTrial()
      qualifiedName:
        CSharp: eDIA.TaskBlock.OnStartTrial()
        VB: eDIA.TaskBlock.OnStartTrial()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: OnStartTrial
        path: ''
        startLine: 7052
      syntax:
        content:
          CSharp: public virtual void OnStartTrial()
          VB: Public Overridable Sub OnStartTrial
      overload: eDIA.TaskBlock.OnStartTrial*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: eDIA.TaskBlock.OnEndTrial
      commentId: M:eDIA.TaskBlock.OnEndTrial
      language: CSharp
      name:
        CSharp: OnEndTrial()
        VB: OnEndTrial()
      nameWithType:
        CSharp: TaskBlock.OnEndTrial()
        VB: TaskBlock.OnEndTrial()
      qualifiedName:
        CSharp: eDIA.TaskBlock.OnEndTrial()
        VB: eDIA.TaskBlock.OnEndTrial()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: OnEndTrial
        path: ''
        startLine: 7053
      syntax:
        content:
          CSharp: public virtual void OnEndTrial()
          VB: Public Overridable Sub OnEndTrial
      overload: eDIA.TaskBlock.OnEndTrial*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: eDIA.TaskBlock.OnBetweenSteps
      commentId: M:eDIA.TaskBlock.OnBetweenSteps
      language: CSharp
      name:
        CSharp: OnBetweenSteps()
        VB: OnBetweenSteps()
      nameWithType:
        CSharp: TaskBlock.OnBetweenSteps()
        VB: TaskBlock.OnBetweenSteps()
      qualifiedName:
        CSharp: eDIA.TaskBlock.OnBetweenSteps()
        VB: eDIA.TaskBlock.OnBetweenSteps()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: OnBetweenSteps
        path: ''
        startLine: 7054
      syntax:
        content:
          CSharp: public virtual void OnBetweenSteps()
          VB: Public Overridable Sub OnBetweenSteps
      overload: eDIA.TaskBlock.OnBetweenSteps*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: eDIA.TaskBlock.OnBlockEnd
      commentId: M:eDIA.TaskBlock.OnBlockEnd
      language: CSharp
      name:
        CSharp: OnBlockEnd()
        VB: OnBlockEnd()
      nameWithType:
        CSharp: TaskBlock.OnBlockEnd()
        VB: TaskBlock.OnBlockEnd()
      qualifiedName:
        CSharp: eDIA.TaskBlock.OnBlockEnd()
        VB: eDIA.TaskBlock.OnBlockEnd()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: OnBlockEnd
        path: ''
        startLine: 7055
      syntax:
        content:
          CSharp: public virtual void OnBlockEnd()
          VB: Public Overridable Sub OnBlockEnd
      overload: eDIA.TaskBlock.OnBlockEnd*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: eDIA.XRControllerInputRemapper
    commentId: T:eDIA.XRControllerInputRemapper
    language: CSharp
    name:
      CSharp: XRControllerInputRemapper
      VB: XRControllerInputRemapper
    nameWithType:
      CSharp: XRControllerInputRemapper
      VB: XRControllerInputRemapper
    qualifiedName:
      CSharp: eDIA.XRControllerInputRemapper
      VB: eDIA.XRControllerInputRemapper
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: XRControllerInputRemapper
      path: ''
      startLine: 7072
    summary: In order to be flexible for each taskblock, the remapping of a controller key to a method is a separate script
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class XRControllerInputRemapper : MonoBehaviour
        VB: >-
          <Serializable>

          Public Class XRControllerInputRemapper

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.XRControllerInputRemapper.Redirectors
      commentId: F:eDIA.XRControllerInputRemapper.Redirectors
      language: CSharp
      name:
        CSharp: Redirectors
        VB: Redirectors
      nameWithType:
        CSharp: XRControllerInputRemapper.Redirectors
        VB: XRControllerInputRemapper.Redirectors
      qualifiedName:
        CSharp: eDIA.XRControllerInputRemapper.Redirectors
        VB: eDIA.XRControllerInputRemapper.Redirectors
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: Redirectors
        path: ''
        startLine: 7085
      syntax:
        content:
          CSharp: public List<XRControllerInputRemapper.ControllerInputRemap> Redirectors
          VB: Public Redirectors As List(Of XRControllerInputRemapper.ControllerInputRemap)
        return:
          type: System.Collections.Generic.List{eDIA.XRControllerInputRemapper.ControllerInputRemap}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.XRControllerInputRemapper.GetControllerRemappings
      commentId: M:eDIA.XRControllerInputRemapper.GetControllerRemappings
      language: CSharp
      name:
        CSharp: GetControllerRemappings()
        VB: GetControllerRemappings()
      nameWithType:
        CSharp: XRControllerInputRemapper.GetControllerRemappings()
        VB: XRControllerInputRemapper.GetControllerRemappings()
      qualifiedName:
        CSharp: eDIA.XRControllerInputRemapper.GetControllerRemappings()
        VB: eDIA.XRControllerInputRemapper.GetControllerRemappings()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: GetControllerRemappings
        path: ''
        startLine: 7087
      syntax:
        content:
          CSharp: public List<string> GetControllerRemappings()
          VB: Public Function GetControllerRemappings As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      overload: eDIA.XRControllerInputRemapper.GetControllerRemappings*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.XRControllerInputRemapper.EnableRemapping(System.String,System.Boolean)
      commentId: M:eDIA.XRControllerInputRemapper.EnableRemapping(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: EnableRemapping(String, Boolean)
        VB: EnableRemapping(String, Boolean)
      nameWithType:
        CSharp: XRControllerInputRemapper.EnableRemapping(String, Boolean)
        VB: XRControllerInputRemapper.EnableRemapping(String, Boolean)
      qualifiedName:
        CSharp: eDIA.XRControllerInputRemapper.EnableRemapping(System.String, System.Boolean)
        VB: eDIA.XRControllerInputRemapper.EnableRemapping(System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: EnableRemapping
        path: ''
        startLine: 7099
      summary: Enables predefined controller inputaction to custom unity event
      example: []
      syntax:
        content:
          CSharp: public void EnableRemapping(string id, bool onOff)
          VB: Public Sub EnableRemapping(id As String, onOff As Boolean)
        parameters:
        - id: id
          type: System.String
          description: indentifier
        - id: onOff
          type: System.Boolean
          description: active
      overload: eDIA.XRControllerInputRemapper.EnableRemapping*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.XRControllerInputRemapper.ControllerInputRemap
    commentId: T:eDIA.XRControllerInputRemapper.ControllerInputRemap
    language: CSharp
    name:
      CSharp: XRControllerInputRemapper.ControllerInputRemap
      VB: XRControllerInputRemapper.ControllerInputRemap
    nameWithType:
      CSharp: XRControllerInputRemapper.ControllerInputRemap
      VB: XRControllerInputRemapper.ControllerInputRemap
    qualifiedName:
      CSharp: eDIA.XRControllerInputRemapper.ControllerInputRemap
      VB: eDIA.XRControllerInputRemapper.ControllerInputRemap
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: ControllerInputRemap
      path: ''
      startLine: 7078
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class ControllerInputRemap
        VB: >-
          <Serializable>

          Public Class ControllerInputRemap
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.XRControllerInputRemapper.ControllerInputRemap.id
      commentId: F:eDIA.XRControllerInputRemapper.ControllerInputRemap.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: XRControllerInputRemapper.ControllerInputRemap.id
        VB: XRControllerInputRemapper.ControllerInputRemap.id
      qualifiedName:
        CSharp: eDIA.XRControllerInputRemapper.ControllerInputRemap.id
        VB: eDIA.XRControllerInputRemapper.ControllerInputRemap.id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: id
        path: ''
        startLine: 7080
      syntax:
        content:
          CSharp: public string id
          VB: Public id As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.XRControllerInputRemapper.ControllerInputRemap.inputActionSubmit
      commentId: F:eDIA.XRControllerInputRemapper.ControllerInputRemap.inputActionSubmit
      language: CSharp
      name:
        CSharp: inputActionSubmit
        VB: inputActionSubmit
      nameWithType:
        CSharp: XRControllerInputRemapper.ControllerInputRemap.inputActionSubmit
        VB: XRControllerInputRemapper.ControllerInputRemap.inputActionSubmit
      qualifiedName:
        CSharp: eDIA.XRControllerInputRemapper.ControllerInputRemap.inputActionSubmit
        VB: eDIA.XRControllerInputRemapper.ControllerInputRemap.inputActionSubmit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: inputActionSubmit
        path: ''
        startLine: 7081
      syntax:
        content:
          CSharp: public InputActionReference inputActionSubmit
          VB: Public inputActionSubmit As InputActionReference
        return:
          type: Global.InputActionReference
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.XRControllerInputRemapper.ControllerInputRemap.methodToCall
      commentId: F:eDIA.XRControllerInputRemapper.ControllerInputRemap.methodToCall
      language: CSharp
      name:
        CSharp: methodToCall
        VB: methodToCall
      nameWithType:
        CSharp: XRControllerInputRemapper.ControllerInputRemap.methodToCall
        VB: XRControllerInputRemapper.ControllerInputRemap.methodToCall
      qualifiedName:
        CSharp: eDIA.XRControllerInputRemapper.ControllerInputRemap.methodToCall
        VB: eDIA.XRControllerInputRemapper.ControllerInputRemap.methodToCall
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: methodToCall
        path: ''
        startLine: 7082
      syntax:
        content:
          CSharp: public UnityEvent<InputAction.CallbackContext> methodToCall
          VB: Public methodToCall As UnityEvent(Of InputAction.CallbackContext)
        return:
          type: Global.UnityEvent{InputAction.CallbackContext}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.InputActionHandler
    commentId: T:eDIA.InputActionHandler
    language: CSharp
    name:
      CSharp: InputActionHandler
      VB: InputActionHandler
    nameWithType:
      CSharp: InputActionHandler
      VB: InputActionHandler
    qualifiedName:
      CSharp: eDIA.InputActionHandler
      VB: eDIA.InputActionHandler
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: InputActionHandler
      path: ''
      startLine: 7120
    summary: "\nMapping new Input system <code>InputAction</code> to eDIA <code>EventManager</code>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class InputActionHandler : MonoBehaviour'
        VB: >-
          Public Class InputActionHandler

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.InputActionHandler.SetActionMapName(System.String)
      commentId: M:eDIA.InputActionHandler.SetActionMapName(System.String)
      language: CSharp
      name:
        CSharp: SetActionMapName(String)
        VB: SetActionMapName(String)
      nameWithType:
        CSharp: InputActionHandler.SetActionMapName(String)
        VB: InputActionHandler.SetActionMapName(String)
      qualifiedName:
        CSharp: eDIA.InputActionHandler.SetActionMapName(System.String)
        VB: eDIA.InputActionHandler.SetActionMapName(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: SetActionMapName
        path: ''
        startLine: 7186
      syntax:
        content:
          CSharp: public void SetActionMapName(string mapName)
          VB: Public Sub SetActionMapName(mapName As String)
        parameters:
        - id: mapName
          type: System.String
      overload: eDIA.InputActionHandler.SetActionMapName*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.InputActionHandler.menuPerformed(InputAction.CallbackContext)
      commentId: M:eDIA.InputActionHandler.menuPerformed(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: menuPerformed(InputAction.CallbackContext)
        VB: menuPerformed(InputAction.CallbackContext)
      nameWithType:
        CSharp: InputActionHandler.menuPerformed(InputAction.CallbackContext)
        VB: InputActionHandler.menuPerformed(InputAction.CallbackContext)
      qualifiedName:
        CSharp: eDIA.InputActionHandler.menuPerformed(InputAction.CallbackContext)
        VB: eDIA.InputActionHandler.menuPerformed(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: menuPerformed
        path: ''
        startLine: 7193
      syntax:
        content:
          CSharp: public void menuPerformed(InputAction.CallbackContext context)
          VB: Public Sub menuPerformed(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: eDIA.InputActionHandler.menuPerformed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.InputActionHandler.proceedPerformed(InputAction.CallbackContext)
      commentId: M:eDIA.InputActionHandler.proceedPerformed(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: proceedPerformed(InputAction.CallbackContext)
        VB: proceedPerformed(InputAction.CallbackContext)
      nameWithType:
        CSharp: InputActionHandler.proceedPerformed(InputAction.CallbackContext)
        VB: InputActionHandler.proceedPerformed(InputAction.CallbackContext)
      qualifiedName:
        CSharp: eDIA.InputActionHandler.proceedPerformed(InputAction.CallbackContext)
        VB: eDIA.InputActionHandler.proceedPerformed(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: proceedPerformed
        path: ''
        startLine: 7197
      syntax:
        content:
          CSharp: public void proceedPerformed(InputAction.CallbackContext context)
          VB: Public Sub proceedPerformed(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: eDIA.InputActionHandler.proceedPerformed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.InputActionHandler.actionStartExperimentPerformed(InputAction.CallbackContext)
      commentId: M:eDIA.InputActionHandler.actionStartExperimentPerformed(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: actionStartExperimentPerformed(InputAction.CallbackContext)
        VB: actionStartExperimentPerformed(InputAction.CallbackContext)
      nameWithType:
        CSharp: InputActionHandler.actionStartExperimentPerformed(InputAction.CallbackContext)
        VB: InputActionHandler.actionStartExperimentPerformed(InputAction.CallbackContext)
      qualifiedName:
        CSharp: eDIA.InputActionHandler.actionStartExperimentPerformed(InputAction.CallbackContext)
        VB: eDIA.InputActionHandler.actionStartExperimentPerformed(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: actionStartExperimentPerformed
        path: ''
        startLine: 7201
      syntax:
        content:
          CSharp: public void actionStartExperimentPerformed(InputAction.CallbackContext context)
          VB: Public Sub actionStartExperimentPerformed(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: eDIA.InputActionHandler.actionStartExperimentPerformed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.InputActionHandler.actionPauseExperimentPerformed(InputAction.CallbackContext)
      commentId: M:eDIA.InputActionHandler.actionPauseExperimentPerformed(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: actionPauseExperimentPerformed(InputAction.CallbackContext)
        VB: actionPauseExperimentPerformed(InputAction.CallbackContext)
      nameWithType:
        CSharp: InputActionHandler.actionPauseExperimentPerformed(InputAction.CallbackContext)
        VB: InputActionHandler.actionPauseExperimentPerformed(InputAction.CallbackContext)
      qualifiedName:
        CSharp: eDIA.InputActionHandler.actionPauseExperimentPerformed(InputAction.CallbackContext)
        VB: eDIA.InputActionHandler.actionPauseExperimentPerformed(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: actionPauseExperimentPerformed
        path: ''
        startLine: 7205
      syntax:
        content:
          CSharp: public void actionPauseExperimentPerformed(InputAction.CallbackContext context)
          VB: Public Sub actionPauseExperimentPerformed(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: eDIA.InputActionHandler.actionPauseExperimentPerformed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.FileManager
    commentId: T:eDIA.FileManager
    language: CSharp
    name:
      CSharp: FileManager
      VB: FileManager
    nameWithType:
      CSharp: FileManager
      VB: FileManager
    qualifiedName:
      CSharp: eDIA.FileManager
      VB: eDIA.FileManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: FileManager
      path: ''
      startLine: 7409
    summary: "\nStatic class to handle file IO\n"
    example: []
    syntax:
      content:
        CSharp: public static class FileManager
        VB: Public Module FileManager
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: eDIA.FileManager.GetAllFilenamesWithExtensionFrom(System.String,System.String)
      commentId: M:eDIA.FileManager.GetAllFilenamesWithExtensionFrom(System.String,System.String)
      language: CSharp
      name:
        CSharp: GetAllFilenamesWithExtensionFrom(String, String)
        VB: GetAllFilenamesWithExtensionFrom(String, String)
      nameWithType:
        CSharp: FileManager.GetAllFilenamesWithExtensionFrom(String, String)
        VB: FileManager.GetAllFilenamesWithExtensionFrom(String, String)
      qualifiedName:
        CSharp: eDIA.FileManager.GetAllFilenamesWithExtensionFrom(System.String, System.String)
        VB: eDIA.FileManager.GetAllFilenamesWithExtensionFrom(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: GetAllFilenamesWithExtensionFrom
        path: ''
        startLine: 7414
      summary: Get all filenames with a certain extension from the applications given subfolder
      example: []
      syntax:
        content:
          CSharp: public static string[] GetAllFilenamesWithExtensionFrom(string subFolder, string extension)
          VB: Public Shared Function GetAllFilenamesWithExtensionFrom(subFolder As String, extension As String) As String()
        parameters:
        - id: subFolder
          type: System.String
        - id: extension
          type: System.String
        return:
          type: System.String[]
      overload: eDIA.FileManager.GetAllFilenamesWithExtensionFrom*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.FileManager.GetAllFilenamesFrom(System.String)
      commentId: M:eDIA.FileManager.GetAllFilenamesFrom(System.String)
      language: CSharp
      name:
        CSharp: GetAllFilenamesFrom(String)
        VB: GetAllFilenamesFrom(String)
      nameWithType:
        CSharp: FileManager.GetAllFilenamesFrom(String)
        VB: FileManager.GetAllFilenamesFrom(String)
      qualifiedName:
        CSharp: eDIA.FileManager.GetAllFilenamesFrom(System.String)
        VB: eDIA.FileManager.GetAllFilenamesFrom(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: GetAllFilenamesFrom
        path: ''
        startLine: 7442
      summary: Get all filenames with a certain extension from the applications given subfolder
      example: []
      syntax:
        content:
          CSharp: public static string[] GetAllFilenamesFrom(string subFolder)
          VB: Public Shared Function GetAllFilenamesFrom(subFolder As String) As String()
        parameters:
        - id: subFolder
          type: System.String
        return:
          type: System.String[]
      overload: eDIA.FileManager.GetAllFilenamesFrom*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.FileManager.GetAllSubFolders(System.String)
      commentId: M:eDIA.FileManager.GetAllSubFolders(System.String)
      language: CSharp
      name:
        CSharp: GetAllSubFolders(String)
        VB: GetAllSubFolders(String)
      nameWithType:
        CSharp: FileManager.GetAllSubFolders(String)
        VB: FileManager.GetAllSubFolders(String)
      qualifiedName:
        CSharp: eDIA.FileManager.GetAllSubFolders(System.String)
        VB: eDIA.FileManager.GetAllSubFolders(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: GetAllSubFolders
        path: ''
        startLine: 7468
      syntax:
        content:
          CSharp: public static string[] GetAllSubFolders(string subFolder)
          VB: Public Shared Function GetAllSubFolders(subFolder As String) As String()
        parameters:
        - id: subFolder
          type: System.String
        return:
          type: System.String[]
      overload: eDIA.FileManager.GetAllSubFolders*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.FileManager.CopyDirectory(System.String,System.String,System.String)
      commentId: M:eDIA.FileManager.CopyDirectory(System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: CopyDirectory(String, String, String)
        VB: CopyDirectory(String, String, String)
      nameWithType:
        CSharp: FileManager.CopyDirectory(String, String, String)
        VB: FileManager.CopyDirectory(String, String, String)
      qualifiedName:
        CSharp: eDIA.FileManager.CopyDirectory(System.String, System.String, System.String)
        VB: eDIA.FileManager.CopyDirectory(System.String, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: CopyDirectory
        path: ''
        startLine: 7499
      summary: "\nCopy directory\n"
      example: []
      syntax:
        content:
          CSharp: public static void CopyDirectory(string sourceDirectory, string targetDirectory, string exclude)
          VB: Public Shared Sub CopyDirectory(sourceDirectory As String, targetDirectory As String, exclude As String)
        parameters:
        - id: sourceDirectory
          type: System.String
          description: ''
        - id: targetDirectory
          type: System.String
          description: ''
        - id: exclude
          type: System.String
      overload: eDIA.FileManager.CopyDirectory*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.FileManager.CopyDirectory(System.String,System.String)
      commentId: M:eDIA.FileManager.CopyDirectory(System.String,System.String)
      language: CSharp
      name:
        CSharp: CopyDirectory(String, String)
        VB: CopyDirectory(String, String)
      nameWithType:
        CSharp: FileManager.CopyDirectory(String, String)
        VB: FileManager.CopyDirectory(String, String)
      qualifiedName:
        CSharp: eDIA.FileManager.CopyDirectory(System.String, System.String)
        VB: eDIA.FileManager.CopyDirectory(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: CopyDirectory
        path: ''
        startLine: 7507
      syntax:
        content:
          CSharp: public static void CopyDirectory(string sourceDirectory, string targetDirectory)
          VB: Public Shared Sub CopyDirectory(sourceDirectory As String, targetDirectory As String)
        parameters:
        - id: sourceDirectory
          type: System.String
        - id: targetDirectory
          type: System.String
      overload: eDIA.FileManager.CopyDirectory*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.FileManager.CopyAll(DirectoryInfo,DirectoryInfo,System.String)
      commentId: M:eDIA.FileManager.CopyAll(DirectoryInfo,DirectoryInfo,System.String)
      language: CSharp
      name:
        CSharp: CopyAll(DirectoryInfo, DirectoryInfo, String)
        VB: CopyAll(DirectoryInfo, DirectoryInfo, String)
      nameWithType:
        CSharp: FileManager.CopyAll(DirectoryInfo, DirectoryInfo, String)
        VB: FileManager.CopyAll(DirectoryInfo, DirectoryInfo, String)
      qualifiedName:
        CSharp: eDIA.FileManager.CopyAll(DirectoryInfo, DirectoryInfo, System.String)
        VB: eDIA.FileManager.CopyAll(DirectoryInfo, DirectoryInfo, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: CopyAll
        path: ''
        startLine: 7516
      syntax:
        content:
          CSharp: public static void CopyAll(DirectoryInfo source, DirectoryInfo target, string exclude)
          VB: Public Shared Sub CopyAll(source As DirectoryInfo, target As DirectoryInfo, exclude As String)
        parameters:
        - id: source
          type: Global.DirectoryInfo
        - id: target
          type: Global.DirectoryInfo
        - id: exclude
          type: System.String
      overload: eDIA.FileManager.CopyAll*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.FileManager.ReadStringFromApplicationPathSubfolder(System.String,System.String)
      commentId: M:eDIA.FileManager.ReadStringFromApplicationPathSubfolder(System.String,System.String)
      language: CSharp
      name:
        CSharp: ReadStringFromApplicationPathSubfolder(String, String)
        VB: ReadStringFromApplicationPathSubfolder(String, String)
      nameWithType:
        CSharp: FileManager.ReadStringFromApplicationPathSubfolder(String, String)
        VB: FileManager.ReadStringFromApplicationPathSubfolder(String, String)
      qualifiedName:
        CSharp: eDIA.FileManager.ReadStringFromApplicationPathSubfolder(System.String, System.String)
        VB: eDIA.FileManager.ReadStringFromApplicationPathSubfolder(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: ReadStringFromApplicationPathSubfolder
        path: ''
        startLine: 7538
      syntax:
        content:
          CSharp: public static string ReadStringFromApplicationPathSubfolder(string _subfolder, string _fileName)
          VB: Public Shared Function ReadStringFromApplicationPathSubfolder(_subfolder As String, _fileName As String) As String
        parameters:
        - id: _subfolder
          type: System.String
        - id: _fileName
          type: System.String
        return:
          type: System.String
      overload: eDIA.FileManager.ReadStringFromApplicationPathSubfolder*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.FileManager.ReadStringFromApplicationPath(System.String)
      commentId: M:eDIA.FileManager.ReadStringFromApplicationPath(System.String)
      language: CSharp
      name:
        CSharp: ReadStringFromApplicationPath(String)
        VB: ReadStringFromApplicationPath(String)
      nameWithType:
        CSharp: FileManager.ReadStringFromApplicationPath(String)
        VB: FileManager.ReadStringFromApplicationPath(String)
      qualifiedName:
        CSharp: eDIA.FileManager.ReadStringFromApplicationPath(System.String)
        VB: eDIA.FileManager.ReadStringFromApplicationPath(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: ReadStringFromApplicationPath
        path: ''
        startLine: 7545
      syntax:
        content:
          CSharp: public static string ReadStringFromApplicationPath(string _fileName)
          VB: Public Shared Function ReadStringFromApplicationPath(_fileName As String) As String
        parameters:
        - id: _fileName
          type: System.String
        return:
          type: System.String
      overload: eDIA.FileManager.ReadStringFromApplicationPath*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.FileManager.FileExists(System.String)
      commentId: M:eDIA.FileManager.FileExists(System.String)
      language: CSharp
      name:
        CSharp: FileExists(String)
        VB: FileExists(String)
      nameWithType:
        CSharp: FileManager.FileExists(String)
        VB: FileManager.FileExists(String)
      qualifiedName:
        CSharp: eDIA.FileManager.FileExists(System.String)
        VB: eDIA.FileManager.FileExists(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: FileExists
        path: ''
        startLine: 7551
      syntax:
        content:
          CSharp: public static bool FileExists(string _fileName)
          VB: Public Shared Function FileExists(_fileName As String) As Boolean
        parameters:
        - id: _fileName
          type: System.String
        return:
          type: System.Boolean
      overload: eDIA.FileManager.FileExists*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.FileManager.ReadString(System.String)
      commentId: M:eDIA.FileManager.ReadString(System.String)
      language: CSharp
      name:
        CSharp: ReadString(String)
        VB: ReadString(String)
      nameWithType:
        CSharp: FileManager.ReadString(String)
        VB: FileManager.ReadString(String)
      qualifiedName:
        CSharp: eDIA.FileManager.ReadString(System.String)
        VB: eDIA.FileManager.ReadString(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: ReadString
        path: ''
        startLine: 7559
      summary: Tries to read the given textbased filename.
      example: []
      syntax:
        content:
          CSharp: public static string ReadString(string _fileName)
          VB: Public Shared Function ReadString(_fileName As String) As String
        parameters:
        - id: _fileName
          type: System.String
        return:
          type: System.String
          description: Content of the file, or &apos;ERROR&apos; when failed
      overload: eDIA.FileManager.ReadString*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.FileManager.CopyFileTo(System.String,System.String,System.String)
      commentId: M:eDIA.FileManager.CopyFileTo(System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: CopyFileTo(String, String, String)
        VB: CopyFileTo(String, String, String)
      nameWithType:
        CSharp: FileManager.CopyFileTo(String, String, String)
        VB: FileManager.CopyFileTo(String, String, String)
      qualifiedName:
        CSharp: eDIA.FileManager.CopyFileTo(System.String, System.String, System.String)
        VB: eDIA.FileManager.CopyFileTo(System.String, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: CopyFileTo
        path: ''
        startLine: 7576
      syntax:
        content:
          CSharp: public static void CopyFileTo(string _sourcePath, string _filename, string _destinationPath)
          VB: Public Shared Sub CopyFileTo(_sourcePath As String, _filename As String, _destinationPath As String)
        parameters:
        - id: _sourcePath
          type: System.String
        - id: _filename
          type: System.String
        - id: _destinationPath
          type: System.String
      overload: eDIA.FileManager.CopyFileTo*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.FileManager.WriteString(System.String,System.String,System.Boolean)
      commentId: M:eDIA.FileManager.WriteString(System.String,System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: WriteString(String, String, Boolean)
        VB: WriteString(String, String, Boolean)
      nameWithType:
        CSharp: FileManager.WriteString(String, String, Boolean)
        VB: FileManager.WriteString(String, String, Boolean)
      qualifiedName:
        CSharp: eDIA.FileManager.WriteString(System.String, System.String, System.Boolean)
        VB: eDIA.FileManager.WriteString(System.String, System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: WriteString
        path: ''
        startLine: 7587
      summary: Saves a text file to given filename and containts given data
      example: []
      syntax:
        content:
          CSharp: public static void WriteString(string _fileName, string _data, bool _overwrite)
          VB: Public Shared Sub WriteString(_fileName As String, _data As String, _overwrite As Boolean)
        parameters:
        - id: _fileName
          type: System.String
        - id: _data
          type: System.String
        - id: _overwrite
          type: System.Boolean
      overload: eDIA.FileManager.WriteString*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.FileManager.CreateFolder(System.String)
      commentId: M:eDIA.FileManager.CreateFolder(System.String)
      language: CSharp
      name:
        CSharp: CreateFolder(String)
        VB: CreateFolder(String)
      nameWithType:
        CSharp: FileManager.CreateFolder(String)
        VB: FileManager.CreateFolder(String)
      qualifiedName:
        CSharp: eDIA.FileManager.CreateFolder(System.String)
        VB: eDIA.FileManager.CreateFolder(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: CreateFolder
        path: ''
        startLine: 7602
      summary: Creates a folder in the application data directory
      example: []
      syntax:
        content:
          CSharp: public static void CreateFolder(string _folderName)
          VB: Public Shared Sub CreateFolder(_folderName As String)
        parameters:
        - id: _folderName
          type: System.String
      overload: eDIA.FileManager.CreateFolder*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: eDIA.NetworkComManager
    commentId: T:eDIA.NetworkComManager
    language: CSharp
    name:
      CSharp: NetworkComManager
      VB: NetworkComManager
    nameWithType:
      CSharp: NetworkComManager
      VB: NetworkComManager
    qualifiedName:
      CSharp: eDIA.NetworkComManager
      VB: eDIA.NetworkComManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: NetworkComManager
      path: ''
      startLine: 7660
    summary: "\nCommunication manager interface. Translates internal commands into network packages and viseversa\n"
    example: []
    syntax:
      content:
        CSharp: 'public class NetworkComManager : MonoBehaviour'
        VB: >-
          Public Class NetworkComManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: eDIA.NetworkManager
    commentId: T:eDIA.NetworkManager
    language: CSharp
    name:
      CSharp: NetworkManager
      VB: NetworkManager
    nameWithType:
      CSharp: NetworkManager
      VB: NetworkManager
    qualifiedName:
      CSharp: eDIA.NetworkManager
      VB: eDIA.NetworkManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: NetworkManager
      path: ''
      startLine: 8106
    summary: "\nManages network connections, disconnections, auto connect, etc\n"
    example: []
    syntax:
      content:
        CSharp: 'public class NetworkManager : MonoBehaviour'
        VB: >-
          Public Class NetworkManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: eDIA.LogUtilities
    commentId: T:eDIA.LogUtilities
    language: CSharp
    name:
      CSharp: LogUtilities
      VB: LogUtilities
    nameWithType:
      CSharp: LogUtilities
      VB: LogUtilities
    qualifiedName:
      CSharp: eDIA.LogUtilities
      VB: eDIA.LogUtilities
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: LogUtilities
      path: ''
      startLine: 8118
    syntax:
      content:
        CSharp: public static class LogUtilities
        VB: Public Module LogUtilities
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: eDIA.LogUtilities.AddToLog(System.String,System.String,Color)
      commentId: M:eDIA.LogUtilities.AddToLog(System.String,System.String,Color)
      language: CSharp
      name:
        CSharp: AddToLog(String, String, Color)
        VB: AddToLog(String, String, Color)
      nameWithType:
        CSharp: LogUtilities.AddToLog(String, String, Color)
        VB: LogUtilities.AddToLog(String, String, Color)
      qualifiedName:
        CSharp: eDIA.LogUtilities.AddToLog(System.String, System.String, Color)
        VB: eDIA.LogUtilities.AddToLog(System.String, System.String, Color)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: AddToLog
        path: ''
        startLine: 8119
      syntax:
        content:
          CSharp: public static void AddToLog(string message, string indicator, Color color)
          VB: Public Shared Sub AddToLog(message As String, indicator As String, color As Color)
        parameters:
        - id: message
          type: System.String
        - id: indicator
          type: System.String
        - id: color
          type: Global.Color
      overload: eDIA.LogUtilities.AddToLog*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: eDIA.MainMenu
    commentId: T:eDIA.MainMenu
    language: CSharp
    name:
      CSharp: MainMenu
      VB: MainMenu
    nameWithType:
      CSharp: MainMenu
      VB: MainMenu
    qualifiedName:
      CSharp: eDIA.MainMenu
      VB: eDIA.MainMenu
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: MainMenu
      path: ''
      startLine: 8332
    summary: "\nMain menu can be opened in the app with the action &apos;Menu&apos;<br />\nIt generates a list of scenes (which are tasks) and the default &apos;continue&apos; and &apos;quit&apos; option\n"
    example: []
    syntax:
      content:
        CSharp: 'public class MainMenu : MonoBehaviour'
        VB: >-
          Public Class MainMenu

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.MainMenu.startOpen
      commentId: F:eDIA.MainMenu.startOpen
      language: CSharp
      name:
        CSharp: startOpen
        VB: startOpen
      nameWithType:
        CSharp: MainMenu.startOpen
        VB: MainMenu.startOpen
      qualifiedName:
        CSharp: eDIA.MainMenu.startOpen
        VB: eDIA.MainMenu.startOpen
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: startOpen
        path: ''
        startLine: 8356
      syntax:
        content:
          CSharp: public bool startOpen
          VB: Public startOpen As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.MainMenu.menuDistance
      commentId: F:eDIA.MainMenu.menuDistance
      language: CSharp
      name:
        CSharp: menuDistance
        VB: menuDistance
      nameWithType:
        CSharp: MainMenu.menuDistance
        VB: MainMenu.menuDistance
      qualifiedName:
        CSharp: eDIA.MainMenu.menuDistance
        VB: eDIA.MainMenu.menuDistance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: menuDistance
        path: ''
        startLine: 8357
      syntax:
        content:
          CSharp: public float menuDistance
          VB: Public menuDistance As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.MainMenu.overLayer
      commentId: F:eDIA.MainMenu.overLayer
      language: CSharp
      name:
        CSharp: overLayer
        VB: overLayer
      nameWithType:
        CSharp: MainMenu.overLayer
        VB: MainMenu.overLayer
      qualifiedName:
        CSharp: eDIA.MainMenu.overLayer
        VB: eDIA.MainMenu.overLayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: overLayer
        path: ''
        startLine: 8360
      summary: Layer to put the canvas on to draw on top of everything else
      example: []
      syntax:
        content:
          CSharp: public int overLayer
          VB: Public overLayer As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.MainMenu.isDebug
      commentId: F:eDIA.MainMenu.isDebug
      language: CSharp
      name:
        CSharp: isDebug
        VB: isDebug
      nameWithType:
        CSharp: MainMenu.isDebug
        VB: MainMenu.isDebug
      qualifiedName:
        CSharp: eDIA.MainMenu.isDebug
        VB: eDIA.MainMenu.isDebug
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: isDebug
        path: ''
        startLine: 8361
      syntax:
        content:
          CSharp: public bool isDebug
          VB: Public isDebug As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.MainMenu.overlayCam
      commentId: F:eDIA.MainMenu.overlayCam
      language: CSharp
      name:
        CSharp: overlayCam
        VB: overlayCam
      nameWithType:
        CSharp: MainMenu.overlayCam
        VB: MainMenu.overlayCam
      qualifiedName:
        CSharp: eDIA.MainMenu.overlayCam
        VB: eDIA.MainMenu.overlayCam
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: overlayCam
        path: ''
        startLine: 8364
      syntax:
        content:
          CSharp: public Camera overlayCam
          VB: Public overlayCam As Camera
        return:
          type: Global.Camera
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.MainMenu.menuHolder
      commentId: F:eDIA.MainMenu.menuHolder
      language: CSharp
      name:
        CSharp: menuHolder
        VB: menuHolder
      nameWithType:
        CSharp: MainMenu.menuHolder
        VB: MainMenu.menuHolder
      qualifiedName:
        CSharp: eDIA.MainMenu.menuHolder
        VB: eDIA.MainMenu.menuHolder
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: menuHolder
        path: ''
        startLine: 8365
      syntax:
        content:
          CSharp: public Transform menuHolder
          VB: Public menuHolder As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.MainMenu.buttonHolder
      commentId: F:eDIA.MainMenu.buttonHolder
      language: CSharp
      name:
        CSharp: buttonHolder
        VB: buttonHolder
      nameWithType:
        CSharp: MainMenu.buttonHolder
        VB: MainMenu.buttonHolder
      qualifiedName:
        CSharp: eDIA.MainMenu.buttonHolder
        VB: eDIA.MainMenu.buttonHolder
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: buttonHolder
        path: ''
        startLine: 8366
      syntax:
        content:
          CSharp: public RectTransform buttonHolder
          VB: Public buttonHolder As RectTransform
        return:
          type: Global.RectTransform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.MainMenu.buttonPrefab
      commentId: F:eDIA.MainMenu.buttonPrefab
      language: CSharp
      name:
        CSharp: buttonPrefab
        VB: buttonPrefab
      nameWithType:
        CSharp: MainMenu.buttonPrefab
        VB: MainMenu.buttonPrefab
      qualifiedName:
        CSharp: eDIA.MainMenu.buttonPrefab
        VB: eDIA.MainMenu.buttonPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: buttonPrefab
        path: ''
        startLine: 8367
      syntax:
        content:
          CSharp: public GameObject buttonPrefab
          VB: Public buttonPrefab As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.MainMenu.closeButton
      commentId: F:eDIA.MainMenu.closeButton
      language: CSharp
      name:
        CSharp: closeButton
        VB: closeButton
      nameWithType:
        CSharp: MainMenu.closeButton
        VB: MainMenu.closeButton
      qualifiedName:
        CSharp: eDIA.MainMenu.closeButton
        VB: eDIA.MainMenu.closeButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: closeButton
        path: ''
        startLine: 8370
      syntax:
        content:
          CSharp: public Button closeButton
          VB: Public closeButton As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.MainMenu.quitButton
      commentId: F:eDIA.MainMenu.quitButton
      language: CSharp
      name:
        CSharp: quitButton
        VB: quitButton
      nameWithType:
        CSharp: MainMenu.quitButton
        VB: MainMenu.quitButton
      qualifiedName:
        CSharp: eDIA.MainMenu.quitButton
        VB: eDIA.MainMenu.quitButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: quitButton
        path: ''
        startLine: 8371
      syntax:
        content:
          CSharp: public Button quitButton
          VB: Public quitButton As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.MainMenu.OnLoadBegin
      commentId: F:eDIA.MainMenu.OnLoadBegin
      language: CSharp
      name:
        CSharp: OnLoadBegin
        VB: OnLoadBegin
      nameWithType:
        CSharp: MainMenu.OnLoadBegin
        VB: MainMenu.OnLoadBegin
      qualifiedName:
        CSharp: eDIA.MainMenu.OnLoadBegin
        VB: eDIA.MainMenu.OnLoadBegin
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: OnLoadBegin
        path: ''
        startLine: 8374
      syntax:
        content:
          CSharp: public UnityEvent OnLoadBegin
          VB: Public OnLoadBegin As UnityEvent
        return:
          type: Global.UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.MainMenu.OnLoadEnd
      commentId: F:eDIA.MainMenu.OnLoadEnd
      language: CSharp
      name:
        CSharp: OnLoadEnd
        VB: OnLoadEnd
      nameWithType:
        CSharp: MainMenu.OnLoadEnd
        VB: MainMenu.OnLoadEnd
      qualifiedName:
        CSharp: eDIA.MainMenu.OnLoadEnd
        VB: eDIA.MainMenu.OnLoadEnd
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: OnLoadEnd
        path: ''
        startLine: 8375
      syntax:
        content:
          CSharp: public UnityEvent OnLoadEnd
          VB: Public OnLoadEnd As UnityEvent
        return:
          type: Global.UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.MainMenu.OpenMenu(System.Boolean)
      commentId: M:eDIA.MainMenu.OpenMenu(System.Boolean)
      language: CSharp
      name:
        CSharp: OpenMenu(Boolean)
        VB: OpenMenu(Boolean)
      nameWithType:
        CSharp: MainMenu.OpenMenu(Boolean)
        VB: MainMenu.OpenMenu(Boolean)
      qualifiedName:
        CSharp: eDIA.MainMenu.OpenMenu(System.Boolean)
        VB: eDIA.MainMenu.OpenMenu(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: OpenMenu
        path: ''
        startLine: 8465
      syntax:
        content:
          CSharp: public void OpenMenu(bool onOff)
          VB: Public Sub OpenMenu(onOff As Boolean)
        parameters:
        - id: onOff
          type: System.Boolean
      overload: eDIA.MainMenu.OpenMenu*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.MainMenu.aScene
    commentId: T:eDIA.MainMenu.aScene
    language: CSharp
    name:
      CSharp: MainMenu.aScene
      VB: MainMenu.aScene
    nameWithType:
      CSharp: MainMenu.aScene
      VB: MainMenu.aScene
    qualifiedName:
      CSharp: eDIA.MainMenu.aScene
      VB: eDIA.MainMenu.aScene
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: aScene
      path: ''
      startLine: 8337
    summary: A scene menuitem container
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class aScene
        VB: >-
          <Serializable>

          Public Class aScene
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.MainMenu.aScene.name
      commentId: F:eDIA.MainMenu.aScene.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: MainMenu.aScene.name
        VB: MainMenu.aScene.name
      qualifiedName:
        CSharp: eDIA.MainMenu.aScene.name
        VB: eDIA.MainMenu.aScene.name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: name
        path: ''
        startLine: 8339
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.MainMenu.aScene.path
      commentId: F:eDIA.MainMenu.aScene.path
      language: CSharp
      name:
        CSharp: path
        VB: path
      nameWithType:
        CSharp: MainMenu.aScene.path
        VB: MainMenu.aScene.path
      qualifiedName:
        CSharp: eDIA.MainMenu.aScene.path
        VB: eDIA.MainMenu.aScene.path
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: path
        path: ''
        startLine: 8340
      syntax:
        content:
          CSharp: public string path
          VB: Public path As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.MainMenu.aScene.button
      commentId: F:eDIA.MainMenu.aScene.button
      language: CSharp
      name:
        CSharp: button
        VB: button
      nameWithType:
        CSharp: MainMenu.aScene.button
        VB: MainMenu.aScene.button
      qualifiedName:
        CSharp: eDIA.MainMenu.aScene.button
        VB: eDIA.MainMenu.aScene.button
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: button
        path: ''
        startLine: 8341
      syntax:
        content:
          CSharp: public Button button
          VB: Public button As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.MainMenu.aScene.#ctor(System.String,System.String)
      commentId: M:eDIA.MainMenu.aScene.#ctor(System.String,System.String)
      language: CSharp
      name:
        CSharp: aScene(String, String)
        VB: aScene(String, String)
      nameWithType:
        CSharp: MainMenu.aScene.aScene(String, String)
        VB: MainMenu.aScene.aScene(String, String)
      qualifiedName:
        CSharp: eDIA.MainMenu.aScene.aScene(System.String, System.String)
        VB: eDIA.MainMenu.aScene.aScene(System.String, System.String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: .ctor
        path: ''
        startLine: 8343
      syntax:
        content:
          CSharp: public aScene(string _name, string _path)
          VB: Public Sub New(_name As String, _path As String)
        parameters:
        - id: _name
          type: System.String
        - id: _path
          type: System.String
      overload: eDIA.MainMenu.aScene.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.XRController
    commentId: T:eDIA.XRController
    language: CSharp
    name:
      CSharp: XRController
      VB: XRController
    nameWithType:
      CSharp: XRController
      VB: XRController
    qualifiedName:
      CSharp: eDIA.XRController
      VB: eDIA.XRController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: XRController
      path: ''
      startLine: 8550
    syntax:
      content:
        CSharp: 'public class XRController : MonoBehaviour'
        VB: >-
          Public Class XRController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.XRController.interactorType
      commentId: F:eDIA.XRController.interactorType
      language: CSharp
      name:
        CSharp: interactorType
        VB: interactorType
      nameWithType:
        CSharp: XRController.interactorType
        VB: XRController.interactorType
      qualifiedName:
        CSharp: eDIA.XRController.interactorType
        VB: eDIA.XRController.interactorType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: interactorType
        path: ''
        startLine: 8553
      syntax:
        content:
          CSharp: public Constants.Interactor interactorType
          VB: Public interactorType As Constants.Interactor
        return:
          type: eDIA.Constants.Interactor
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.XRController.isAllowedToBeVisable
      commentId: F:eDIA.XRController.isAllowedToBeVisable
      language: CSharp
      name:
        CSharp: isAllowedToBeVisable
        VB: isAllowedToBeVisable
      nameWithType:
        CSharp: XRController.isAllowedToBeVisable
        VB: XRController.isAllowedToBeVisable
      qualifiedName:
        CSharp: eDIA.XRController.isAllowedToBeVisable
        VB: eDIA.XRController.isAllowedToBeVisable
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: isAllowedToBeVisable
        path: ''
        startLine: 8555
      syntax:
        content:
          CSharp: public bool isAllowedToBeVisable
          VB: Public isAllowedToBeVisable As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.XRController.isAllowedToInteract
      commentId: F:eDIA.XRController.isAllowedToInteract
      language: CSharp
      name:
        CSharp: isAllowedToInteract
        VB: isAllowedToInteract
      nameWithType:
        CSharp: XRController.isAllowedToInteract
        VB: XRController.isAllowedToInteract
      qualifiedName:
        CSharp: eDIA.XRController.isAllowedToInteract
        VB: eDIA.XRController.isAllowedToInteract
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: isAllowedToInteract
        path: ''
        startLine: 8556
      syntax:
        content:
          CSharp: public bool isAllowedToInteract
          VB: Public isAllowedToInteract As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.XRController.isVisible
      commentId: F:eDIA.XRController.isVisible
      language: CSharp
      name:
        CSharp: isVisible
        VB: isVisible
      nameWithType:
        CSharp: XRController.isVisible
        VB: XRController.isVisible
      qualifiedName:
        CSharp: eDIA.XRController.isVisible
        VB: eDIA.XRController.isVisible
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: isVisible
        path: ''
        startLine: 8557
      syntax:
        content:
          CSharp: public bool isVisible
          VB: Public isVisible As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.XRController.isInteractive
      commentId: F:eDIA.XRController.isInteractive
      language: CSharp
      name:
        CSharp: isInteractive
        VB: isInteractive
      nameWithType:
        CSharp: XRController.isInteractive
        VB: XRController.isInteractive
      qualifiedName:
        CSharp: eDIA.XRController.isInteractive
        VB: eDIA.XRController.isInteractive
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: isInteractive
        path: ''
        startLine: 8558
      syntax:
        content:
          CSharp: public bool isInteractive
          VB: Public isInteractive As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.XRController.rayInteractor
      commentId: F:eDIA.XRController.rayInteractor
      language: CSharp
      name:
        CSharp: rayInteractor
        VB: rayInteractor
      nameWithType:
        CSharp: XRController.rayInteractor
        VB: XRController.rayInteractor
      qualifiedName:
        CSharp: eDIA.XRController.rayInteractor
        VB: eDIA.XRController.rayInteractor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: rayInteractor
        path: ''
        startLine: 8561
      syntax:
        content:
          CSharp: public Transform rayInteractor
          VB: Public rayInteractor As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.XRController.EnableInteraction(System.Boolean)
      commentId: M:eDIA.XRController.EnableInteraction(System.Boolean)
      language: CSharp
      name:
        CSharp: EnableInteraction(Boolean)
        VB: EnableInteraction(Boolean)
      nameWithType:
        CSharp: XRController.EnableInteraction(Boolean)
        VB: XRController.EnableInteraction(Boolean)
      qualifiedName:
        CSharp: eDIA.XRController.EnableInteraction(System.Boolean)
        VB: eDIA.XRController.EnableInteraction(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: EnableInteraction
        path: ''
        startLine: 8657
      summary: Enable/Disable interaction
      example: []
      syntax:
        content:
          CSharp: public void EnableInteraction(bool onOff)
          VB: Public Sub EnableInteraction(onOff As Boolean)
        parameters:
        - id: onOff
          type: System.Boolean
          description: True/false
      overload: eDIA.XRController.EnableInteraction*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.XRController.Show(System.Boolean)
      commentId: M:eDIA.XRController.Show(System.Boolean)
      language: CSharp
      name:
        CSharp: Show(Boolean)
        VB: Show(Boolean)
      nameWithType:
        CSharp: XRController.Show(Boolean)
        VB: XRController.Show(Boolean)
      qualifiedName:
        CSharp: eDIA.XRController.Show(System.Boolean)
        VB: eDIA.XRController.Show(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: Show
        path: ''
        startLine: 8668
      summary: Show/Hide controller
      example: []
      syntax:
        content:
          CSharp: public void Show(bool onOff)
          VB: Public Sub Show(onOff As Boolean)
        parameters:
        - id: onOff
          type: System.Boolean
          description: True/false
      overload: eDIA.XRController.Show*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.XRManager
    commentId: T:eDIA.XRManager
    language: CSharp
    name:
      CSharp: XRManager
      VB: XRManager
    nameWithType:
      CSharp: XRManager
      VB: XRManager
    qualifiedName:
      CSharp: eDIA.XRManager
      VB: eDIA.XRManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: XRManager
      path: ''
      startLine: 8693
    summary: "\nThis singleton script travels along the scenes that are loaded as it is DontDestroyOnLoad. <br />\nResponsible for loading/unloading, user related actions, top level application.<br />\nHas references to the XR rig camera and hands for the rest of the application.<br />\n"
    example: []
    syntax:
      content:
        CSharp: 'public class XRManager : Singleton<XRManager>'
        VB: >-
          Public Class XRManager

              Inherits Singleton(Of XRManager)
    inheritance:
    - System.Object
    - Global.Singleton{eDIA.XRManager}
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.XRManager.showLog
      commentId: F:eDIA.XRManager.showLog
      language: CSharp
      name:
        CSharp: showLog
        VB: showLog
      nameWithType:
        CSharp: XRManager.showLog
        VB: XRManager.showLog
      qualifiedName:
        CSharp: eDIA.XRManager.showLog
        VB: eDIA.XRManager.showLog
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: showLog
        path: ''
        startLine: 8696
      syntax:
        content:
          CSharp: public bool showLog
          VB: Public showLog As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.XRManager.logColor
      commentId: F:eDIA.XRManager.logColor
      language: CSharp
      name:
        CSharp: logColor
        VB: logColor
      nameWithType:
        CSharp: XRManager.logColor
        VB: XRManager.logColor
      qualifiedName:
        CSharp: eDIA.XRManager.logColor
        VB: eDIA.XRManager.logColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: logColor
        path: ''
        startLine: 8697
      syntax:
        content:
          CSharp: public Color logColor
          VB: Public logColor As Color
        return:
          type: Global.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.XRManager.XRCam
      commentId: F:eDIA.XRManager.XRCam
      language: CSharp
      name:
        CSharp: XRCam
        VB: XRCam
      nameWithType:
        CSharp: XRManager.XRCam
        VB: XRManager.XRCam
      qualifiedName:
        CSharp: eDIA.XRManager.XRCam
        VB: eDIA.XRManager.XRCam
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: XRCam
        path: ''
        startLine: 8700
      syntax:
        content:
          CSharp: public Transform XRCam
          VB: Public XRCam As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.XRManager.XRLeft
      commentId: F:eDIA.XRManager.XRLeft
      language: CSharp
      name:
        CSharp: XRLeft
        VB: XRLeft
      nameWithType:
        CSharp: XRManager.XRLeft
        VB: XRManager.XRLeft
      qualifiedName:
        CSharp: eDIA.XRManager.XRLeft
        VB: eDIA.XRManager.XRLeft
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: XRLeft
        path: ''
        startLine: 8701
      syntax:
        content:
          CSharp: public Transform XRLeft
          VB: Public XRLeft As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.XRManager.XRRight
      commentId: F:eDIA.XRManager.XRRight
      language: CSharp
      name:
        CSharp: XRRight
        VB: XRRight
      nameWithType:
        CSharp: XRManager.XRRight
        VB: XRManager.XRRight
      qualifiedName:
        CSharp: eDIA.XRManager.XRRight
        VB: eDIA.XRManager.XRRight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: XRRight
        path: ''
        startLine: 8702
      syntax:
        content:
          CSharp: public Transform XRRight
          VB: Public XRRight As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.XRManager.mainMenuHolder
      commentId: F:eDIA.XRManager.mainMenuHolder
      language: CSharp
      name:
        CSharp: mainMenuHolder
        VB: mainMenuHolder
      nameWithType:
        CSharp: XRManager.mainMenuHolder
        VB: XRManager.mainMenuHolder
      qualifiedName:
        CSharp: eDIA.XRManager.mainMenuHolder
        VB: eDIA.XRManager.mainMenuHolder
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: mainMenuHolder
        path: ''
        startLine: 8703
      syntax:
        content:
          CSharp: public Transform mainMenuHolder
          VB: Public mainMenuHolder As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.XRManager.TurnOnRayInteractor
      commentId: M:eDIA.XRManager.TurnOnRayInteractor
      language: CSharp
      name:
        CSharp: TurnOnRayInteractor()
        VB: TurnOnRayInteractor()
      nameWithType:
        CSharp: XRManager.TurnOnRayInteractor()
        VB: XRManager.TurnOnRayInteractor()
      qualifiedName:
        CSharp: eDIA.XRManager.TurnOnRayInteractor()
        VB: eDIA.XRManager.TurnOnRayInteractor()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: TurnOnRayInteractor
        path: ''
        startLine: 8727
      syntax:
        content:
          CSharp: public void TurnOnRayInteractor()
          VB: Public Sub TurnOnRayInteractor
      overload: eDIA.XRManager.TurnOnRayInteractor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.XRManager.MovePlayarea(Transform)
      commentId: M:eDIA.XRManager.MovePlayarea(Transform)
      language: CSharp
      name:
        CSharp: MovePlayarea(Transform)
        VB: MovePlayarea(Transform)
      nameWithType:
        CSharp: XRManager.MovePlayarea(Transform)
        VB: XRManager.MovePlayarea(Transform)
      qualifiedName:
        CSharp: eDIA.XRManager.MovePlayarea(Transform)
        VB: eDIA.XRManager.MovePlayarea(Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: MovePlayarea
        path: ''
        startLine: 8736
      summary: The pivot of the player will be set on the location of this Injector
      example: []
      syntax:
        content:
          CSharp: public void MovePlayarea(Transform newTransform)
          VB: Public Sub MovePlayarea(newTransform As Transform)
        parameters:
        - id: newTransform
          type: Global.Transform
      overload: eDIA.XRManager.MovePlayarea*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.XRManager.EnableXRInteraction(System.Boolean)
      commentId: M:eDIA.XRManager.EnableXRInteraction(System.Boolean)
      language: CSharp
      name:
        CSharp: EnableXRInteraction(Boolean)
        VB: EnableXRInteraction(Boolean)
      nameWithType:
        CSharp: XRManager.EnableXRInteraction(Boolean)
        VB: XRManager.EnableXRInteraction(Boolean)
      qualifiedName:
        CSharp: eDIA.XRManager.EnableXRInteraction(System.Boolean)
        VB: eDIA.XRManager.EnableXRInteraction(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: EnableXRInteraction
        path: ''
        startLine: 8743
      summary: Turn XR hand / controller interaction possibility on or off.
      example: []
      syntax:
        content:
          CSharp: public void EnableXRInteraction(bool onOff)
          VB: Public Sub EnableXRInteraction(onOff As Boolean)
        parameters:
        - id: onOff
          type: System.Boolean
          description: Boolean
      overload: eDIA.XRManager.EnableXRInteraction*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.XRManager.SetHandPose(System.String)
      commentId: M:eDIA.XRManager.SetHandPose(System.String)
      language: CSharp
      name:
        CSharp: SetHandPose(String)
        VB: SetHandPose(String)
      nameWithType:
        CSharp: XRManager.SetHandPose(String)
        VB: XRManager.SetHandPose(String)
      qualifiedName:
        CSharp: eDIA.XRManager.SetHandPose(System.String)
        VB: eDIA.XRManager.SetHandPose(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: SetHandPose
        path: ''
        startLine: 8753
      summary: Set the hand pose for the current interactive hand(s). Pose as string &apos;point&apos;,&apos;fist&apos;,&apos;idle&apos;
      example: []
      syntax:
        content:
          CSharp: public void SetHandPose(string pose)
          VB: Public Sub SetHandPose(pose As String)
        parameters:
        - id: pose
          type: System.String
          description: ''
      overload: eDIA.XRManager.SetHandPose*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.XRManager.EnableCustomHandPoses(System.Boolean)
      commentId: M:eDIA.XRManager.EnableCustomHandPoses(System.Boolean)
      language: CSharp
      name:
        CSharp: EnableCustomHandPoses(Boolean)
        VB: EnableCustomHandPoses(Boolean)
      nameWithType:
        CSharp: XRManager.EnableCustomHandPoses(Boolean)
        VB: XRManager.EnableCustomHandPoses(Boolean)
      qualifiedName:
        CSharp: eDIA.XRManager.EnableCustomHandPoses(System.Boolean)
        VB: eDIA.XRManager.EnableCustomHandPoses(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: EnableCustomHandPoses
        path: ''
        startLine: 8758
      summary: Enable custom fixed handposes, expects boolean
      example: []
      syntax:
        content:
          CSharp: public void EnableCustomHandPoses(bool onOff)
          VB: Public Sub EnableCustomHandPoses(onOff As Boolean)
        parameters:
        - id: onOff
          type: System.Boolean
      overload: eDIA.XRManager.EnableCustomHandPoses*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.XRManager.ShowHands(System.Boolean)
      commentId: M:eDIA.XRManager.ShowHands(System.Boolean)
      language: CSharp
      name:
        CSharp: ShowHands(Boolean)
        VB: ShowHands(Boolean)
      nameWithType:
        CSharp: XRManager.ShowHands(Boolean)
        VB: XRManager.ShowHands(Boolean)
      qualifiedName:
        CSharp: eDIA.XRManager.ShowHands(System.Boolean)
        VB: eDIA.XRManager.ShowHands(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: ShowHands
        path: ''
        startLine: 8763
      summary: Shows the hands that are set to be allowed visible on/off
      example: []
      syntax:
        content:
          CSharp: public void ShowHands(bool onOff)
          VB: Public Sub ShowHands(onOff As Boolean)
        parameters:
        - id: onOff
          type: System.Boolean
      overload: eDIA.XRManager.ShowHands*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.XRManager.AddToLog(System.String)
      commentId: M:eDIA.XRManager.AddToLog(System.String)
      language: CSharp
      name:
        CSharp: AddToLog(String)
        VB: AddToLog(String)
      nameWithType:
        CSharp: XRManager.AddToLog(String)
        VB: XRManager.AddToLog(String)
      qualifiedName:
        CSharp: eDIA.XRManager.AddToLog(System.String)
        VB: eDIA.XRManager.AddToLog(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: AddToLog
        path: ''
        startLine: 8772
      syntax:
        content:
          CSharp: public void AddToLog(string _msg)
          VB: Public Sub AddToLog(_msg As String)
        parameters:
        - id: _msg
          type: System.String
      overload: eDIA.XRManager.AddToLog*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.XRrigInitialiser
    commentId: T:eDIA.XRrigInitialiser
    language: CSharp
    name:
      CSharp: XRrigInitialiser
      VB: XRrigInitialiser
    nameWithType:
      CSharp: XRrigInitialiser
      VB: XRrigInitialiser
    qualifiedName:
      CSharp: eDIA.XRrigInitialiser
      VB: eDIA.XRrigInitialiser
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: XRrigInitialiser
      path: ''
      startLine: 8788
    summary: 'Injects eDIA XRrig prefab in the current loaded scene at Awake and positions the playarea on this gameobjects transform. '
    example: []
    syntax:
      content:
        CSharp: 'public class XRrigInitialiser : MonoBehaviour'
        VB: >-
          Public Class XRrigInitialiser

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.XRrigInitialiser.XRrigPrefab
      commentId: F:eDIA.XRrigInitialiser.XRrigPrefab
      language: CSharp
      name:
        CSharp: XRrigPrefab
        VB: XRrigPrefab
      nameWithType:
        CSharp: XRrigInitialiser.XRrigPrefab
        VB: XRrigInitialiser.XRrigPrefab
      qualifiedName:
        CSharp: eDIA.XRrigInitialiser.XRrigPrefab
        VB: eDIA.XRrigInitialiser.XRrigPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: XRrigPrefab
        path: ''
        startLine: 8790
      syntax:
        content:
          CSharp: public GameObject XRrigPrefab
          VB: Public XRrigPrefab As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.ScreenFader
    commentId: T:eDIA.ScreenFader
    language: CSharp
    name:
      CSharp: ScreenFader
      VB: ScreenFader
    nameWithType:
      CSharp: ScreenFader
      VB: ScreenFader
    qualifiedName:
      CSharp: eDIA.ScreenFader
      VB: eDIA.ScreenFader
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: ScreenFader
      path: ''
      startLine: 8809
    summary: 'Handles fading the camera view '
    example: []
    syntax:
      content:
        CSharp: 'public class ScreenFader : MonoBehaviour'
        VB: >-
          Public Class ScreenFader

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.ScreenFader.StartFadeIn
      commentId: M:eDIA.ScreenFader.StartFadeIn
      language: CSharp
      name:
        CSharp: StartFadeIn()
        VB: StartFadeIn()
      nameWithType:
        CSharp: ScreenFader.StartFadeIn()
        VB: ScreenFader.StartFadeIn()
      qualifiedName:
        CSharp: eDIA.ScreenFader.StartFadeIn()
        VB: eDIA.ScreenFader.StartFadeIn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: StartFadeIn
        path: ''
        startLine: 8830
      syntax:
        content:
          CSharp: public Coroutine StartFadeIn()
          VB: Public Function StartFadeIn As Coroutine
        return:
          type: Global.Coroutine
      overload: eDIA.ScreenFader.StartFadeIn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.ScreenFader.StartFadeOut
      commentId: M:eDIA.ScreenFader.StartFadeOut
      language: CSharp
      name:
        CSharp: StartFadeOut()
        VB: StartFadeOut()
      nameWithType:
        CSharp: ScreenFader.StartFadeOut()
        VB: ScreenFader.StartFadeOut()
      qualifiedName:
        CSharp: eDIA.ScreenFader.StartFadeOut()
        VB: eDIA.ScreenFader.StartFadeOut()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: StartFadeOut
        path: ''
        startLine: 8846
      syntax:
        content:
          CSharp: public Coroutine StartFadeOut()
          VB: Public Function StartFadeOut As Coroutine
        return:
          type: Global.Coroutine
      overload: eDIA.ScreenFader.StartFadeOut*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.ControlPanelManager
    commentId: T:eDIA.ControlPanelManager
    language: CSharp
    name:
      CSharp: ControlPanelManager
      VB: ControlPanelManager
    nameWithType:
      CSharp: ControlPanelManager
      VB: ControlPanelManager
    qualifiedName:
      CSharp: eDIA.ControlPanelManager
      VB: eDIA.ControlPanelManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: ControlPanelManager
      path: ''
      startLine: 8872
    syntax:
      content:
        CSharp: 'public class ControlPanelManager : MonoBehaviour'
        VB: >-
          Public Class ControlPanelManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.ControlPanelManager.ControlPanelMode
      commentId: F:eDIA.ControlPanelManager.ControlPanelMode
      language: CSharp
      name:
        CSharp: ControlPanelMode
        VB: ControlPanelMode
      nameWithType:
        CSharp: ControlPanelManager.ControlPanelMode
        VB: ControlPanelManager.ControlPanelMode
      qualifiedName:
        CSharp: eDIA.ControlPanelManager.ControlPanelMode
        VB: eDIA.ControlPanelManager.ControlPanelMode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: ControlPanelMode
        path: ''
        startLine: 8875
      syntax:
        content:
          CSharp: public ControlPanelManager.ControlPanelModes ControlPanelMode
          VB: Public ControlPanelMode As ControlPanelManager.ControlPanelModes
        return:
          type: eDIA.ControlPanelManager.ControlPanelModes
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.ControlPanelManager.SetControlPanelMode(System.Int32)
      commentId: M:eDIA.ControlPanelManager.SetControlPanelMode(System.Int32)
      language: CSharp
      name:
        CSharp: SetControlPanelMode(Int32)
        VB: SetControlPanelMode(Int32)
      nameWithType:
        CSharp: ControlPanelManager.SetControlPanelMode(Int32)
        VB: ControlPanelManager.SetControlPanelMode(Int32)
      qualifiedName:
        CSharp: eDIA.ControlPanelManager.SetControlPanelMode(System.Int32)
        VB: eDIA.ControlPanelManager.SetControlPanelMode(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: SetControlPanelMode
        path: ''
        startLine: 8891
      syntax:
        content:
          CSharp: public void SetControlPanelMode(int mode)
          VB: Public Sub SetControlPanelMode(mode As Integer)
        parameters:
        - id: mode
          type: System.Int32
      overload: eDIA.ControlPanelManager.SetControlPanelMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.ControlPanelManager.ControlPanelModes
    commentId: T:eDIA.ControlPanelManager.ControlPanelModes
    language: CSharp
    name:
      CSharp: ControlPanelManager.ControlPanelModes
      VB: ControlPanelManager.ControlPanelModes
    nameWithType:
      CSharp: ControlPanelManager.ControlPanelModes
      VB: ControlPanelManager.ControlPanelModes
    qualifiedName:
      CSharp: eDIA.ControlPanelManager.ControlPanelModes
      VB: eDIA.ControlPanelManager.ControlPanelModes
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: ControlPanelModes
      path: ''
      startLine: 8874
    syntax:
      content:
        CSharp: public enum ControlPanelModes
        VB: Public Enum ControlPanelModes
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: eDIA.ControlPanelManager.ControlPanelModes.Hidden
      commentId: F:eDIA.ControlPanelManager.ControlPanelModes.Hidden
      language: CSharp
      name:
        CSharp: Hidden
        VB: Hidden
      nameWithType:
        CSharp: ControlPanelManager.ControlPanelModes.Hidden
        VB: ControlPanelManager.ControlPanelModes.Hidden
      qualifiedName:
        CSharp: eDIA.ControlPanelManager.ControlPanelModes.Hidden
        VB: eDIA.ControlPanelManager.ControlPanelModes.Hidden
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: Hidden
        path: ''
        startLine: 8874
      syntax:
        content:
          CSharp: Hidden = 0
          VB: Hidden = 0
        return:
          type: eDIA.ControlPanelManager.ControlPanelModes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: eDIA.ControlPanelManager.ControlPanelModes.OnScreen
      commentId: F:eDIA.ControlPanelManager.ControlPanelModes.OnScreen
      language: CSharp
      name:
        CSharp: OnScreen
        VB: OnScreen
      nameWithType:
        CSharp: ControlPanelManager.ControlPanelModes.OnScreen
        VB: ControlPanelManager.ControlPanelModes.OnScreen
      qualifiedName:
        CSharp: eDIA.ControlPanelManager.ControlPanelModes.OnScreen
        VB: eDIA.ControlPanelManager.ControlPanelModes.OnScreen
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: OnScreen
        path: ''
        startLine: 8874
      syntax:
        content:
          CSharp: OnScreen = 1
          VB: OnScreen = 1
        return:
          type: eDIA.ControlPanelManager.ControlPanelModes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: eDIA.ControlPanelManager.ControlPanelModes.InWorld
      commentId: F:eDIA.ControlPanelManager.ControlPanelModes.InWorld
      language: CSharp
      name:
        CSharp: InWorld
        VB: InWorld
      nameWithType:
        CSharp: ControlPanelManager.ControlPanelModes.InWorld
        VB: ControlPanelManager.ControlPanelModes.InWorld
      qualifiedName:
        CSharp: eDIA.ControlPanelManager.ControlPanelModes.InWorld
        VB: eDIA.ControlPanelManager.ControlPanelModes.InWorld
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: InWorld
        path: ''
        startLine: 8874
      syntax:
        content:
          CSharp: InWorld = 2
          VB: InWorld = 2
        return:
          type: eDIA.ControlPanelManager.ControlPanelModes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: eDIA.ExperimenterPanel
    commentId: T:eDIA.ExperimenterPanel
    language: CSharp
    name:
      CSharp: ExperimenterPanel
      VB: ExperimenterPanel
    nameWithType:
      CSharp: ExperimenterPanel
      VB: ExperimenterPanel
    qualifiedName:
      CSharp: eDIA.ExperimenterPanel
      VB: eDIA.ExperimenterPanel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: ExperimenterPanel
      path: ''
      startLine: 8962
    summary: Base Panel functionality class
    example: []
    syntax:
      content:
        CSharp: 'public class ExperimenterPanel : MonoBehaviour'
        VB: >-
          Public Class ExperimenterPanel

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.ExperimenterPanel.children
      commentId: F:eDIA.ExperimenterPanel.children
      language: CSharp
      name:
        CSharp: children
        VB: children
      nameWithType:
        CSharp: ExperimenterPanel.children
        VB: ExperimenterPanel.children
      qualifiedName:
        CSharp: eDIA.ExperimenterPanel.children
        VB: eDIA.ExperimenterPanel.children
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: children
        path: ''
        startLine: 8968
      syntax:
        content:
          CSharp: public List<Transform> children
          VB: Public children As List(Of Transform)
        return:
          type: System.Collections.Generic.List{Transform}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.ExperimenterPanel.Awake
      commentId: M:eDIA.ExperimenterPanel.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: ExperimenterPanel.Awake()
        VB: ExperimenterPanel.Awake()
      qualifiedName:
        CSharp: eDIA.ExperimenterPanel.Awake()
        VB: eDIA.ExperimenterPanel.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: Awake
        path: ''
        startLine: 8971
      syntax:
        content:
          CSharp: public virtual void Awake()
          VB: Public Overridable Sub Awake
      overload: eDIA.ExperimenterPanel.Awake*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: eDIA.ExperimenterPanel.ShowPanel
      commentId: M:eDIA.ExperimenterPanel.ShowPanel
      language: CSharp
      name:
        CSharp: ShowPanel()
        VB: ShowPanel()
      nameWithType:
        CSharp: ExperimenterPanel.ShowPanel()
        VB: ExperimenterPanel.ShowPanel()
      qualifiedName:
        CSharp: eDIA.ExperimenterPanel.ShowPanel()
        VB: eDIA.ExperimenterPanel.ShowPanel()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: ShowPanel
        path: ''
        startLine: 8979
      syntax:
        content:
          CSharp: public void ShowPanel()
          VB: Public Sub ShowPanel
      overload: eDIA.ExperimenterPanel.ShowPanel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.ExperimenterPanel.HidePanel
      commentId: M:eDIA.ExperimenterPanel.HidePanel
      language: CSharp
      name:
        CSharp: HidePanel()
        VB: HidePanel()
      nameWithType:
        CSharp: ExperimenterPanel.HidePanel()
        VB: ExperimenterPanel.HidePanel()
      qualifiedName:
        CSharp: eDIA.ExperimenterPanel.HidePanel()
        VB: eDIA.ExperimenterPanel.HidePanel()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: HidePanel
        path: ''
        startLine: 8988
      syntax:
        content:
          CSharp: public void HidePanel()
          VB: Public Sub HidePanel
      overload: eDIA.ExperimenterPanel.HidePanel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.ExperimenterPanel.ApplyTheme
      commentId: M:eDIA.ExperimenterPanel.ApplyTheme
      language: CSharp
      name:
        CSharp: ApplyTheme()
        VB: ApplyTheme()
      nameWithType:
        CSharp: ExperimenterPanel.ApplyTheme()
        VB: ExperimenterPanel.ApplyTheme()
      qualifiedName:
        CSharp: eDIA.ExperimenterPanel.ApplyTheme()
        VB: eDIA.ExperimenterPanel.ApplyTheme()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: ApplyTheme
        path: ''
        startLine: 8995
      syntax:
        content:
          CSharp: public void ApplyTheme()
          VB: Public Sub ApplyTheme
      overload: eDIA.ExperimenterPanel.ApplyTheme*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.PanelApplicationSettings
    commentId: T:eDIA.PanelApplicationSettings
    language: CSharp
    name:
      CSharp: PanelApplicationSettings
      VB: PanelApplicationSettings
    nameWithType:
      CSharp: PanelApplicationSettings
      VB: PanelApplicationSettings
    qualifiedName:
      CSharp: eDIA.PanelApplicationSettings
      VB: eDIA.PanelApplicationSettings
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: PanelApplicationSettings
      path: ''
      startLine: 9012
    syntax:
      content:
        CSharp: 'public class PanelApplicationSettings : ExperimenterPanel'
        VB: >-
          Public Class PanelApplicationSettings

              Inherits ExperimenterPanel
    inheritance:
    - System.Object
    - eDIA.ExperimenterPanel
    inheritedMembers:
    - eDIA.ExperimenterPanel.children
    - eDIA.ExperimenterPanel.ShowPanel
    - eDIA.ExperimenterPanel.HidePanel
    - eDIA.ExperimenterPanel.ApplyTheme
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.PanelApplicationSettings.btnApply
      commentId: F:eDIA.PanelApplicationSettings.btnApply
      language: CSharp
      name:
        CSharp: btnApply
        VB: btnApply
      nameWithType:
        CSharp: PanelApplicationSettings.btnApply
        VB: PanelApplicationSettings.btnApply
      qualifiedName:
        CSharp: eDIA.PanelApplicationSettings.btnApply
        VB: eDIA.PanelApplicationSettings.btnApply
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: btnApply
        path: ''
        startLine: 9016
      syntax:
        content:
          CSharp: public Button btnApply
          VB: Public btnApply As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelApplicationSettings.btnClose
      commentId: F:eDIA.PanelApplicationSettings.btnClose
      language: CSharp
      name:
        CSharp: btnClose
        VB: btnClose
      nameWithType:
        CSharp: PanelApplicationSettings.btnClose
        VB: PanelApplicationSettings.btnClose
      qualifiedName:
        CSharp: eDIA.PanelApplicationSettings.btnClose
        VB: eDIA.PanelApplicationSettings.btnClose
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: btnClose
        path: ''
        startLine: 9017
      syntax:
        content:
          CSharp: public Button btnClose
          VB: Public btnClose As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelApplicationSettings.btnBrowse
      commentId: F:eDIA.PanelApplicationSettings.btnBrowse
      language: CSharp
      name:
        CSharp: btnBrowse
        VB: btnBrowse
      nameWithType:
        CSharp: PanelApplicationSettings.btnBrowse
        VB: PanelApplicationSettings.btnBrowse
      qualifiedName:
        CSharp: eDIA.PanelApplicationSettings.btnBrowse
        VB: eDIA.PanelApplicationSettings.btnBrowse
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: btnBrowse
        path: ''
        startLine: 9018
      syntax:
        content:
          CSharp: public Button btnBrowse
          VB: Public btnBrowse As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelApplicationSettings.volumeSlider
      commentId: F:eDIA.PanelApplicationSettings.volumeSlider
      language: CSharp
      name:
        CSharp: volumeSlider
        VB: volumeSlider
      nameWithType:
        CSharp: PanelApplicationSettings.volumeSlider
        VB: PanelApplicationSettings.volumeSlider
      qualifiedName:
        CSharp: eDIA.PanelApplicationSettings.volumeSlider
        VB: eDIA.PanelApplicationSettings.volumeSlider
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: volumeSlider
        path: ''
        startLine: 9021
      syntax:
        content:
          CSharp: public Slider volumeSlider
          VB: Public volumeSlider As Slider
        return:
          type: Global.Slider
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelApplicationSettings.resolutionDropdown
      commentId: F:eDIA.PanelApplicationSettings.resolutionDropdown
      language: CSharp
      name:
        CSharp: resolutionDropdown
        VB: resolutionDropdown
      nameWithType:
        CSharp: PanelApplicationSettings.resolutionDropdown
        VB: PanelApplicationSettings.resolutionDropdown
      qualifiedName:
        CSharp: eDIA.PanelApplicationSettings.resolutionDropdown
        VB: eDIA.PanelApplicationSettings.resolutionDropdown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: resolutionDropdown
        path: ''
        startLine: 9022
      syntax:
        content:
          CSharp: public TMP_Dropdown resolutionDropdown
          VB: Public resolutionDropdown As TMP_Dropdown
        return:
          type: Global.TMP_Dropdown
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelApplicationSettings.interactiveInteractorDropdown
      commentId: F:eDIA.PanelApplicationSettings.interactiveInteractorDropdown
      language: CSharp
      name:
        CSharp: interactiveInteractorDropdown
        VB: interactiveInteractorDropdown
      nameWithType:
        CSharp: PanelApplicationSettings.interactiveInteractorDropdown
        VB: PanelApplicationSettings.interactiveInteractorDropdown
      qualifiedName:
        CSharp: eDIA.PanelApplicationSettings.interactiveInteractorDropdown
        VB: eDIA.PanelApplicationSettings.interactiveInteractorDropdown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: interactiveInteractorDropdown
        path: ''
        startLine: 9023
      syntax:
        content:
          CSharp: public TMP_Dropdown interactiveInteractorDropdown
          VB: Public interactiveInteractorDropdown As TMP_Dropdown
        return:
          type: Global.TMP_Dropdown
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelApplicationSettings.visibleInteractorDropdown
      commentId: F:eDIA.PanelApplicationSettings.visibleInteractorDropdown
      language: CSharp
      name:
        CSharp: visibleInteractorDropdown
        VB: visibleInteractorDropdown
      nameWithType:
        CSharp: PanelApplicationSettings.visibleInteractorDropdown
        VB: PanelApplicationSettings.visibleInteractorDropdown
      qualifiedName:
        CSharp: eDIA.PanelApplicationSettings.visibleInteractorDropdown
        VB: eDIA.PanelApplicationSettings.visibleInteractorDropdown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: visibleInteractorDropdown
        path: ''
        startLine: 9024
      syntax:
        content:
          CSharp: public TMP_Dropdown visibleInteractorDropdown
          VB: Public visibleInteractorDropdown As TMP_Dropdown
        return:
          type: Global.TMP_Dropdown
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelApplicationSettings.languageDropdown
      commentId: F:eDIA.PanelApplicationSettings.languageDropdown
      language: CSharp
      name:
        CSharp: languageDropdown
        VB: languageDropdown
      nameWithType:
        CSharp: PanelApplicationSettings.languageDropdown
        VB: PanelApplicationSettings.languageDropdown
      qualifiedName:
        CSharp: eDIA.PanelApplicationSettings.languageDropdown
        VB: eDIA.PanelApplicationSettings.languageDropdown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: languageDropdown
        path: ''
        startLine: 9025
      syntax:
        content:
          CSharp: public TMP_Dropdown languageDropdown
          VB: Public languageDropdown As TMP_Dropdown
        return:
          type: Global.TMP_Dropdown
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelApplicationSettings.pathToLogfilesField
      commentId: F:eDIA.PanelApplicationSettings.pathToLogfilesField
      language: CSharp
      name:
        CSharp: pathToLogfilesField
        VB: pathToLogfilesField
      nameWithType:
        CSharp: PanelApplicationSettings.pathToLogfilesField
        VB: PanelApplicationSettings.pathToLogfilesField
      qualifiedName:
        CSharp: eDIA.PanelApplicationSettings.pathToLogfilesField
        VB: eDIA.PanelApplicationSettings.pathToLogfilesField
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: pathToLogfilesField
        path: ''
        startLine: 9026
      syntax:
        content:
          CSharp: public TextMeshProUGUI pathToLogfilesField
          VB: Public pathToLogfilesField As TextMeshProUGUI
        return:
          type: Global.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelApplicationSettings.localSystemSettingsContainer
      commentId: F:eDIA.PanelApplicationSettings.localSystemSettingsContainer
      language: CSharp
      name:
        CSharp: localSystemSettingsContainer
        VB: localSystemSettingsContainer
      nameWithType:
        CSharp: PanelApplicationSettings.localSystemSettingsContainer
        VB: PanelApplicationSettings.localSystemSettingsContainer
      qualifiedName:
        CSharp: eDIA.PanelApplicationSettings.localSystemSettingsContainer
        VB: eDIA.PanelApplicationSettings.localSystemSettingsContainer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: localSystemSettingsContainer
        path: ''
        startLine: 9028
      syntax:
        content:
          CSharp: public SettingsDeclaration localSystemSettingsContainer
          VB: Public localSystemSettingsContainer As SettingsDeclaration
        return:
          type: eDIA.SettingsDeclaration
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelApplicationSettings.Awake
      commentId: M:eDIA.PanelApplicationSettings.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: PanelApplicationSettings.Awake()
        VB: PanelApplicationSettings.Awake()
      qualifiedName:
        CSharp: eDIA.PanelApplicationSettings.Awake()
        VB: eDIA.PanelApplicationSettings.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: Awake
        path: ''
        startLine: 9031
      syntax:
        content:
          CSharp: public override void Awake()
          VB: Public Overrides Sub Awake
      overload: eDIA.PanelApplicationSettings.Awake*
      overridden: eDIA.ExperimenterPanel.Awake
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: eDIA.PanelApplicationSettings.ValueChanged
      commentId: M:eDIA.PanelApplicationSettings.ValueChanged
      language: CSharp
      name:
        CSharp: ValueChanged()
        VB: ValueChanged()
      nameWithType:
        CSharp: PanelApplicationSettings.ValueChanged()
        VB: PanelApplicationSettings.ValueChanged()
      qualifiedName:
        CSharp: eDIA.PanelApplicationSettings.ValueChanged()
        VB: eDIA.PanelApplicationSettings.ValueChanged()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: ValueChanged
        path: ''
        startLine: 9066
      syntax:
        content:
          CSharp: public void ValueChanged()
          VB: Public Sub ValueChanged
      overload: eDIA.PanelApplicationSettings.ValueChanged*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.PanelConfigSelection
    commentId: T:eDIA.PanelConfigSelection
    language: CSharp
    name:
      CSharp: PanelConfigSelection
      VB: PanelConfigSelection
    nameWithType:
      CSharp: PanelConfigSelection
      VB: PanelConfigSelection
    qualifiedName:
      CSharp: eDIA.PanelConfigSelection
      VB: eDIA.PanelConfigSelection
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: PanelConfigSelection
      path: ''
      startLine: 9130
    summary: GUI element that enables the user to choose from a dropdown of found experiment config files
    example: []
    syntax:
      content:
        CSharp: 'public class PanelConfigSelection : ExperimenterPanel'
        VB: >-
          Public Class PanelConfigSelection

              Inherits ExperimenterPanel
    inheritance:
    - System.Object
    - eDIA.ExperimenterPanel
    inheritedMembers:
    - eDIA.ExperimenterPanel.children
    - eDIA.ExperimenterPanel.Awake
    - eDIA.ExperimenterPanel.ShowPanel
    - eDIA.ExperimenterPanel.HidePanel
    - eDIA.ExperimenterPanel.ApplyTheme
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.PanelConfigSelection.configFilesOptions
      commentId: F:eDIA.PanelConfigSelection.configFilesOptions
      language: CSharp
      name:
        CSharp: configFilesOptions
        VB: configFilesOptions
      nameWithType:
        CSharp: PanelConfigSelection.configFilesOptions
        VB: PanelConfigSelection.configFilesOptions
      qualifiedName:
        CSharp: eDIA.PanelConfigSelection.configFilesOptions
        VB: eDIA.PanelConfigSelection.configFilesOptions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: configFilesOptions
        path: ''
        startLine: 9133
      syntax:
        content:
          CSharp: public TMP_Dropdown configFilesOptions
          VB: Public configFilesOptions As TMP_Dropdown
        return:
          type: Global.TMP_Dropdown
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelConfigSelection.btnSubmit
      commentId: F:eDIA.PanelConfigSelection.btnSubmit
      language: CSharp
      name:
        CSharp: btnSubmit
        VB: btnSubmit
      nameWithType:
        CSharp: PanelConfigSelection.btnSubmit
        VB: PanelConfigSelection.btnSubmit
      qualifiedName:
        CSharp: eDIA.PanelConfigSelection.btnSubmit
        VB: eDIA.PanelConfigSelection.btnSubmit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: btnSubmit
        path: ''
        startLine: 9134
      syntax:
        content:
          CSharp: public Button btnSubmit
          VB: Public btnSubmit As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelConfigSelection.infoTextField
      commentId: F:eDIA.PanelConfigSelection.infoTextField
      language: CSharp
      name:
        CSharp: infoTextField
        VB: infoTextField
      nameWithType:
        CSharp: PanelConfigSelection.infoTextField
        VB: PanelConfigSelection.infoTextField
      qualifiedName:
        CSharp: eDIA.PanelConfigSelection.infoTextField
        VB: eDIA.PanelConfigSelection.infoTextField
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: infoTextField
        path: ''
        startLine: 9135
      syntax:
        content:
          CSharp: public TextMeshProUGUI infoTextField
          VB: Public infoTextField As TextMeshProUGUI
        return:
          type: Global.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelConfigSelection.UpdateParticipantConfigList
      commentId: M:eDIA.PanelConfigSelection.UpdateParticipantConfigList
      language: CSharp
      name:
        CSharp: UpdateParticipantConfigList()
        VB: UpdateParticipantConfigList()
      nameWithType:
        CSharp: PanelConfigSelection.UpdateParticipantConfigList()
        VB: PanelConfigSelection.UpdateParticipantConfigList()
      qualifiedName:
        CSharp: eDIA.PanelConfigSelection.UpdateParticipantConfigList()
        VB: eDIA.PanelConfigSelection.UpdateParticipantConfigList()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: UpdateParticipantConfigList
        path: ''
        startLine: 9160
      summary: Update the participants list of selected task.
      example: []
      syntax:
        content:
          CSharp: public void UpdateParticipantConfigList()
          VB: Public Sub UpdateParticipantConfigList
      overload: eDIA.PanelConfigSelection.UpdateParticipantConfigList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelConfigSelection.BtnSubmitPressed
      commentId: M:eDIA.PanelConfigSelection.BtnSubmitPressed
      language: CSharp
      name:
        CSharp: BtnSubmitPressed()
        VB: BtnSubmitPressed()
      nameWithType:
        CSharp: PanelConfigSelection.BtnSubmitPressed()
        VB: PanelConfigSelection.BtnSubmitPressed()
      qualifiedName:
        CSharp: eDIA.PanelConfigSelection.BtnSubmitPressed()
        VB: eDIA.PanelConfigSelection.BtnSubmitPressed()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: BtnSubmitPressed
        path: ''
        startLine: 9197
      syntax:
        content:
          CSharp: public void BtnSubmitPressed()
          VB: Public Sub BtnSubmitPressed
      overload: eDIA.PanelConfigSelection.BtnSubmitPressed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.PanelExperimentControl
    commentId: T:eDIA.PanelExperimentControl
    language: CSharp
    name:
      CSharp: PanelExperimentControl
      VB: PanelExperimentControl
    nameWithType:
      CSharp: PanelExperimentControl
      VB: PanelExperimentControl
    qualifiedName:
      CSharp: eDIA.PanelExperimentControl
      VB: eDIA.PanelExperimentControl
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: PanelExperimentControl
      path: ''
      startLine: 9218
    syntax:
      content:
        CSharp: 'public class PanelExperimentControl : ExperimenterPanel'
        VB: >-
          Public Class PanelExperimentControl

              Inherits ExperimenterPanel
    inheritance:
    - System.Object
    - eDIA.ExperimenterPanel
    inheritedMembers:
    - eDIA.ExperimenterPanel.children
    - eDIA.ExperimenterPanel.ShowPanel
    - eDIA.ExperimenterPanel.HidePanel
    - eDIA.ExperimenterPanel.ApplyTheme
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.PanelExperimentControl.btnExperiment
      commentId: F:eDIA.PanelExperimentControl.btnExperiment
      language: CSharp
      name:
        CSharp: btnExperiment
        VB: btnExperiment
      nameWithType:
        CSharp: PanelExperimentControl.btnExperiment
        VB: PanelExperimentControl.btnExperiment
      qualifiedName:
        CSharp: eDIA.PanelExperimentControl.btnExperiment
        VB: eDIA.PanelExperimentControl.btnExperiment
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: btnExperiment
        path: ''
        startLine: 9222
      syntax:
        content:
          CSharp: public Button btnExperiment
          VB: Public btnExperiment As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelExperimentControl.btnPauseExperiment
      commentId: F:eDIA.PanelExperimentControl.btnPauseExperiment
      language: CSharp
      name:
        CSharp: btnPauseExperiment
        VB: btnPauseExperiment
      nameWithType:
        CSharp: PanelExperimentControl.btnPauseExperiment
        VB: PanelExperimentControl.btnPauseExperiment
      qualifiedName:
        CSharp: eDIA.PanelExperimentControl.btnPauseExperiment
        VB: eDIA.PanelExperimentControl.btnPauseExperiment
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: btnPauseExperiment
        path: ''
        startLine: 9223
      syntax:
        content:
          CSharp: public Button btnPauseExperiment
          VB: Public btnPauseExperiment As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelExperimentControl.btnProceedExperiment
      commentId: F:eDIA.PanelExperimentControl.btnProceedExperiment
      language: CSharp
      name:
        CSharp: btnProceedExperiment
        VB: btnProceedExperiment
      nameWithType:
        CSharp: PanelExperimentControl.btnProceedExperiment
        VB: PanelExperimentControl.btnProceedExperiment
      qualifiedName:
        CSharp: eDIA.PanelExperimentControl.btnProceedExperiment
        VB: eDIA.PanelExperimentControl.btnProceedExperiment
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: btnProceedExperiment
        path: ''
        startLine: 9224
      syntax:
        content:
          CSharp: public Button btnProceedExperiment
          VB: Public btnProceedExperiment As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelExperimentControl.panelIdle
      commentId: F:eDIA.PanelExperimentControl.panelIdle
      language: CSharp
      name:
        CSharp: panelIdle
        VB: panelIdle
      nameWithType:
        CSharp: PanelExperimentControl.panelIdle
        VB: PanelExperimentControl.panelIdle
      qualifiedName:
        CSharp: eDIA.PanelExperimentControl.panelIdle
        VB: eDIA.PanelExperimentControl.panelIdle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: panelIdle
        path: ''
        startLine: 9227
      syntax:
        content:
          CSharp: public GameObject panelIdle
          VB: Public panelIdle As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelExperimentControl.panelRunning
      commentId: F:eDIA.PanelExperimentControl.panelRunning
      language: CSharp
      name:
        CSharp: panelRunning
        VB: panelRunning
      nameWithType:
        CSharp: PanelExperimentControl.panelRunning
        VB: PanelExperimentControl.panelRunning
      qualifiedName:
        CSharp: eDIA.PanelExperimentControl.panelRunning
        VB: eDIA.PanelExperimentControl.panelRunning
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: panelRunning
        path: ''
        startLine: 9228
      syntax:
        content:
          CSharp: public GameObject panelRunning
          VB: Public panelRunning As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelExperimentControl.panelStatus
      commentId: F:eDIA.PanelExperimentControl.panelStatus
      language: CSharp
      name:
        CSharp: panelStatus
        VB: panelStatus
      nameWithType:
        CSharp: PanelExperimentControl.panelStatus
        VB: PanelExperimentControl.panelStatus
      qualifiedName:
        CSharp: eDIA.PanelExperimentControl.panelStatus
        VB: eDIA.PanelExperimentControl.panelStatus
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: panelStatus
        path: ''
        startLine: 9229
      syntax:
        content:
          CSharp: public GameObject panelStatus
          VB: Public panelStatus As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelExperimentControl.panelInfo
      commentId: F:eDIA.PanelExperimentControl.panelInfo
      language: CSharp
      name:
        CSharp: panelInfo
        VB: panelInfo
      nameWithType:
        CSharp: PanelExperimentControl.panelInfo
        VB: PanelExperimentControl.panelInfo
      qualifiedName:
        CSharp: eDIA.PanelExperimentControl.panelInfo
        VB: eDIA.PanelExperimentControl.panelInfo
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: panelInfo
        path: ''
        startLine: 9230
      syntax:
        content:
          CSharp: public GameObject panelInfo
          VB: Public panelInfo As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelExperimentControl.stepSlider
      commentId: F:eDIA.PanelExperimentControl.stepSlider
      language: CSharp
      name:
        CSharp: stepSlider
        VB: stepSlider
      nameWithType:
        CSharp: PanelExperimentControl.stepSlider
        VB: PanelExperimentControl.stepSlider
      qualifiedName:
        CSharp: eDIA.PanelExperimentControl.stepSlider
        VB: eDIA.PanelExperimentControl.stepSlider
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: stepSlider
        path: ''
        startLine: 9233
      syntax:
        content:
          CSharp: public SliderExperimenterStatus stepSlider
          VB: Public stepSlider As SliderExperimenterStatus
        return:
          type: Global.SliderExperimenterStatus
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelExperimentControl.trialSlider
      commentId: F:eDIA.PanelExperimentControl.trialSlider
      language: CSharp
      name:
        CSharp: trialSlider
        VB: trialSlider
      nameWithType:
        CSharp: PanelExperimentControl.trialSlider
        VB: PanelExperimentControl.trialSlider
      qualifiedName:
        CSharp: eDIA.PanelExperimentControl.trialSlider
        VB: eDIA.PanelExperimentControl.trialSlider
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: trialSlider
        path: ''
        startLine: 9234
      syntax:
        content:
          CSharp: public SliderExperimenterStatus trialSlider
          VB: Public trialSlider As SliderExperimenterStatus
        return:
          type: Global.SliderExperimenterStatus
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelExperimentControl.blockSlider
      commentId: F:eDIA.PanelExperimentControl.blockSlider
      language: CSharp
      name:
        CSharp: blockSlider
        VB: blockSlider
      nameWithType:
        CSharp: PanelExperimentControl.blockSlider
        VB: PanelExperimentControl.blockSlider
      qualifiedName:
        CSharp: eDIA.PanelExperimentControl.blockSlider
        VB: eDIA.PanelExperimentControl.blockSlider
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: blockSlider
        path: ''
        startLine: 9235
      syntax:
        content:
          CSharp: public SliderExperimenterStatus blockSlider
          VB: Public blockSlider As SliderExperimenterStatus
        return:
          type: Global.SliderExperimenterStatus
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelExperimentControl.timerSlider
      commentId: F:eDIA.PanelExperimentControl.timerSlider
      language: CSharp
      name:
        CSharp: timerSlider
        VB: timerSlider
      nameWithType:
        CSharp: PanelExperimentControl.timerSlider
        VB: PanelExperimentControl.timerSlider
      qualifiedName:
        CSharp: eDIA.PanelExperimentControl.timerSlider
        VB: eDIA.PanelExperimentControl.timerSlider
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: timerSlider
        path: ''
        startLine: 9236
      syntax:
        content:
          CSharp: public SliderExperimenterStatus timerSlider
          VB: Public timerSlider As SliderExperimenterStatus
        return:
          type: Global.SliderExperimenterStatus
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelExperimentControl.experimentNameField
      commentId: F:eDIA.PanelExperimentControl.experimentNameField
      language: CSharp
      name:
        CSharp: experimentNameField
        VB: experimentNameField
      nameWithType:
        CSharp: PanelExperimentControl.experimentNameField
        VB: PanelExperimentControl.experimentNameField
      qualifiedName:
        CSharp: eDIA.PanelExperimentControl.experimentNameField
        VB: eDIA.PanelExperimentControl.experimentNameField
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: experimentNameField
        path: ''
        startLine: 9239
      syntax:
        content:
          CSharp: public TextMeshProUGUI experimentNameField
          VB: Public experimentNameField As TextMeshProUGUI
        return:
          type: Global.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelExperimentControl.experimenterField
      commentId: F:eDIA.PanelExperimentControl.experimenterField
      language: CSharp
      name:
        CSharp: experimenterField
        VB: experimenterField
      nameWithType:
        CSharp: PanelExperimentControl.experimenterField
        VB: PanelExperimentControl.experimenterField
      qualifiedName:
        CSharp: eDIA.PanelExperimentControl.experimenterField
        VB: eDIA.PanelExperimentControl.experimenterField
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: experimenterField
        path: ''
        startLine: 9240
      syntax:
        content:
          CSharp: public TextMeshProUGUI experimenterField
          VB: Public experimenterField As TextMeshProUGUI
        return:
          type: Global.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelExperimentControl.participantIDField
      commentId: F:eDIA.PanelExperimentControl.participantIDField
      language: CSharp
      name:
        CSharp: participantIDField
        VB: participantIDField
      nameWithType:
        CSharp: PanelExperimentControl.participantIDField
        VB: PanelExperimentControl.participantIDField
      qualifiedName:
        CSharp: eDIA.PanelExperimentControl.participantIDField
        VB: eDIA.PanelExperimentControl.participantIDField
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: participantIDField
        path: ''
        startLine: 9241
      syntax:
        content:
          CSharp: public TextMeshProUGUI participantIDField
          VB: Public participantIDField As TextMeshProUGUI
        return:
          type: Global.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelExperimentControl.sessionNumberField
      commentId: F:eDIA.PanelExperimentControl.sessionNumberField
      language: CSharp
      name:
        CSharp: sessionNumberField
        VB: sessionNumberField
      nameWithType:
        CSharp: PanelExperimentControl.sessionNumberField
        VB: PanelExperimentControl.sessionNumberField
      qualifiedName:
        CSharp: eDIA.PanelExperimentControl.sessionNumberField
        VB: eDIA.PanelExperimentControl.sessionNumberField
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: sessionNumberField
        path: ''
        startLine: 9242
      syntax:
        content:
          CSharp: public TextMeshProUGUI sessionNumberField
          VB: Public sessionNumberField As TextMeshProUGUI
        return:
          type: Global.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelExperimentControl.Awake
      commentId: M:eDIA.PanelExperimentControl.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: PanelExperimentControl.Awake()
        VB: PanelExperimentControl.Awake()
      qualifiedName:
        CSharp: eDIA.PanelExperimentControl.Awake()
        VB: eDIA.PanelExperimentControl.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: Awake
        path: ''
        startLine: 9244
      syntax:
        content:
          CSharp: public override void Awake()
          VB: Public Overrides Sub Awake
      overload: eDIA.PanelExperimentControl.Awake*
      overridden: eDIA.ExperimenterPanel.Awake
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: eDIA.PanelHeader
    commentId: T:eDIA.PanelHeader
    language: CSharp
    name:
      CSharp: PanelHeader
      VB: PanelHeader
    nameWithType:
      CSharp: PanelHeader
      VB: PanelHeader
    qualifiedName:
      CSharp: eDIA.PanelHeader
      VB: eDIA.PanelHeader
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: PanelHeader
      path: ''
      startLine: 9435
    syntax:
      content:
        CSharp: 'public class PanelHeader : MonoBehaviour'
        VB: >-
          Public Class PanelHeader

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.PanelHeader.logo
      commentId: F:eDIA.PanelHeader.logo
      language: CSharp
      name:
        CSharp: logo
        VB: logo
      nameWithType:
        CSharp: PanelHeader.logo
        VB: PanelHeader.logo
      qualifiedName:
        CSharp: eDIA.PanelHeader.logo
        VB: eDIA.PanelHeader.logo
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: logo
        path: ''
        startLine: 9437
      syntax:
        content:
          CSharp: public Image logo
          VB: Public logo As Image
        return:
          type: Global.Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelHeader.titleField
      commentId: F:eDIA.PanelHeader.titleField
      language: CSharp
      name:
        CSharp: titleField
        VB: titleField
      nameWithType:
        CSharp: PanelHeader.titleField
        VB: PanelHeader.titleField
      qualifiedName:
        CSharp: eDIA.PanelHeader.titleField
        VB: eDIA.PanelHeader.titleField
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: titleField
        path: ''
        startLine: 9438
      syntax:
        content:
          CSharp: public TextMeshProUGUI titleField
          VB: Public titleField As TextMeshProUGUI
        return:
          type: Global.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelHeader.LogoClicked
      commentId: M:eDIA.PanelHeader.LogoClicked
      language: CSharp
      name:
        CSharp: LogoClicked()
        VB: LogoClicked()
      nameWithType:
        CSharp: PanelHeader.LogoClicked()
        VB: PanelHeader.LogoClicked()
      qualifiedName:
        CSharp: eDIA.PanelHeader.LogoClicked()
        VB: eDIA.PanelHeader.LogoClicked()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: LogoClicked
        path: ''
        startLine: 9449
      syntax:
        content:
          CSharp: public void LogoClicked()
          VB: Public Sub LogoClicked
      overload: eDIA.PanelHeader.LogoClicked*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.PanelLayoutManager
    commentId: T:eDIA.PanelLayoutManager
    language: CSharp
    name:
      CSharp: PanelLayoutManager
      VB: PanelLayoutManager
    nameWithType:
      CSharp: PanelLayoutManager
      VB: PanelLayoutManager
    qualifiedName:
      CSharp: eDIA.PanelLayoutManager
      VB: eDIA.PanelLayoutManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: PanelLayoutManager
      path: ''
      startLine: 9476
    syntax:
      content:
        CSharp: 'public class PanelLayoutManager : MonoBehaviour'
        VB: >-
          Public Class PanelLayoutManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.PanelLayoutManager.currentPanelOrder
      commentId: F:eDIA.PanelLayoutManager.currentPanelOrder
      language: CSharp
      name:
        CSharp: currentPanelOrder
        VB: currentPanelOrder
      nameWithType:
        CSharp: PanelLayoutManager.currentPanelOrder
        VB: PanelLayoutManager.currentPanelOrder
      qualifiedName:
        CSharp: eDIA.PanelLayoutManager.currentPanelOrder
        VB: eDIA.PanelLayoutManager.currentPanelOrder
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: currentPanelOrder
        path: ''
        startLine: 9478
      syntax:
        content:
          CSharp: public List<Transform> currentPanelOrder
          VB: Public currentPanelOrder As List(Of Transform)
        return:
          type: System.Collections.Generic.List{Transform}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelLayoutManager.nonActivePanelHolder
      commentId: F:eDIA.PanelLayoutManager.nonActivePanelHolder
      language: CSharp
      name:
        CSharp: nonActivePanelHolder
        VB: nonActivePanelHolder
      nameWithType:
        CSharp: PanelLayoutManager.nonActivePanelHolder
        VB: PanelLayoutManager.nonActivePanelHolder
      qualifiedName:
        CSharp: eDIA.PanelLayoutManager.nonActivePanelHolder
        VB: eDIA.PanelLayoutManager.nonActivePanelHolder
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: nonActivePanelHolder
        path: ''
        startLine: 9479
      syntax:
        content:
          CSharp: public Transform nonActivePanelHolder
          VB: Public nonActivePanelHolder As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelLayoutManager.UpdatePanelOrder
      commentId: M:eDIA.PanelLayoutManager.UpdatePanelOrder
      language: CSharp
      name:
        CSharp: UpdatePanelOrder()
        VB: UpdatePanelOrder()
      nameWithType:
        CSharp: PanelLayoutManager.UpdatePanelOrder()
        VB: PanelLayoutManager.UpdatePanelOrder()
      qualifiedName:
        CSharp: eDIA.PanelLayoutManager.UpdatePanelOrder()
        VB: eDIA.PanelLayoutManager.UpdatePanelOrder()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: UpdatePanelOrder
        path: ''
        startLine: 9487
      syntax:
        content:
          CSharp: public void UpdatePanelOrder()
          VB: Public Sub UpdatePanelOrder
      overload: eDIA.PanelLayoutManager.UpdatePanelOrder*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.PanelMessageBox
    commentId: T:eDIA.PanelMessageBox
    language: CSharp
    name:
      CSharp: PanelMessageBox
      VB: PanelMessageBox
    nameWithType:
      CSharp: PanelMessageBox
      VB: PanelMessageBox
    qualifiedName:
      CSharp: eDIA.PanelMessageBox
      VB: eDIA.PanelMessageBox
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: PanelMessageBox
      path: ''
      startLine: 9507
    syntax:
      content:
        CSharp: 'public class PanelMessageBox : ExperimenterPanel'
        VB: >-
          Public Class PanelMessageBox

              Inherits ExperimenterPanel
    inheritance:
    - System.Object
    - eDIA.ExperimenterPanel
    inheritedMembers:
    - eDIA.ExperimenterPanel.children
    - eDIA.ExperimenterPanel.ShowPanel
    - eDIA.ExperimenterPanel.HidePanel
    - eDIA.ExperimenterPanel.ApplyTheme
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.PanelMessageBox.messageField
      commentId: F:eDIA.PanelMessageBox.messageField
      language: CSharp
      name:
        CSharp: messageField
        VB: messageField
      nameWithType:
        CSharp: PanelMessageBox.messageField
        VB: PanelMessageBox.messageField
      qualifiedName:
        CSharp: eDIA.PanelMessageBox.messageField
        VB: eDIA.PanelMessageBox.messageField
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: messageField
        path: ''
        startLine: 9510
      syntax:
        content:
          CSharp: public TextMeshProUGUI messageField
          VB: Public messageField As TextMeshProUGUI
        return:
          type: Global.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelMessageBox.panelButton
      commentId: F:eDIA.PanelMessageBox.panelButton
      language: CSharp
      name:
        CSharp: panelButton
        VB: panelButton
      nameWithType:
        CSharp: PanelMessageBox.panelButton
        VB: PanelMessageBox.panelButton
      qualifiedName:
        CSharp: eDIA.PanelMessageBox.panelButton
        VB: eDIA.PanelMessageBox.panelButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: panelButton
        path: ''
        startLine: 9511
      syntax:
        content:
          CSharp: public Button panelButton
          VB: Public panelButton As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelMessageBox.autoHideTimer
      commentId: F:eDIA.PanelMessageBox.autoHideTimer
      language: CSharp
      name:
        CSharp: autoHideTimer
        VB: autoHideTimer
      nameWithType:
        CSharp: PanelMessageBox.autoHideTimer
        VB: PanelMessageBox.autoHideTimer
      qualifiedName:
        CSharp: eDIA.PanelMessageBox.autoHideTimer
        VB: eDIA.PanelMessageBox.autoHideTimer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: autoHideTimer
        path: ''
        startLine: 9514
      syntax:
        content:
          CSharp: public float autoHideTimer
          VB: Public autoHideTimer As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.PanelMessageBox.Awake
      commentId: M:eDIA.PanelMessageBox.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: PanelMessageBox.Awake()
        VB: PanelMessageBox.Awake()
      qualifiedName:
        CSharp: eDIA.PanelMessageBox.Awake()
        VB: eDIA.PanelMessageBox.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: Awake
        path: ''
        startLine: 9516
      syntax:
        content:
          CSharp: public override void Awake()
          VB: Public Overrides Sub Awake
      overload: eDIA.PanelMessageBox.Awake*
      overridden: eDIA.ExperimenterPanel.Awake
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: eDIA.PanelTaskControl
    commentId: T:eDIA.PanelTaskControl
    language: CSharp
    name:
      CSharp: PanelTaskControl
      VB: PanelTaskControl
    nameWithType:
      CSharp: PanelTaskControl
      VB: PanelTaskControl
    qualifiedName:
      CSharp: eDIA.PanelTaskControl
      VB: eDIA.PanelTaskControl
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: PanelTaskControl
      path: ''
      startLine: 9573
    syntax:
      content:
        CSharp: 'public class PanelTaskControl : ExperimenterPanel'
        VB: >-
          Public Class PanelTaskControl

              Inherits ExperimenterPanel
    inheritance:
    - System.Object
    - eDIA.ExperimenterPanel
    inheritedMembers:
    - eDIA.ExperimenterPanel.children
    - eDIA.ExperimenterPanel.Awake
    - eDIA.ExperimenterPanel.ShowPanel
    - eDIA.ExperimenterPanel.HidePanel
    - eDIA.ExperimenterPanel.ApplyTheme
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: eDIA.Tooltip
    commentId: T:eDIA.Tooltip
    language: CSharp
    name:
      CSharp: Tooltip
      VB: Tooltip
    nameWithType:
      CSharp: Tooltip
      VB: Tooltip
    qualifiedName:
      CSharp: eDIA.Tooltip
      VB: eDIA.Tooltip
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: Tooltip
      path: ''
      startLine: 9665
    summary: Enables a tooltip on the component this is on.
    example: []
    syntax:
      content:
        CSharp: 'public class Tooltip : MonoBehaviour, IPointerEnterHandler, IPointerExitHandler, IPointerClickHandler'
        VB: >-
          Public Class Tooltip

              Inherits MonoBehaviour

              Implements IPointerEnterHandler, IPointerExitHandler, IPointerClickHandler
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.Tooltip.message
      commentId: F:eDIA.Tooltip.message
      language: CSharp
      name:
        CSharp: message
        VB: message
      nameWithType:
        CSharp: Tooltip.message
        VB: Tooltip.message
      qualifiedName:
        CSharp: eDIA.Tooltip.message
        VB: eDIA.Tooltip.message
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: message
        path: ''
        startLine: 9667
      syntax:
        content:
          CSharp: public string message
          VB: Public message As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.Tooltip.OnPointerEnter(PointerEventData)
      commentId: M:eDIA.Tooltip.OnPointerEnter(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerEnter(PointerEventData)
        VB: OnPointerEnter(PointerEventData)
      nameWithType:
        CSharp: Tooltip.OnPointerEnter(PointerEventData)
        VB: Tooltip.OnPointerEnter(PointerEventData)
      qualifiedName:
        CSharp: eDIA.Tooltip.OnPointerEnter(PointerEventData)
        VB: eDIA.Tooltip.OnPointerEnter(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: OnPointerEnter
        path: ''
        startLine: 9672
      syntax:
        content:
          CSharp: public void OnPointerEnter(PointerEventData eventData)
          VB: Public Sub OnPointerEnter(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: eDIA.Tooltip.OnPointerEnter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.Tooltip.OnPointerClick(PointerEventData)
      commentId: M:eDIA.Tooltip.OnPointerClick(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerClick(PointerEventData)
        VB: OnPointerClick(PointerEventData)
      nameWithType:
        CSharp: Tooltip.OnPointerClick(PointerEventData)
        VB: Tooltip.OnPointerClick(PointerEventData)
      qualifiedName:
        CSharp: eDIA.Tooltip.OnPointerClick(PointerEventData)
        VB: eDIA.Tooltip.OnPointerClick(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: OnPointerClick
        path: ''
        startLine: 9677
      syntax:
        content:
          CSharp: public void OnPointerClick(PointerEventData eventData)
          VB: Public Sub OnPointerClick(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: eDIA.Tooltip.OnPointerClick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.Tooltip.OnPointerExit(PointerEventData)
      commentId: M:eDIA.Tooltip.OnPointerExit(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerExit(PointerEventData)
        VB: OnPointerExit(PointerEventData)
      nameWithType:
        CSharp: Tooltip.OnPointerExit(PointerEventData)
        VB: Tooltip.OnPointerExit(PointerEventData)
      qualifiedName:
        CSharp: eDIA.Tooltip.OnPointerExit(PointerEventData)
        VB: eDIA.Tooltip.OnPointerExit(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: OnPointerExit
        path: ''
        startLine: 9683
      syntax:
        content:
          CSharp: public void OnPointerExit(PointerEventData eventData)
          VB: Public Sub OnPointerExit(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: eDIA.Tooltip.OnPointerExit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.TooltipManager
    commentId: T:eDIA.TooltipManager
    language: CSharp
    name:
      CSharp: TooltipManager
      VB: TooltipManager
    nameWithType:
      CSharp: TooltipManager
      VB: TooltipManager
    qualifiedName:
      CSharp: eDIA.TooltipManager
      VB: eDIA.TooltipManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: TooltipManager
      path: ''
      startLine: 9714
    syntax:
      content:
        CSharp: 'public class TooltipManager : MonoBehaviour'
        VB: >-
          Public Class TooltipManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.TooltipManager.textField
      commentId: F:eDIA.TooltipManager.textField
      language: CSharp
      name:
        CSharp: textField
        VB: textField
      nameWithType:
        CSharp: TooltipManager.textField
        VB: TooltipManager.textField
      qualifiedName:
        CSharp: eDIA.TooltipManager.textField
        VB: eDIA.TooltipManager.textField
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: textField
        path: ''
        startLine: 9716
      syntax:
        content:
          CSharp: public TextMeshProUGUI textField
          VB: Public textField As TextMeshProUGUI
        return:
          type: Global.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.TooltipManager.OnEvShowTooltip(eDIA.eParam)
      commentId: M:eDIA.TooltipManager.OnEvShowTooltip(eDIA.eParam)
      language: CSharp
      name:
        CSharp: OnEvShowTooltip(eParam)
        VB: OnEvShowTooltip(eParam)
      nameWithType:
        CSharp: TooltipManager.OnEvShowTooltip(eParam)
        VB: TooltipManager.OnEvShowTooltip(eParam)
      qualifiedName:
        CSharp: eDIA.TooltipManager.OnEvShowTooltip(eDIA.eParam)
        VB: eDIA.TooltipManager.OnEvShowTooltip(eDIA.eParam)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: OnEvShowTooltip
        path: ''
        startLine: 9740
      syntax:
        content:
          CSharp: public void OnEvShowTooltip(eParam obj)
          VB: Public Sub OnEvShowTooltip(obj As eParam)
        parameters:
        - id: obj
          type: eDIA.eParam
      overload: eDIA.TooltipManager.OnEvShowTooltip*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.TooltipManager.OnEvHideTooltip(eDIA.eParam)
      commentId: M:eDIA.TooltipManager.OnEvHideTooltip(eDIA.eParam)
      language: CSharp
      name:
        CSharp: OnEvHideTooltip(eParam)
        VB: OnEvHideTooltip(eParam)
      nameWithType:
        CSharp: TooltipManager.OnEvHideTooltip(eParam)
        VB: TooltipManager.OnEvHideTooltip(eParam)
      qualifiedName:
        CSharp: eDIA.TooltipManager.OnEvHideTooltip(eDIA.eParam)
        VB: eDIA.TooltipManager.OnEvHideTooltip(eDIA.eParam)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: OnEvHideTooltip
        path: ''
        startLine: 9750
      syntax:
        content:
          CSharp: public void OnEvHideTooltip(eParam obj)
          VB: Public Sub OnEvHideTooltip(obj As eParam)
        parameters:
        - id: obj
          type: eDIA.eParam
      overload: eDIA.TooltipManager.OnEvHideTooltip*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.InputRemapper
    commentId: T:eDIA.InputRemapper
    language: CSharp
    name:
      CSharp: InputRemapper
      VB: InputRemapper
    nameWithType:
      CSharp: InputRemapper
      VB: InputRemapper
    qualifiedName:
      CSharp: eDIA.InputRemapper
      VB: eDIA.InputRemapper
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA
    source:
      id: InputRemapper
      path: ''
      startLine: 23219
    syntax:
      content:
        CSharp: 'public class InputRemapper : MonoBehaviour'
        VB: >-
          Public Class InputRemapper

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.InputRemapper.SetActionMapName(System.String)
      commentId: M:eDIA.InputRemapper.SetActionMapName(System.String)
      language: CSharp
      name:
        CSharp: SetActionMapName(String)
        VB: SetActionMapName(String)
      nameWithType:
        CSharp: InputRemapper.SetActionMapName(String)
        VB: InputRemapper.SetActionMapName(String)
      qualifiedName:
        CSharp: eDIA.InputRemapper.SetActionMapName(System.String)
        VB: eDIA.InputRemapper.SetActionMapName(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: SetActionMapName
        path: ''
        startLine: 23284
      syntax:
        content:
          CSharp: public void SetActionMapName(string mapName)
          VB: Public Sub SetActionMapName(mapName As String)
        parameters:
        - id: mapName
          type: System.String
      overload: eDIA.InputRemapper.SetActionMapName*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.InputRemapper.menuPerformed(InputAction.CallbackContext)
      commentId: M:eDIA.InputRemapper.menuPerformed(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: menuPerformed(InputAction.CallbackContext)
        VB: menuPerformed(InputAction.CallbackContext)
      nameWithType:
        CSharp: InputRemapper.menuPerformed(InputAction.CallbackContext)
        VB: InputRemapper.menuPerformed(InputAction.CallbackContext)
      qualifiedName:
        CSharp: eDIA.InputRemapper.menuPerformed(InputAction.CallbackContext)
        VB: eDIA.InputRemapper.menuPerformed(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: menuPerformed
        path: ''
        startLine: 23291
      syntax:
        content:
          CSharp: public void menuPerformed(InputAction.CallbackContext context)
          VB: Public Sub menuPerformed(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: eDIA.InputRemapper.menuPerformed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.InputRemapper.proceedPerformed(InputAction.CallbackContext)
      commentId: M:eDIA.InputRemapper.proceedPerformed(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: proceedPerformed(InputAction.CallbackContext)
        VB: proceedPerformed(InputAction.CallbackContext)
      nameWithType:
        CSharp: InputRemapper.proceedPerformed(InputAction.CallbackContext)
        VB: InputRemapper.proceedPerformed(InputAction.CallbackContext)
      qualifiedName:
        CSharp: eDIA.InputRemapper.proceedPerformed(InputAction.CallbackContext)
        VB: eDIA.InputRemapper.proceedPerformed(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: proceedPerformed
        path: ''
        startLine: 23295
      syntax:
        content:
          CSharp: public void proceedPerformed(InputAction.CallbackContext context)
          VB: Public Sub proceedPerformed(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: eDIA.InputRemapper.proceedPerformed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.InputRemapper.actionStartExperimentPerformed(InputAction.CallbackContext)
      commentId: M:eDIA.InputRemapper.actionStartExperimentPerformed(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: actionStartExperimentPerformed(InputAction.CallbackContext)
        VB: actionStartExperimentPerformed(InputAction.CallbackContext)
      nameWithType:
        CSharp: InputRemapper.actionStartExperimentPerformed(InputAction.CallbackContext)
        VB: InputRemapper.actionStartExperimentPerformed(InputAction.CallbackContext)
      qualifiedName:
        CSharp: eDIA.InputRemapper.actionStartExperimentPerformed(InputAction.CallbackContext)
        VB: eDIA.InputRemapper.actionStartExperimentPerformed(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: actionStartExperimentPerformed
        path: ''
        startLine: 23299
      syntax:
        content:
          CSharp: public void actionStartExperimentPerformed(InputAction.CallbackContext context)
          VB: Public Sub actionStartExperimentPerformed(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: eDIA.InputRemapper.actionStartExperimentPerformed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.InputRemapper.actionPauseExperimentPerformed(InputAction.CallbackContext)
      commentId: M:eDIA.InputRemapper.actionPauseExperimentPerformed(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: actionPauseExperimentPerformed(InputAction.CallbackContext)
        VB: actionPauseExperimentPerformed(InputAction.CallbackContext)
      nameWithType:
        CSharp: InputRemapper.actionPauseExperimentPerformed(InputAction.CallbackContext)
        VB: InputRemapper.actionPauseExperimentPerformed(InputAction.CallbackContext)
      qualifiedName:
        CSharp: eDIA.InputRemapper.actionPauseExperimentPerformed(InputAction.CallbackContext)
        VB: eDIA.InputRemapper.actionPauseExperimentPerformed(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA
      source:
        id: actionPauseExperimentPerformed
        path: ''
        startLine: 23303
      syntax:
        content:
          CSharp: public void actionPauseExperimentPerformed(InputAction.CallbackContext context)
          VB: Public Sub actionPauseExperimentPerformed(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: eDIA.InputRemapper.actionPauseExperimentPerformed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: eDIA.EditorUtils
  commentId: N:eDIA.EditorUtils
  language: CSharp
  name:
    CSharp: eDIA.EditorUtils
    VB: eDIA.EditorUtils
  nameWithType:
    CSharp: eDIA.EditorUtils
    VB: eDIA.EditorUtils
  qualifiedName:
    CSharp: eDIA.EditorUtils
    VB: eDIA.EditorUtils
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: eDIA.EditorUtils.eDIAcontrolPanel
    commentId: T:eDIA.EditorUtils.eDIAcontrolPanel
    language: CSharp
    name:
      CSharp: eDIAcontrolPanel
      VB: eDIAcontrolPanel
    nameWithType:
      CSharp: eDIAcontrolPanel
      VB: eDIAcontrolPanel
    qualifiedName:
      CSharp: eDIA.EditorUtils.eDIAcontrolPanel
      VB: eDIA.EditorUtils.eDIAcontrolPanel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA.EditorUtils
    source:
      id: eDIAcontrolPanel
      path: ''
      startLine: 350
    syntax:
      content:
        CSharp: 'public class eDIAcontrolPanel : EditorWindow'
        VB: >-
          Public Class eDIAcontrolPanel

              Inherits EditorWindow
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.EditorUtils.eDIAcontrolPanel.eDIAIcon
      commentId: F:eDIA.EditorUtils.eDIAcontrolPanel.eDIAIcon
      language: CSharp
      name:
        CSharp: eDIAIcon
        VB: eDIAIcon
      nameWithType:
        CSharp: eDIAcontrolPanel.eDIAIcon
        VB: eDIAcontrolPanel.eDIAIcon
      qualifiedName:
        CSharp: eDIA.EditorUtils.eDIAcontrolPanel.eDIAIcon
        VB: eDIA.EditorUtils.eDIAcontrolPanel.eDIAIcon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.EditorUtils
      source:
        id: eDIAIcon
        path: ''
        startLine: 353
      syntax:
        content:
          CSharp: public Texture2D eDIAIcon
          VB: Public eDIAIcon As Texture2D
        return:
          type: Global.Texture2D
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.EditorUtils.eDIAcontrolPanel.forceShow
      commentId: F:eDIA.EditorUtils.eDIAcontrolPanel.forceShow
      language: CSharp
      name:
        CSharp: forceShow
        VB: forceShow
      nameWithType:
        CSharp: eDIAcontrolPanel.forceShow
        VB: eDIAcontrolPanel.forceShow
      qualifiedName:
        CSharp: eDIA.EditorUtils.eDIAcontrolPanel.forceShow
        VB: eDIA.EditorUtils.eDIAcontrolPanel.forceShow
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.EditorUtils
      source:
        id: forceShow
        path: ''
        startLine: 354
      syntax:
        content:
          CSharp: public static bool forceShow
          VB: Public Shared forceShow As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.EditorUtils.eDIAcontrolPanel.OnGUI
      commentId: M:eDIA.EditorUtils.eDIAcontrolPanel.OnGUI
      language: CSharp
      name:
        CSharp: OnGUI()
        VB: OnGUI()
      nameWithType:
        CSharp: eDIAcontrolPanel.OnGUI()
        VB: eDIAcontrolPanel.OnGUI()
      qualifiedName:
        CSharp: eDIA.EditorUtils.eDIAcontrolPanel.OnGUI()
        VB: eDIA.EditorUtils.eDIAcontrolPanel.OnGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA.EditorUtils
      source:
        id: OnGUI
        path: ''
        startLine: 414
      syntax:
        content:
          CSharp: public void OnGUI()
          VB: Public Sub OnGUI
      overload: eDIA.EditorUtils.eDIAcontrolPanel.OnGUI*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.EditorUtils.Layers
    commentId: T:eDIA.EditorUtils.Layers
    language: CSharp
    name:
      CSharp: Layers
      VB: Layers
    nameWithType:
      CSharp: Layers
      VB: Layers
    qualifiedName:
      CSharp: eDIA.EditorUtils.Layers
      VB: eDIA.EditorUtils.Layers
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA.EditorUtils
    source:
      id: Layers
      path: ''
      startLine: 534
    syntax:
      content:
        CSharp: public class Layers
        VB: Public Class Layers
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.EditorUtils.Layers.CreateLayer(System.String)
      commentId: M:eDIA.EditorUtils.Layers.CreateLayer(System.String)
      language: CSharp
      name:
        CSharp: CreateLayer(String)
        VB: CreateLayer(String)
      nameWithType:
        CSharp: Layers.CreateLayer(String)
        VB: Layers.CreateLayer(String)
      qualifiedName:
        CSharp: eDIA.EditorUtils.Layers.CreateLayer(System.String)
        VB: eDIA.EditorUtils.Layers.CreateLayer(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA.EditorUtils
      source:
        id: CreateLayer
        path: ''
        startLine: 544
      summary: "\nAdds the layer.\n"
      example: []
      syntax:
        content:
          CSharp: public static bool CreateLayer(string layerName)
          VB: Public Shared Function CreateLayer(layerName As String) As Boolean
        parameters:
        - id: layerName
          type: System.String
          description: Layer name.
        return:
          type: System.Boolean
          description: <code>true</code>, if layer was added, <code>false</code> otherwise.
      overload: eDIA.EditorUtils.Layers.CreateLayer*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.EditorUtils.Layers.CreateLayer(System.Int32,System.String)
      commentId: M:eDIA.EditorUtils.Layers.CreateLayer(System.Int32,System.String)
      language: CSharp
      name:
        CSharp: CreateLayer(Int32, String)
        VB: CreateLayer(Int32, String)
      nameWithType:
        CSharp: Layers.CreateLayer(Int32, String)
        VB: Layers.CreateLayer(Int32, String)
      qualifiedName:
        CSharp: eDIA.EditorUtils.Layers.CreateLayer(System.Int32, System.String)
        VB: eDIA.EditorUtils.Layers.CreateLayer(System.Int32, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA.EditorUtils
      source:
        id: CreateLayer
        path: ''
        startLine: 577
      summary: "\nAdds the layer.\n"
      example: []
      syntax:
        content:
          CSharp: public static bool CreateLayer(int layerIndex, string layerName)
          VB: Public Shared Function CreateLayer(layerIndex As Integer, layerName As String) As Boolean
        parameters:
        - id: layerIndex
          type: System.Int32
        - id: layerName
          type: System.String
          description: Layer name.
        return:
          type: System.Boolean
          description: <code>true</code>, if layer was added, <code>false</code> otherwise.
      overload: eDIA.EditorUtils.Layers.CreateLayer*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.EditorUtils.Layers.NewLayer(System.String)
      commentId: M:eDIA.EditorUtils.Layers.NewLayer(System.String)
      language: CSharp
      name:
        CSharp: NewLayer(String)
        VB: NewLayer(String)
      nameWithType:
        CSharp: Layers.NewLayer(String)
        VB: Layers.NewLayer(String)
      qualifiedName:
        CSharp: eDIA.EditorUtils.Layers.NewLayer(System.String)
        VB: eDIA.EditorUtils.Layers.NewLayer(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA.EditorUtils
      source:
        id: NewLayer
        path: ''
        startLine: 595
      syntax:
        content:
          CSharp: public static string NewLayer(string name)
          VB: Public Shared Function NewLayer(name As String) As String
        parameters:
        - id: name
          type: System.String
        return:
          type: System.String
      overload: eDIA.EditorUtils.Layers.NewLayer*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.EditorUtils.Layers.RemoveLayer(System.String)
      commentId: M:eDIA.EditorUtils.Layers.RemoveLayer(System.String)
      language: CSharp
      name:
        CSharp: RemoveLayer(String)
        VB: RemoveLayer(String)
      nameWithType:
        CSharp: Layers.RemoveLayer(String)
        VB: Layers.RemoveLayer(String)
      qualifiedName:
        CSharp: eDIA.EditorUtils.Layers.RemoveLayer(System.String)
        VB: eDIA.EditorUtils.Layers.RemoveLayer(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA.EditorUtils
      source:
        id: RemoveLayer
        path: ''
        startLine: 608
      summary: "\nRemoves the layer.\n"
      example: []
      syntax:
        content:
          CSharp: public static bool RemoveLayer(string layerName)
          VB: Public Shared Function RemoveLayer(layerName As String) As Boolean
        parameters:
        - id: layerName
          type: System.String
          description: Layer name.
        return:
          type: System.Boolean
          description: <code>true</code>, if layer was removed, <code>false</code> otherwise.
      overload: eDIA.EditorUtils.Layers.RemoveLayer*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.EditorUtils.Layers.LayerExists(System.String)
      commentId: M:eDIA.EditorUtils.Layers.LayerExists(System.String)
      language: CSharp
      name:
        CSharp: LayerExists(String)
        VB: LayerExists(String)
      nameWithType:
        CSharp: Layers.LayerExists(String)
        VB: Layers.LayerExists(String)
      qualifiedName:
        CSharp: eDIA.EditorUtils.Layers.LayerExists(System.String)
        VB: eDIA.EditorUtils.Layers.LayerExists(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA.EditorUtils
      source:
        id: LayerExists
        path: ''
        startLine: 644
      summary: "\nChecks to see if layer exists by layername.\n"
      example: []
      syntax:
        content:
          CSharp: public static bool LayerExists(string layerName)
          VB: Public Shared Function LayerExists(layerName As String) As Boolean
        parameters:
        - id: layerName
          type: System.String
          description: Layer name.
        return:
          type: System.Boolean
          description: <code>true</code>, if layer exists, <code>false</code> otherwise.
      overload: eDIA.EditorUtils.Layers.LayerExists*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: eDIA.EditorUtils.ReadOnlyAttribute
    commentId: T:eDIA.EditorUtils.ReadOnlyAttribute
    language: CSharp
    name:
      CSharp: ReadOnlyAttribute
      VB: ReadOnlyAttribute
    nameWithType:
      CSharp: ReadOnlyAttribute
      VB: ReadOnlyAttribute
    qualifiedName:
      CSharp: eDIA.EditorUtils.ReadOnlyAttribute
      VB: eDIA.EditorUtils.ReadOnlyAttribute
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA.EditorUtils
    source:
      id: ReadOnlyAttribute
      path: ''
      startLine: 692
    syntax:
      content:
        CSharp: 'public class ReadOnlyAttribute : PropertyAttribute'
        VB: >-
          Public Class ReadOnlyAttribute

              Inherits PropertyAttribute
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: eDIA.EditorUtils.ReadOnlyDrawer
    commentId: T:eDIA.EditorUtils.ReadOnlyDrawer
    language: CSharp
    name:
      CSharp: ReadOnlyDrawer
      VB: ReadOnlyDrawer
    nameWithType:
      CSharp: ReadOnlyDrawer
      VB: ReadOnlyDrawer
    qualifiedName:
      CSharp: eDIA.EditorUtils.ReadOnlyDrawer
      VB: eDIA.EditorUtils.ReadOnlyDrawer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA.EditorUtils
    source:
      id: ReadOnlyDrawer
      path: ''
      startLine: 700
    summary: This class contain custom drawer for ReadOnly attribute.
    example: []
    syntax:
      content:
        CSharp: 'public class ReadOnlyDrawer : PropertyDrawer'
        VB: >-
          Public Class ReadOnlyDrawer

              Inherits PropertyDrawer
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.EditorUtils.ReadOnlyDrawer.OnGUI(Rect,SerializedProperty,GUIContent)
      commentId: M:eDIA.EditorUtils.ReadOnlyDrawer.OnGUI(Rect,SerializedProperty,GUIContent)
      language: CSharp
      name:
        CSharp: OnGUI(Rect, SerializedProperty, GUIContent)
        VB: OnGUI(Rect, SerializedProperty, GUIContent)
      nameWithType:
        CSharp: ReadOnlyDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
        VB: ReadOnlyDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
      qualifiedName:
        CSharp: eDIA.EditorUtils.ReadOnlyDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
        VB: eDIA.EditorUtils.ReadOnlyDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA.EditorUtils
      source:
        id: OnGUI
        path: ''
        startLine: 709
      summary: "\nUnity method for drawing GUI in Editor\n"
      example: []
      syntax:
        content:
          CSharp: public override void OnGUI(Rect position, SerializedProperty property, GUIContent label)
          VB: Public Overrides Sub OnGUI(position As Rect, property As SerializedProperty, label As GUIContent)
        parameters:
        - id: position
          type: Global.Rect
          description: Position.
        - id: property
          type: Global.SerializedProperty
          description: Property.
        - id: label
          type: Global.GUIContent
          description: Label.
      overload: eDIA.EditorUtils.ReadOnlyDrawer.OnGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
- id: eDIA.Events
  commentId: N:eDIA.Events
  language: CSharp
  name:
    CSharp: eDIA.Events
    VB: eDIA.Events
  nameWithType:
    CSharp: eDIA.Events
    VB: eDIA.Events
  qualifiedName:
    CSharp: eDIA.Events
    VB: eDIA.Events
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: eDIA.Events.System
    commentId: T:eDIA.Events.System
    language: CSharp
    name:
      CSharp: System
      VB: System
    nameWithType:
      CSharp: System
      VB: System
    qualifiedName:
      CSharp: eDIA.Events.System
      VB: eDIA.Events.System
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA.Events
    source:
      id: System
      path: ''
      startLine: 5667
    syntax:
      content:
        CSharp: public static class System
        VB: Public Module System
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: eDIA.Events.System.EvCallMainMenu
      commentId: F:eDIA.Events.System.EvCallMainMenu
      language: CSharp
      name:
        CSharp: EvCallMainMenu
        VB: EvCallMainMenu
      nameWithType:
        CSharp: System.EvCallMainMenu
        VB: System.EvCallMainMenu
      qualifiedName:
        CSharp: eDIA.Events.System.EvCallMainMenu
        VB: eDIA.Events.System.EvCallMainMenu
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvCallMainMenu
        path: ''
        startLine: 5670
      summary: Set experiment config. Expects config as JSON string
      example: []
      syntax:
        content:
          CSharp: public static string EvCallMainMenu
          VB: Public Shared EvCallMainMenu As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: eDIA.Events.Core
    commentId: T:eDIA.Events.Core
    language: CSharp
    name:
      CSharp: Core
      VB: Core
    nameWithType:
      CSharp: Core
      VB: Core
    qualifiedName:
      CSharp: eDIA.Events.Core
      VB: eDIA.Events.Core
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA.Events
    source:
      id: Core
      path: ''
      startLine: 5678
    summary: Overview of all events in the system. Easier to reference and no typo mistakes by using them.
    example: []
    syntax:
      content:
        CSharp: public static class Core
        VB: Public Module Core
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: eDIA.Events.Core.EvSetExperimentConfig
      commentId: F:eDIA.Events.Core.EvSetExperimentConfig
      language: CSharp
      name:
        CSharp: EvSetExperimentConfig
        VB: EvSetExperimentConfig
      nameWithType:
        CSharp: Core.EvSetExperimentConfig
        VB: Core.EvSetExperimentConfig
      qualifiedName:
        CSharp: eDIA.Events.Core.EvSetExperimentConfig
        VB: eDIA.Events.Core.EvSetExperimentConfig
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvSetExperimentConfig
        path: ''
        startLine: 5681
      summary: Set experiment config. Expects config as JSON string
      example: []
      syntax:
        content:
          CSharp: public static string EvSetExperimentConfig
          VB: Public Shared EvSetExperimentConfig As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.Core.EvSetTaskConfig
      commentId: F:eDIA.Events.Core.EvSetTaskConfig
      language: CSharp
      name:
        CSharp: EvSetTaskConfig
        VB: EvSetTaskConfig
      nameWithType:
        CSharp: Core.EvSetTaskConfig
        VB: Core.EvSetTaskConfig
      qualifiedName:
        CSharp: eDIA.Events.Core.EvSetTaskConfig
        VB: eDIA.Events.Core.EvSetTaskConfig
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvSetTaskConfig
        path: ''
        startLine: 5684
      summary: Set task config. Expects config as JSON string
      example: []
      syntax:
        content:
          CSharp: public static string EvSetTaskConfig
          VB: Public Shared EvSetTaskConfig As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.Core.EvStartExperiment
      commentId: F:eDIA.Events.Core.EvStartExperiment
      language: CSharp
      name:
        CSharp: EvStartExperiment
        VB: EvStartExperiment
      nameWithType:
        CSharp: Core.EvStartExperiment
        VB: Core.EvStartExperiment
      qualifiedName:
        CSharp: eDIA.Events.Core.EvStartExperiment
        VB: eDIA.Events.Core.EvStartExperiment
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvStartExperiment
        path: ''
        startLine: 5687
      summary: Starts the experiment. Expects null
      example: []
      syntax:
        content:
          CSharp: public static string EvStartExperiment
          VB: Public Shared EvStartExperiment As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.Core.EvPauseExperiment
      commentId: F:eDIA.Events.Core.EvPauseExperiment
      language: CSharp
      name:
        CSharp: EvPauseExperiment
        VB: EvPauseExperiment
      nameWithType:
        CSharp: Core.EvPauseExperiment
        VB: Core.EvPauseExperiment
      qualifiedName:
        CSharp: eDIA.Events.Core.EvPauseExperiment
        VB: eDIA.Events.Core.EvPauseExperiment
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvPauseExperiment
        path: ''
        startLine: 5690
      summary: Injects a break block after current trial. Expects null
      example: []
      syntax:
        content:
          CSharp: public static string EvPauseExperiment
          VB: Public Shared EvPauseExperiment As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.Core.EvExperimentConfigSet
      commentId: F:eDIA.Events.Core.EvExperimentConfigSet
      language: CSharp
      name:
        CSharp: EvExperimentConfigSet
        VB: EvExperimentConfigSet
      nameWithType:
        CSharp: Core.EvExperimentConfigSet
        VB: Core.EvExperimentConfigSet
      qualifiedName:
        CSharp: eDIA.Events.Core.EvExperimentConfigSet
        VB: eDIA.Events.Core.EvExperimentConfigSet
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvExperimentConfigSet
        path: ''
        startLine: 5693
      summary: 'Fired when the Experiment manager has set the experimentconfig. '
      example: []
      syntax:
        content:
          CSharp: public static string EvExperimentConfigSet
          VB: Public Shared EvExperimentConfigSet As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.Core.EvTaskConfigSet
      commentId: F:eDIA.Events.Core.EvTaskConfigSet
      language: CSharp
      name:
        CSharp: EvTaskConfigSet
        VB: EvTaskConfigSet
      nameWithType:
        CSharp: Core.EvTaskConfigSet
        VB: Core.EvTaskConfigSet
      qualifiedName:
        CSharp: eDIA.Events.Core.EvTaskConfigSet
        VB: eDIA.Events.Core.EvTaskConfigSet
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvTaskConfigSet
        path: ''
        startLine: 5696
      summary: 'Fired when the Experiment manager has set the taskconfig. '
      example: []
      syntax:
        content:
          CSharp: public static string EvTaskConfigSet
          VB: Public Shared EvTaskConfigSet As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.Core.EvReadyToGo
      commentId: F:eDIA.Events.Core.EvReadyToGo
      language: CSharp
      name:
        CSharp: EvReadyToGo
        VB: EvReadyToGo
      nameWithType:
        CSharp: Core.EvReadyToGo
        VB: Core.EvReadyToGo
      qualifiedName:
        CSharp: eDIA.Events.Core.EvReadyToGo
        VB: eDIA.Events.Core.EvReadyToGo
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvReadyToGo
        path: ''
        startLine: 5699
      summary: 'Fired when both configs are set '
      example: []
      syntax:
        content:
          CSharp: public static string EvReadyToGo
          VB: Public Shared EvReadyToGo As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.Core.EvTrialBegin
      commentId: F:eDIA.Events.Core.EvTrialBegin
      language: CSharp
      name:
        CSharp: EvTrialBegin
        VB: EvTrialBegin
      nameWithType:
        CSharp: Core.EvTrialBegin
        VB: Core.EvTrialBegin
      qualifiedName:
        CSharp: eDIA.Events.Core.EvTrialBegin
        VB: eDIA.Events.Core.EvTrialBegin
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvTrialBegin
        path: ''
        startLine: 5702
      summary: Fired by ExperimentManager when a trial has begun. Expects null
      example: []
      syntax:
        content:
          CSharp: public static string EvTrialBegin
          VB: Public Shared EvTrialBegin As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.Core.EvFinalizeSession
      commentId: F:eDIA.Events.Core.EvFinalizeSession
      language: CSharp
      name:
        CSharp: EvFinalizeSession
        VB: EvFinalizeSession
      nameWithType:
        CSharp: Core.EvFinalizeSession
        VB: Core.EvFinalizeSession
      qualifiedName:
        CSharp: eDIA.Events.Core.EvFinalizeSession
        VB: eDIA.Events.Core.EvFinalizeSession
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvFinalizeSession
        path: ''
        startLine: 5705
      summary: Fired by ExperimentManager when the session had Finialized. Expects null
      example: []
      syntax:
        content:
          CSharp: public static string EvFinalizeSession
          VB: Public Shared EvFinalizeSession As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.Core.EvSessionBreak
      commentId: F:eDIA.Events.Core.EvSessionBreak
      language: CSharp
      name:
        CSharp: EvSessionBreak
        VB: EvSessionBreak
      nameWithType:
        CSharp: Core.EvSessionBreak
        VB: Core.EvSessionBreak
      qualifiedName:
        CSharp: eDIA.Events.Core.EvSessionBreak
        VB: eDIA.Events.Core.EvSessionBreak
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvSessionBreak
        path: ''
        startLine: 5708
      summary: Fired by ExperimentManager when the session starts a break. Expects null
      example: []
      syntax:
        content:
          CSharp: public static string EvSessionBreak
          VB: Public Shared EvSessionBreak As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.Core.EvSessionResume
      commentId: F:eDIA.Events.Core.EvSessionResume
      language: CSharp
      name:
        CSharp: EvSessionResume
        VB: EvSessionResume
      nameWithType:
        CSharp: Core.EvSessionResume
        VB: Core.EvSessionResume
      qualifiedName:
        CSharp: eDIA.Events.Core.EvSessionResume
        VB: eDIA.Events.Core.EvSessionResume
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvSessionResume
        path: ''
        startLine: 5711
      summary: Fired by ExperimentManager when the session continues. Expects null
      example: []
      syntax:
        content:
          CSharp: public static string EvSessionResume
          VB: Public Shared EvSessionResume As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.Core.EvBlockIntroduction
      commentId: F:eDIA.Events.Core.EvBlockIntroduction
      language: CSharp
      name:
        CSharp: EvBlockIntroduction
        VB: EvBlockIntroduction
      nameWithType:
        CSharp: Core.EvBlockIntroduction
        VB: Core.EvBlockIntroduction
      qualifiedName:
        CSharp: eDIA.Events.Core.EvBlockIntroduction
        VB: eDIA.Events.Core.EvBlockIntroduction
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvBlockIntroduction
        path: ''
        startLine: 5714
      summary: Fired by ExperimentManager when a blockintroduction is found. Expects null
      example: []
      syntax:
        content:
          CSharp: public static string EvBlockIntroduction
          VB: Public Shared EvBlockIntroduction As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.Core.EvBlockResumeAfterIntro
      commentId: F:eDIA.Events.Core.EvBlockResumeAfterIntro
      language: CSharp
      name:
        CSharp: EvBlockResumeAfterIntro
        VB: EvBlockResumeAfterIntro
      nameWithType:
        CSharp: Core.EvBlockResumeAfterIntro
        VB: Core.EvBlockResumeAfterIntro
      qualifiedName:
        CSharp: eDIA.Events.Core.EvBlockResumeAfterIntro
        VB: eDIA.Events.Core.EvBlockResumeAfterIntro
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvBlockResumeAfterIntro
        path: ''
        startLine: 5717
      summary: Fired by ExperimentManager when the session resumes after an i.e. introduction. Expects null
      example: []
      syntax:
        content:
          CSharp: public static string EvBlockResumeAfterIntro
          VB: Public Shared EvBlockResumeAfterIntro As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.Core.EvProceed
      commentId: F:eDIA.Events.Core.EvProceed
      language: CSharp
      name:
        CSharp: EvProceed
        VB: EvProceed
      nameWithType:
        CSharp: Core.EvProceed
        VB: Core.EvProceed
      qualifiedName:
        CSharp: eDIA.Events.Core.EvProceed
        VB: eDIA.Events.Core.EvProceed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvProceed
        path: ''
        startLine: 5720
      summary: Event indicating that the system can proceed, useally from experimenter. Expects null
      example: []
      syntax:
        content:
          CSharp: public static string EvProceed
          VB: Public Shared EvProceed As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.Core.EvBlockStart
      commentId: F:eDIA.Events.Core.EvBlockStart
      language: CSharp
      name:
        CSharp: EvBlockStart
        VB: EvBlockStart
      nameWithType:
        CSharp: Core.EvBlockStart
        VB: Core.EvBlockStart
      qualifiedName:
        CSharp: eDIA.Events.Core.EvBlockStart
        VB: eDIA.Events.Core.EvBlockStart
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvBlockStart
        path: ''
        startLine: 5723
      summary: Fired by ExperimentManager when a new block is starting. Expects null
      example: []
      syntax:
        content:
          CSharp: public static string EvBlockStart
          VB: Public Shared EvBlockStart As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.Core.EvSetCustomStoragePath
      commentId: F:eDIA.Events.Core.EvSetCustomStoragePath
      language: CSharp
      name:
        CSharp: EvSetCustomStoragePath
        VB: EvSetCustomStoragePath
      nameWithType:
        CSharp: Core.EvSetCustomStoragePath
        VB: Core.EvSetCustomStoragePath
      qualifiedName:
        CSharp: eDIA.Events.Core.EvSetCustomStoragePath
        VB: eDIA.Events.Core.EvSetCustomStoragePath
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvSetCustomStoragePath
        path: ''
        startLine: 5726
      summary: Set storagepath systemwide. Expects full path as string
      example: []
      syntax:
        content:
          CSharp: public static string EvSetCustomStoragePath
          VB: Public Shared EvSetCustomStoragePath As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.Core.EvFoundLocalConfigFiles
      commentId: F:eDIA.Events.Core.EvFoundLocalConfigFiles
      language: CSharp
      name:
        CSharp: EvFoundLocalConfigFiles
        VB: EvFoundLocalConfigFiles
      nameWithType:
        CSharp: Core.EvFoundLocalConfigFiles
        VB: Core.EvFoundLocalConfigFiles
      qualifiedName:
        CSharp: eDIA.Events.Core.EvFoundLocalConfigFiles
        VB: eDIA.Events.Core.EvFoundLocalConfigFiles
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvFoundLocalConfigFiles
        path: ''
        startLine: 5729
      summary: Notification that local config files are found on disk. Expects amount as int
      example: []
      syntax:
        content:
          CSharp: public static string EvFoundLocalConfigFiles
          VB: Public Shared EvFoundLocalConfigFiles As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.Core.EvLocalConfigSubmitted
      commentId: F:eDIA.Events.Core.EvLocalConfigSubmitted
      language: CSharp
      name:
        CSharp: EvLocalConfigSubmitted
        VB: EvLocalConfigSubmitted
      nameWithType:
        CSharp: Core.EvLocalConfigSubmitted
        VB: Core.EvLocalConfigSubmitted
      qualifiedName:
        CSharp: eDIA.Events.Core.EvLocalConfigSubmitted
        VB: eDIA.Events.Core.EvLocalConfigSubmitted
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvLocalConfigSubmitted
        path: ''
        startLine: 5732
      summary: Local config file was submitted. Expects filename as string
      example: []
      syntax:
        content:
          CSharp: public static string EvLocalConfigSubmitted
          VB: Public Shared EvLocalConfigSubmitted As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.Core.EvSystemHalt
      commentId: F:eDIA.Events.Core.EvSystemHalt
      language: CSharp
      name:
        CSharp: EvSystemHalt
        VB: EvSystemHalt
      nameWithType:
        CSharp: Core.EvSystemHalt
        VB: Core.EvSystemHalt
      qualifiedName:
        CSharp: eDIA.Events.Core.EvSystemHalt
        VB: eDIA.Events.Core.EvSystemHalt
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvSystemHalt
        path: ''
        startLine: 5735
      summary: Use this to alert the user that something went wrong
      example: []
      syntax:
        content:
          CSharp: public static string EvSystemHalt
          VB: Public Shared EvSystemHalt As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.Core.EvRequestSystemSettings
      commentId: F:eDIA.Events.Core.EvRequestSystemSettings
      language: CSharp
      name:
        CSharp: EvRequestSystemSettings
        VB: EvRequestSystemSettings
      nameWithType:
        CSharp: Core.EvRequestSystemSettings
        VB: Core.EvRequestSystemSettings
      qualifiedName:
        CSharp: eDIA.Events.Core.EvRequestSystemSettings
        VB: eDIA.Events.Core.EvRequestSystemSettings
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvRequestSystemSettings
        path: ''
        startLine: 5738
      summary: Request to show system settings. Expects null
      example: []
      syntax:
        content:
          CSharp: public static string EvRequestSystemSettings
          VB: Public Shared EvRequestSystemSettings As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.Core.EvOpenSystemSettings
      commentId: F:eDIA.Events.Core.EvOpenSystemSettings
      language: CSharp
      name:
        CSharp: EvOpenSystemSettings
        VB: EvOpenSystemSettings
      nameWithType:
        CSharp: Core.EvOpenSystemSettings
        VB: Core.EvOpenSystemSettings
      qualifiedName:
        CSharp: eDIA.Events.Core.EvOpenSystemSettings
        VB: eDIA.Events.Core.EvOpenSystemSettings
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvOpenSystemSettings
        path: ''
        startLine: 5741
      summary: Open system settings panel. Expects full package of SettingsDeclaration as JSON
      example: []
      syntax:
        content:
          CSharp: public static string EvOpenSystemSettings
          VB: Public Shared EvOpenSystemSettings As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.Core.EvUpdateSystemSettings
      commentId: F:eDIA.Events.Core.EvUpdateSystemSettings
      language: CSharp
      name:
        CSharp: EvUpdateSystemSettings
        VB: EvUpdateSystemSettings
      nameWithType:
        CSharp: Core.EvUpdateSystemSettings
        VB: Core.EvUpdateSystemSettings
      qualifiedName:
        CSharp: eDIA.Events.Core.EvUpdateSystemSettings
        VB: eDIA.Events.Core.EvUpdateSystemSettings
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvUpdateSystemSettings
        path: ''
        startLine: 5744
      summary: SystemSettings have been updated. Expects full package of SettingsDeclaration as JSON
      example: []
      syntax:
        content:
          CSharp: public static string EvUpdateSystemSettings
          VB: Public Shared EvUpdateSystemSettings As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.Core.EvQuitApplication
      commentId: F:eDIA.Events.Core.EvQuitApplication
      language: CSharp
      name:
        CSharp: EvQuitApplication
        VB: EvQuitApplication
      nameWithType:
        CSharp: Core.EvQuitApplication
        VB: Core.EvQuitApplication
      qualifiedName:
        CSharp: eDIA.Events.Core.EvQuitApplication
        VB: eDIA.Events.Core.EvQuitApplication
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvQuitApplication
        path: ''
        startLine: 5747
      summary: Exit application
      example: []
      syntax:
        content:
          CSharp: public static string EvQuitApplication
          VB: Public Shared EvQuitApplication As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.Core.EvShowMessageToUser
      commentId: F:eDIA.Events.Core.EvShowMessageToUser
      language: CSharp
      name:
        CSharp: EvShowMessageToUser
        VB: EvShowMessageToUser
      nameWithType:
        CSharp: Core.EvShowMessageToUser
        VB: Core.EvShowMessageToUser
      qualifiedName:
        CSharp: eDIA.Events.Core.EvShowMessageToUser
        VB: eDIA.Events.Core.EvShowMessageToUser
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvShowMessageToUser
        path: ''
        startLine: 5750
      summary: Shows a message to the VR user
      example: []
      syntax:
        content:
          CSharp: public static string EvShowMessageToUser
          VB: Public Shared EvShowMessageToUser As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: eDIA.Events.ControlPanel
    commentId: T:eDIA.Events.ControlPanel
    language: CSharp
    name:
      CSharp: ControlPanel
      VB: ControlPanel
    nameWithType:
      CSharp: ControlPanel
      VB: ControlPanel
    qualifiedName:
      CSharp: eDIA.Events.ControlPanel
      VB: eDIA.Events.ControlPanel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA.Events
    source:
      id: ControlPanel
      path: ''
      startLine: 5759
    summary: 'All event related to local or remote control '
    example: []
    syntax:
      content:
        CSharp: public class ControlPanel
        VB: Public Class ControlPanel
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.Events.ControlPanel.EvEnableButton
      commentId: F:eDIA.Events.ControlPanel.EvEnableButton
      language: CSharp
      name:
        CSharp: EvEnableButton
        VB: EvEnableButton
      nameWithType:
        CSharp: ControlPanel.EvEnableButton
        VB: ControlPanel.EvEnableButton
      qualifiedName:
        CSharp: eDIA.Events.ControlPanel.EvEnableButton
        VB: eDIA.Events.ControlPanel.EvEnableButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvEnableButton
        path: ''
        startLine: 5762
      summary: Set a buttons interactivity, expects string[ [PAUSE/PROCEED], [TRUE/FALSE] ]
      example: []
      syntax:
        content:
          CSharp: public static string EvEnableButton
          VB: Public Shared EvEnableButton As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.ControlPanel.EvStartTimer
      commentId: F:eDIA.Events.ControlPanel.EvStartTimer
      language: CSharp
      name:
        CSharp: EvStartTimer
        VB: EvStartTimer
      nameWithType:
        CSharp: ControlPanel.EvStartTimer
        VB: ControlPanel.EvStartTimer
      qualifiedName:
        CSharp: eDIA.Events.ControlPanel.EvStartTimer
        VB: eDIA.Events.ControlPanel.EvStartTimer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvStartTimer
        path: ''
        startLine: 5765
      summary: Start a visual timer animation
      example: []
      syntax:
        content:
          CSharp: public static string EvStartTimer
          VB: Public Shared EvStartTimer As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.ControlPanel.EvStopTimer
      commentId: F:eDIA.Events.ControlPanel.EvStopTimer
      language: CSharp
      name:
        CSharp: EvStopTimer
        VB: EvStopTimer
      nameWithType:
        CSharp: ControlPanel.EvStopTimer
        VB: ControlPanel.EvStopTimer
      qualifiedName:
        CSharp: eDIA.Events.ControlPanel.EvStopTimer
        VB: eDIA.Events.ControlPanel.EvStopTimer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvStopTimer
        path: ''
        startLine: 5768
      summary: Stops a visual timer animation
      example: []
      syntax:
        content:
          CSharp: public static string EvStopTimer
          VB: Public Shared EvStopTimer As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.ControlPanel.EvUpdateExperimentSummary
      commentId: F:eDIA.Events.ControlPanel.EvUpdateExperimentSummary
      language: CSharp
      name:
        CSharp: EvUpdateExperimentSummary
        VB: EvUpdateExperimentSummary
      nameWithType:
        CSharp: ControlPanel.EvUpdateExperimentSummary
        VB: ControlPanel.EvUpdateExperimentSummary
      qualifiedName:
        CSharp: eDIA.Events.ControlPanel.EvUpdateExperimentSummary
        VB: eDIA.Events.ControlPanel.EvUpdateExperimentSummary
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvUpdateExperimentSummary
        path: ''
        startLine: 5771
      summary: Start a visual timer animation
      example: []
      syntax:
        content:
          CSharp: public static string EvUpdateExperimentSummary
          VB: Public Shared EvUpdateExperimentSummary As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.ControlPanel.EvExperimentProgressUpdate
      commentId: F:eDIA.Events.ControlPanel.EvExperimentProgressUpdate
      language: CSharp
      name:
        CSharp: EvExperimentProgressUpdate
        VB: EvExperimentProgressUpdate
      nameWithType:
        CSharp: ControlPanel.EvExperimentProgressUpdate
        VB: ControlPanel.EvExperimentProgressUpdate
      qualifiedName:
        CSharp: eDIA.Events.ControlPanel.EvExperimentProgressUpdate
        VB: eDIA.Events.ControlPanel.EvExperimentProgressUpdate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvExperimentProgressUpdate
        path: ''
        startLine: 5774
      summary: Send progress update (trial/block)
      example: []
      syntax:
        content:
          CSharp: public static string EvExperimentProgressUpdate
          VB: Public Shared EvExperimentProgressUpdate As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: eDIA.Events.Eye
    commentId: T:eDIA.Events.Eye
    language: CSharp
    name:
      CSharp: Eye
      VB: Eye
    nameWithType:
      CSharp: Eye
      VB: Eye
    qualifiedName:
      CSharp: eDIA.Events.Eye
      VB: eDIA.Events.Eye
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA.Events
    source:
      id: Eye
      path: ''
      startLine: 5782
    syntax:
      content:
        CSharp: public class Eye
        VB: Public Class Eye
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.Events.Eye.EvEnableEyeCalibrationTrigger
      commentId: F:eDIA.Events.Eye.EvEnableEyeCalibrationTrigger
      language: CSharp
      name:
        CSharp: EvEnableEyeCalibrationTrigger
        VB: EvEnableEyeCalibrationTrigger
      nameWithType:
        CSharp: Eye.EvEnableEyeCalibrationTrigger
        VB: Eye.EvEnableEyeCalibrationTrigger
      qualifiedName:
        CSharp: eDIA.Events.Eye.EvEnableEyeCalibrationTrigger
        VB: eDIA.Events.Eye.EvEnableEyeCalibrationTrigger
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvEnableEyeCalibrationTrigger
        path: ''
        startLine: 5784
      summary: Whatever EYE package is used, it listens to this. Expects boolean
      example: []
      syntax:
        content:
          CSharp: public static string EvEnableEyeCalibrationTrigger
          VB: Public Shared EvEnableEyeCalibrationTrigger As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.Eye.EvEyeCalibrationRequested
      commentId: F:eDIA.Events.Eye.EvEyeCalibrationRequested
      language: CSharp
      name:
        CSharp: EvEyeCalibrationRequested
        VB: EvEyeCalibrationRequested
      nameWithType:
        CSharp: Eye.EvEyeCalibrationRequested
        VB: Eye.EvEyeCalibrationRequested
      qualifiedName:
        CSharp: eDIA.Events.Eye.EvEyeCalibrationRequested
        VB: eDIA.Events.Eye.EvEyeCalibrationRequested
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvEyeCalibrationRequested
        path: ''
        startLine: 5787
      summary: Eye calibration request. Expects null
      example: []
      syntax:
        content:
          CSharp: public static string EvEyeCalibrationRequested
          VB: Public Shared EvEyeCalibrationRequested As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: eDIA.Events.XR
    commentId: T:eDIA.Events.XR
    language: CSharp
    name:
      CSharp: XR
      VB: XR
    nameWithType:
      CSharp: XR
      VB: XR
    qualifiedName:
      CSharp: eDIA.Events.XR
      VB: eDIA.Events.XR
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA.Events
    source:
      id: XR
      path: ''
      startLine: 5793
    syntax:
      content:
        CSharp: public class XR
        VB: Public Class XR
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.Events.XR.EvUpdateInteractiveInteractor
      commentId: F:eDIA.Events.XR.EvUpdateInteractiveInteractor
      language: CSharp
      name:
        CSharp: EvUpdateInteractiveInteractor
        VB: EvUpdateInteractiveInteractor
      nameWithType:
        CSharp: XR.EvUpdateInteractiveInteractor
        VB: XR.EvUpdateInteractiveInteractor
      qualifiedName:
        CSharp: eDIA.Events.XR.EvUpdateInteractiveInteractor
        VB: eDIA.Events.XR.EvUpdateInteractiveInteractor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvUpdateInteractiveInteractor
        path: ''
        startLine: 5796
      summary: The main interactor has changed. Expects a enum PrimaryInteractor as INT
      example: []
      syntax:
        content:
          CSharp: public static string EvUpdateInteractiveInteractor
          VB: Public Shared EvUpdateInteractiveInteractor As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.XR.EvUpdateVisableInteractor
      commentId: F:eDIA.Events.XR.EvUpdateVisableInteractor
      language: CSharp
      name:
        CSharp: EvUpdateVisableInteractor
        VB: EvUpdateVisableInteractor
      nameWithType:
        CSharp: XR.EvUpdateVisableInteractor
        VB: XR.EvUpdateVisableInteractor
      qualifiedName:
        CSharp: eDIA.Events.XR.EvUpdateVisableInteractor
        VB: eDIA.Events.XR.EvUpdateVisableInteractor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvUpdateVisableInteractor
        path: ''
        startLine: 5799
      summary: Which controllers are active in the application. Expects a enum AvailableController as INT
      example: []
      syntax:
        content:
          CSharp: public static string EvUpdateVisableInteractor
          VB: Public Shared EvUpdateVisableInteractor As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.XR.EvEnableXRInteraction
      commentId: F:eDIA.Events.XR.EvEnableXRInteraction
      language: CSharp
      name:
        CSharp: EvEnableXRInteraction
        VB: EvEnableXRInteraction
      nameWithType:
        CSharp: XR.EvEnableXRInteraction
        VB: XR.EvEnableXRInteraction
      qualifiedName:
        CSharp: eDIA.Events.XR.EvEnableXRInteraction
        VB: eDIA.Events.XR.EvEnableXRInteraction
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvEnableXRInteraction
        path: ''
        startLine: 5802
      summary: Turn XR hand / controller interaction possibility on or off. Expects boolean
      example: []
      syntax:
        content:
          CSharp: public static string EvEnableXRInteraction
          VB: Public Shared EvEnableXRInteraction As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.XR.EvShowXRController
      commentId: F:eDIA.Events.XR.EvShowXRController
      language: CSharp
      name:
        CSharp: EvShowXRController
        VB: EvShowXRController
      nameWithType:
        CSharp: XR.EvShowXRController
        VB: XR.EvShowXRController
      qualifiedName:
        CSharp: eDIA.Events.XR.EvShowXRController
        VB: eDIA.Events.XR.EvShowXRController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvShowXRController
        path: ''
        startLine: 5805
      summary: Shows XR hand / controller on or off. Expects boolean
      example: []
      syntax:
        content:
          CSharp: public static string EvShowXRController
          VB: Public Shared EvShowXRController As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.XR.EvFoundXRrigReferences
      commentId: F:eDIA.Events.XR.EvFoundXRrigReferences
      language: CSharp
      name:
        CSharp: EvFoundXRrigReferences
        VB: EvFoundXRrigReferences
      nameWithType:
        CSharp: XR.EvFoundXRrigReferences
        VB: XR.EvFoundXRrigReferences
      qualifiedName:
        CSharp: eDIA.Events.XR.EvFoundXRrigReferences
        VB: eDIA.Events.XR.EvFoundXRrigReferences
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvFoundXRrigReferences
        path: ''
        startLine: 5808
      summary: System found XR hands and HMD objects. Expects null
      example: []
      syntax:
        content:
          CSharp: public static string EvFoundXRrigReferences
          VB: Public Shared EvFoundXRrigReferences As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.XR.EvHandPose
      commentId: F:eDIA.Events.XR.EvHandPose
      language: CSharp
      name:
        CSharp: EvHandPose
        VB: EvHandPose
      nameWithType:
        CSharp: XR.EvHandPose
        VB: XR.EvHandPose
      qualifiedName:
        CSharp: eDIA.Events.XR.EvHandPose
        VB: eDIA.Events.XR.EvHandPose
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvHandPose
        path: ''
        startLine: 5814
      summary: Animate the handmodel is this pose, expects string &apos;idle&apos; &apos;point&apos; &apos;fist&apos; ...
      example: []
      syntax:
        content:
          CSharp: public static string EvHandPose
          VB: Public Shared EvHandPose As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.XR.EvEnableCustomHandPoses
      commentId: F:eDIA.Events.XR.EvEnableCustomHandPoses
      language: CSharp
      name:
        CSharp: EvEnableCustomHandPoses
        VB: EvEnableCustomHandPoses
      nameWithType:
        CSharp: XR.EvEnableCustomHandPoses
        VB: XR.EvEnableCustomHandPoses
      qualifiedName:
        CSharp: eDIA.Events.XR.EvEnableCustomHandPoses
        VB: eDIA.Events.XR.EvEnableCustomHandPoses
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvEnableCustomHandPoses
        path: ''
        startLine: 5817
      summary: Handmodel pose reacts live to controller state, expects bool
      example: []
      syntax:
        content:
          CSharp: public static string EvEnableCustomHandPoses
          VB: Public Shared EvEnableCustomHandPoses As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: eDIA.Events.DataHandlers
    commentId: T:eDIA.Events.DataHandlers
    language: CSharp
    name:
      CSharp: DataHandlers
      VB: DataHandlers
    nameWithType:
      CSharp: DataHandlers
      VB: DataHandlers
    qualifiedName:
      CSharp: eDIA.Events.DataHandlers
      VB: eDIA.Events.DataHandlers
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA.Events
    source:
      id: DataHandlers
      path: ''
      startLine: 5823
    syntax:
      content:
        CSharp: public class DataHandlers
        VB: Public Class DataHandlers
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.Events.DataHandlers.EvSendMarker
      commentId: F:eDIA.Events.DataHandlers.EvSendMarker
      language: CSharp
      name:
        CSharp: EvSendMarker
        VB: EvSendMarker
      nameWithType:
        CSharp: DataHandlers.EvSendMarker
        VB: DataHandlers.EvSendMarker
      qualifiedName:
        CSharp: eDIA.Events.DataHandlers.EvSendMarker
        VB: eDIA.Events.DataHandlers.EvSendMarker
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvSendMarker
        path: ''
        startLine: 5826
      summary: Send a marker to the system, any listener can pick it up and handle it. Expects marker as string
      example: []
      syntax:
        content:
          CSharp: public static string EvSendMarker
          VB: Public Shared EvSendMarker As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: eDIA.Events.GUI
    commentId: T:eDIA.Events.GUI
    language: CSharp
    name:
      CSharp: GUI
      VB: GUI
    nameWithType:
      CSharp: GUI
      VB: GUI
    qualifiedName:
      CSharp: eDIA.Events.GUI
      VB: eDIA.Events.GUI
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA.Events
    source:
      id: GUI
      path: ''
      startLine: 8937
    summary: 'UI related events '
    example: []
    syntax:
      content:
        CSharp: public class GUI
        VB: Public Class GUI
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.Events.GUI.EvShowMessageBox
      commentId: F:eDIA.Events.GUI.EvShowMessageBox
      language: CSharp
      name:
        CSharp: EvShowMessageBox
        VB: EvShowMessageBox
      nameWithType:
        CSharp: GUI.EvShowMessageBox
        VB: GUI.EvShowMessageBox
      qualifiedName:
        CSharp: eDIA.Events.GUI.EvShowMessageBox
        VB: eDIA.Events.GUI.EvShowMessageBox
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvShowMessageBox
        path: ''
        startLine: 8940
      summary: Shows message to experimenter canvas. Expects message as string, autohide as bool
      example: []
      syntax:
        content:
          CSharp: public static string EvShowMessageBox
          VB: Public Shared EvShowMessageBox As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.GUI.EvShowTooltip
      commentId: F:eDIA.Events.GUI.EvShowTooltip
      language: CSharp
      name:
        CSharp: EvShowTooltip
        VB: EvShowTooltip
      nameWithType:
        CSharp: GUI.EvShowTooltip
        VB: GUI.EvShowTooltip
      qualifiedName:
        CSharp: eDIA.Events.GUI.EvShowTooltip
        VB: eDIA.Events.GUI.EvShowTooltip
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvShowTooltip
        path: ''
        startLine: 8943
      syntax:
        content:
          CSharp: public static string EvShowTooltip
          VB: Public Shared EvShowTooltip As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.GUI.EvHideTooltip
      commentId: F:eDIA.Events.GUI.EvHideTooltip
      language: CSharp
      name:
        CSharp: EvHideTooltip
        VB: EvHideTooltip
      nameWithType:
        CSharp: GUI.EvHideTooltip
        VB: GUI.EvHideTooltip
      qualifiedName:
        CSharp: eDIA.Events.GUI.EvHideTooltip
        VB: eDIA.Events.GUI.EvHideTooltip
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvHideTooltip
        path: ''
        startLine: 8946
      syntax:
        content:
          CSharp: public static string EvHideTooltip
          VB: Public Shared EvHideTooltip As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Events.GUI.EvSetControlPanelMode
      commentId: F:eDIA.Events.GUI.EvSetControlPanelMode
      language: CSharp
      name:
        CSharp: EvSetControlPanelMode
        VB: EvSetControlPanelMode
      nameWithType:
        CSharp: GUI.EvSetControlPanelMode
        VB: GUI.EvSetControlPanelMode
      qualifiedName:
        CSharp: eDIA.Events.GUI.EvSetControlPanelMode
        VB: eDIA.Events.GUI.EvSetControlPanelMode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Events
      source:
        id: EvSetControlPanelMode
        path: ''
        startLine: 8949
      summary: Sets the controlpanelmode. Exprects int. 0=hidden, 1=2Dcanvas, 2=3Dcanvas
      example: []
      syntax:
        content:
          CSharp: public static string EvSetControlPanelMode
          VB: Public Shared EvSetControlPanelMode As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: eDIA.Utilities
  commentId: N:eDIA.Utilities
  language: CSharp
  name:
    CSharp: eDIA.Utilities
    VB: eDIA.Utilities
  nameWithType:
    CSharp: eDIA.Utilities
    VB: eDIA.Utilities
  qualifiedName:
    CSharp: eDIA.Utilities
    VB: eDIA.Utilities
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: eDIA.Utilities.ChangeLogEntry
    commentId: T:eDIA.Utilities.ChangeLogEntry
    language: CSharp
    name:
      CSharp: ChangeLogEntry
      VB: ChangeLogEntry
    nameWithType:
      CSharp: ChangeLogEntry
      VB: ChangeLogEntry
    qualifiedName:
      CSharp: eDIA.Utilities.ChangeLogEntry
      VB: eDIA.Utilities.ChangeLogEntry
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA.Utilities
    source:
      id: ChangeLogEntry
      path: ''
      startLine: 8146
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class ChangeLogEntry
        VB: >-
          <Serializable>

          Public Class ChangeLogEntry
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: eDIA.Utilities.ChangeLogEntry.description
      commentId: F:eDIA.Utilities.ChangeLogEntry.description
      language: CSharp
      name:
        CSharp: description
        VB: description
      nameWithType:
        CSharp: ChangeLogEntry.description
        VB: ChangeLogEntry.description
      qualifiedName:
        CSharp: eDIA.Utilities.ChangeLogEntry.description
        VB: eDIA.Utilities.ChangeLogEntry.description
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Utilities
      source:
        id: description
        path: ''
        startLine: 8148
      syntax:
        content:
          CSharp: public string description
          VB: Public description As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.Utilities.ChangeLogEntry.type
      commentId: F:eDIA.Utilities.ChangeLogEntry.type
      language: CSharp
      name:
        CSharp: type
        VB: type
      nameWithType:
        CSharp: ChangeLogEntry.type
        VB: ChangeLogEntry.type
      qualifiedName:
        CSharp: eDIA.Utilities.ChangeLogEntry.type
        VB: eDIA.Utilities.ChangeLogEntry.type
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Utilities
      source:
        id: type
        path: ''
        startLine: 8149
      syntax:
        content:
          CSharp: public string type
          VB: Public type As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.Utilities.ChangeLogEntry.version
      commentId: F:eDIA.Utilities.ChangeLogEntry.version
      language: CSharp
      name:
        CSharp: version
        VB: version
      nameWithType:
        CSharp: ChangeLogEntry.version
        VB: ChangeLogEntry.version
      qualifiedName:
        CSharp: eDIA.Utilities.ChangeLogEntry.version
        VB: eDIA.Utilities.ChangeLogEntry.version
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Utilities
      source:
        id: version
        path: ''
        startLine: 8150
      syntax:
        content:
          CSharp: public string version
          VB: Public version As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.Utilities.ChangeLogEntry.date
      commentId: F:eDIA.Utilities.ChangeLogEntry.date
      language: CSharp
      name:
        CSharp: date
        VB: date
      nameWithType:
        CSharp: ChangeLogEntry.date
        VB: ChangeLogEntry.date
      qualifiedName:
        CSharp: eDIA.Utilities.ChangeLogEntry.date
        VB: eDIA.Utilities.ChangeLogEntry.date
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Utilities
      source:
        id: date
        path: ''
        startLine: 8151
      syntax:
        content:
          CSharp: public string date
          VB: Public date As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: eDIA.Utilities.ChangeLogEntry.dev
      commentId: F:eDIA.Utilities.ChangeLogEntry.dev
      language: CSharp
      name:
        CSharp: dev
        VB: dev
      nameWithType:
        CSharp: ChangeLogEntry.dev
        VB: ChangeLogEntry.dev
      qualifiedName:
        CSharp: eDIA.Utilities.ChangeLogEntry.dev
        VB: eDIA.Utilities.ChangeLogEntry.dev
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Utilities
      source:
        id: dev
        path: ''
        startLine: 8152
      syntax:
        content:
          CSharp: public string dev
          VB: Public dev As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: eDIA.Utilities.ProjectFileUtilities
    commentId: T:eDIA.Utilities.ProjectFileUtilities
    language: CSharp
    name:
      CSharp: ProjectFileUtilities
      VB: ProjectFileUtilities
    nameWithType:
      CSharp: ProjectFileUtilities
      VB: ProjectFileUtilities
    qualifiedName:
      CSharp: eDIA.Utilities.ProjectFileUtilities
      VB: eDIA.Utilities.ProjectFileUtilities
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: eDIA.Utilities
    source:
      id: ProjectFileUtilities
      path: ''
      startLine: 8155
    syntax:
      content:
        CSharp: public static class ProjectFileUtilities
        VB: Public Module ProjectFileUtilities
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: eDIA.Utilities.ProjectFileUtilities.logSRC
      commentId: F:eDIA.Utilities.ProjectFileUtilities.logSRC
      language: CSharp
      name:
        CSharp: logSRC
        VB: logSRC
      nameWithType:
        CSharp: ProjectFileUtilities.logSRC
        VB: ProjectFileUtilities.logSRC
      qualifiedName:
        CSharp: eDIA.Utilities.ProjectFileUtilities.logSRC
        VB: eDIA.Utilities.ProjectFileUtilities.logSRC
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Utilities
      source:
        id: logSRC
        path: ''
        startLine: 8157
      syntax:
        content:
          CSharp: public static List<ChangeLogEntry> logSRC
          VB: Public Shared logSRC As List(Of ChangeLogEntry)
        return:
          type: System.Collections.Generic.List{eDIA.Utilities.ChangeLogEntry}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Utilities.ProjectFileUtilities.logOrderedByVersion
      commentId: F:eDIA.Utilities.ProjectFileUtilities.logOrderedByVersion
      language: CSharp
      name:
        CSharp: logOrderedByVersion
        VB: logOrderedByVersion
      nameWithType:
        CSharp: ProjectFileUtilities.logOrderedByVersion
        VB: ProjectFileUtilities.logOrderedByVersion
      qualifiedName:
        CSharp: eDIA.Utilities.ProjectFileUtilities.logOrderedByVersion
        VB: eDIA.Utilities.ProjectFileUtilities.logOrderedByVersion
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Utilities
      source:
        id: logOrderedByVersion
        path: ''
        startLine: 8158
      syntax:
        content:
          CSharp: public static List<ChangeLogEntry> logOrderedByVersion
          VB: Public Shared logOrderedByVersion As List(Of ChangeLogEntry)
        return:
          type: System.Collections.Generic.List{eDIA.Utilities.ChangeLogEntry}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Utilities.ProjectFileUtilities.logSingleVersion
      commentId: F:eDIA.Utilities.ProjectFileUtilities.logSingleVersion
      language: CSharp
      name:
        CSharp: logSingleVersion
        VB: logSingleVersion
      nameWithType:
        CSharp: ProjectFileUtilities.logSingleVersion
        VB: ProjectFileUtilities.logSingleVersion
      qualifiedName:
        CSharp: eDIA.Utilities.ProjectFileUtilities.logSingleVersion
        VB: eDIA.Utilities.ProjectFileUtilities.logSingleVersion
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Utilities
      source:
        id: logSingleVersion
        path: ''
        startLine: 8159
      syntax:
        content:
          CSharp: public static List<ChangeLogEntry> logSingleVersion
          VB: Public Shared logSingleVersion As List(Of ChangeLogEntry)
        return:
          type: System.Collections.Generic.List{eDIA.Utilities.ChangeLogEntry}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Utilities.ProjectFileUtilities.logOrderedOnType
      commentId: F:eDIA.Utilities.ProjectFileUtilities.logOrderedOnType
      language: CSharp
      name:
        CSharp: logOrderedOnType
        VB: logOrderedOnType
      nameWithType:
        CSharp: ProjectFileUtilities.logOrderedOnType
        VB: ProjectFileUtilities.logOrderedOnType
      qualifiedName:
        CSharp: eDIA.Utilities.ProjectFileUtilities.logOrderedOnType
        VB: eDIA.Utilities.ProjectFileUtilities.logOrderedOnType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Utilities
      source:
        id: logOrderedOnType
        path: ''
        startLine: 8160
      syntax:
        content:
          CSharp: public static List<ChangeLogEntry> logOrderedOnType
          VB: Public Shared logOrderedOnType As List(Of ChangeLogEntry)
        return:
          type: System.Collections.Generic.List{eDIA.Utilities.ChangeLogEntry}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Utilities.ProjectFileUtilities.changeLogString
      commentId: F:eDIA.Utilities.ProjectFileUtilities.changeLogString
      language: CSharp
      name:
        CSharp: changeLogString
        VB: changeLogString
      nameWithType:
        CSharp: ProjectFileUtilities.changeLogString
        VB: ProjectFileUtilities.changeLogString
      qualifiedName:
        CSharp: eDIA.Utilities.ProjectFileUtilities.changeLogString
        VB: eDIA.Utilities.ProjectFileUtilities.changeLogString
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Utilities
      source:
        id: changeLogString
        path: ''
        startLine: 8162
      syntax:
        content:
          CSharp: public static string changeLogString
          VB: Public Shared changeLogString As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Utilities.ProjectFileUtilities.UpdateChangelog
      commentId: M:eDIA.Utilities.ProjectFileUtilities.UpdateChangelog
      language: CSharp
      name:
        CSharp: UpdateChangelog()
        VB: UpdateChangelog()
      nameWithType:
        CSharp: ProjectFileUtilities.UpdateChangelog()
        VB: ProjectFileUtilities.UpdateChangelog()
      qualifiedName:
        CSharp: eDIA.Utilities.ProjectFileUtilities.UpdateChangelog()
        VB: eDIA.Utilities.ProjectFileUtilities.UpdateChangelog()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Utilities
      source:
        id: UpdateChangelog
        path: ''
        startLine: 8165
      summary: Converts CSV file to sorted CHANGELOG.md file
      example: []
      syntax:
        content:
          CSharp: public static void UpdateChangelog()
          VB: Public Shared Sub UpdateChangelog
      overload: eDIA.Utilities.ProjectFileUtilities.UpdateChangelog*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: eDIA.Utilities.ProjectFileUtilities.GenerateSingleVersionEntry
      commentId: M:eDIA.Utilities.ProjectFileUtilities.GenerateSingleVersionEntry
      language: CSharp
      name:
        CSharp: GenerateSingleVersionEntry()
        VB: GenerateSingleVersionEntry()
      nameWithType:
        CSharp: ProjectFileUtilities.GenerateSingleVersionEntry()
        VB: ProjectFileUtilities.GenerateSingleVersionEntry()
      qualifiedName:
        CSharp: eDIA.Utilities.ProjectFileUtilities.GenerateSingleVersionEntry()
        VB: eDIA.Utilities.ProjectFileUtilities.GenerateSingleVersionEntry()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: eDIA.Utilities
      source:
        id: GenerateSingleVersionEntry
        path: ''
        startLine: 8208
      summary: Loops through the sorted array and filters one version sorted by ChangeType and Date
      example: []
      syntax:
        content:
          CSharp: public static void GenerateSingleVersionEntry()
          VB: Public Shared Sub GenerateSingleVersionEntry
      overload: eDIA.Utilities.ProjectFileUtilities.GenerateSingleVersionEntry*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: TASK
  commentId: N:TASK
  language: CSharp
  name:
    CSharp: TASK
    VB: TASK
  nameWithType:
    CSharp: TASK
    VB: TASK
  qualifiedName:
    CSharp: TASK
    VB: TASK
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TASK.MessagesToUser
    commentId: T:TASK.MessagesToUser
    language: CSharp
    name:
      CSharp: MessagesToUser
      VB: MessagesToUser
    nameWithType:
      CSharp: MessagesToUser
      VB: MessagesToUser
    qualifiedName:
      CSharp: TASK.MessagesToUser
      VB: TASK.MessagesToUser
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TASK
    source:
      id: MessagesToUser
      path: ''
      startLine: 6892
    syntax:
      content:
        CSharp: 'public class MessagesToUser : MonoBehaviour'
        VB: >-
          Public Class MessagesToUser

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TASK.MessagesToUser.OnSessionStart
      commentId: M:TASK.MessagesToUser.OnSessionStart
      language: CSharp
      name:
        CSharp: OnSessionStart()
        VB: OnSessionStart()
      nameWithType:
        CSharp: MessagesToUser.OnSessionStart()
        VB: MessagesToUser.OnSessionStart()
      qualifiedName:
        CSharp: TASK.MessagesToUser.OnSessionStart()
        VB: TASK.MessagesToUser.OnSessionStart()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: OnSessionStart
        path: ''
        startLine: 6894
      syntax:
        content:
          CSharp: public void OnSessionStart()
          VB: Public Sub OnSessionStart
      overload: TASK.MessagesToUser.OnSessionStart*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TASK.MessagesToUser.OnSessionBreak
      commentId: M:TASK.MessagesToUser.OnSessionBreak
      language: CSharp
      name:
        CSharp: OnSessionBreak()
        VB: OnSessionBreak()
      nameWithType:
        CSharp: MessagesToUser.OnSessionBreak()
        VB: MessagesToUser.OnSessionBreak()
      qualifiedName:
        CSharp: TASK.MessagesToUser.OnSessionBreak()
        VB: TASK.MessagesToUser.OnSessionBreak()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: OnSessionBreak
        path: ''
        startLine: 6898
      syntax:
        content:
          CSharp: public void OnSessionBreak()
          VB: Public Sub OnSessionBreak
      overload: TASK.MessagesToUser.OnSessionBreak*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TASK.MessagesToUser.OnSessionEnd
      commentId: M:TASK.MessagesToUser.OnSessionEnd
      language: CSharp
      name:
        CSharp: OnSessionEnd()
        VB: OnSessionEnd()
      nameWithType:
        CSharp: MessagesToUser.OnSessionEnd()
        VB: MessagesToUser.OnSessionEnd()
      qualifiedName:
        CSharp: TASK.MessagesToUser.OnSessionEnd()
        VB: TASK.MessagesToUser.OnSessionEnd()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: OnSessionEnd
        path: ''
        startLine: 6902
      syntax:
        content:
          CSharp: public void OnSessionEnd()
          VB: Public Sub OnSessionEnd
      overload: TASK.MessagesToUser.OnSessionEnd*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TASK.TaskBlockAssessment
    commentId: T:TASK.TaskBlockAssessment
    language: CSharp
    name:
      CSharp: TaskBlockAssessment
      VB: TaskBlockAssessment
    nameWithType:
      CSharp: TaskBlockAssessment
      VB: TaskBlockAssessment
    qualifiedName:
      CSharp: TASK.TaskBlockAssessment
      VB: TASK.TaskBlockAssessment
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TASK
    source:
      id: TaskBlockAssessment
      path: ''
      startLine: 22754
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class TaskBlockAssessment : TaskBlock
        VB: >-
          <Serializable>

          Public Class TaskBlockAssessment

              Inherits TaskBlock
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TASK.TaskBlockAssessment.qpanel
      commentId: F:TASK.TaskBlockAssessment.qpanel
      language: CSharp
      name:
        CSharp: qpanel
        VB: qpanel
      nameWithType:
        CSharp: TaskBlockAssessment.qpanel
        VB: TaskBlockAssessment.qpanel
      qualifiedName:
        CSharp: TASK.TaskBlockAssessment.qpanel
        VB: TASK.TaskBlockAssessment.qpanel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: qpanel
        path: ''
        startLine: 22758
      syntax:
        content:
          CSharp: public GameObject qpanel
          VB: Public qpanel As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TASK.TaskBlockAssessment.qpanelTextField
      commentId: F:TASK.TaskBlockAssessment.qpanelTextField
      language: CSharp
      name:
        CSharp: qpanelTextField
        VB: qpanelTextField
      nameWithType:
        CSharp: TaskBlockAssessment.qpanelTextField
        VB: TaskBlockAssessment.qpanelTextField
      qualifiedName:
        CSharp: TASK.TaskBlockAssessment.qpanelTextField
        VB: TASK.TaskBlockAssessment.qpanelTextField
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: qpanelTextField
        path: ''
        startLine: 22759
      syntax:
        content:
          CSharp: public TextMeshProUGUI qpanelTextField
          VB: Public qpanelTextField As TextMeshProUGUI
        return:
          type: Global.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TASK.TaskBlockAssessment.XRControllerListener
      commentId: F:TASK.TaskBlockAssessment.XRControllerListener
      language: CSharp
      name:
        CSharp: XRControllerListener
        VB: XRControllerListener
      nameWithType:
        CSharp: TaskBlockAssessment.XRControllerListener
        VB: TaskBlockAssessment.XRControllerListener
      qualifiedName:
        CSharp: TASK.TaskBlockAssessment.XRControllerListener
        VB: TASK.TaskBlockAssessment.XRControllerListener
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: XRControllerListener
        path: ''
        startLine: 22761
      syntax:
        content:
          CSharp: public XRControllerInputRemapper XRControllerListener
          VB: Public XRControllerListener As XRControllerInputRemapper
        return:
          type: Global.XRControllerInputRemapper
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TASK.TaskBlockAssessment.TaskStep1
      commentId: M:TASK.TaskBlockAssessment.TaskStep1
      language: CSharp
      name:
        CSharp: TaskStep1()
        VB: TaskStep1()
      nameWithType:
        CSharp: TaskBlockAssessment.TaskStep1()
        VB: TaskBlockAssessment.TaskStep1()
      qualifiedName:
        CSharp: TASK.TaskBlockAssessment.TaskStep1()
        VB: TASK.TaskBlockAssessment.TaskStep1()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: TaskStep1
        path: ''
        startLine: 22782
      summary: Present Cube
      example: []
      syntax:
        content:
          CSharp: public void TaskStep1()
          VB: Public Sub TaskStep1
      overload: TASK.TaskBlockAssessment.TaskStep1*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TASK.TaskBlockAssessment.TaskStep2
      commentId: M:TASK.TaskBlockAssessment.TaskStep2
      language: CSharp
      name:
        CSharp: TaskStep2()
        VB: TaskStep2()
      nameWithType:
        CSharp: TaskBlockAssessment.TaskStep2()
        VB: TaskBlockAssessment.TaskStep2()
      qualifiedName:
        CSharp: TASK.TaskBlockAssessment.TaskStep2()
        VB: TASK.TaskBlockAssessment.TaskStep2()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: TaskStep2
        path: ''
        startLine: 22790
      summary: Move cube, wait on user input
      example: []
      syntax:
        content:
          CSharp: public void TaskStep2()
          VB: Public Sub TaskStep2
      overload: TASK.TaskBlockAssessment.TaskStep2*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TASK.TaskBlockAssessment.TaskStep3
      commentId: M:TASK.TaskBlockAssessment.TaskStep3
      language: CSharp
      name:
        CSharp: TaskStep3()
        VB: TaskStep3()
      nameWithType:
        CSharp: TaskBlockAssessment.TaskStep3()
        VB: TaskBlockAssessment.TaskStep3()
      qualifiedName:
        CSharp: TASK.TaskBlockAssessment.TaskStep3()
        VB: TASK.TaskBlockAssessment.TaskStep3()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: TaskStep3
        path: ''
        startLine: 22806
      summary: Stop moving, change color
      example: []
      syntax:
        content:
          CSharp: public void TaskStep3()
          VB: Public Sub TaskStep3
      overload: TASK.TaskBlockAssessment.TaskStep3*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TASK.TaskBlockAssessment.TriggerPressed(InputAction.CallbackContext)
      commentId: M:TASK.TaskBlockAssessment.TriggerPressed(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: TriggerPressed(InputAction.CallbackContext)
        VB: TriggerPressed(InputAction.CallbackContext)
      nameWithType:
        CSharp: TaskBlockAssessment.TriggerPressed(InputAction.CallbackContext)
        VB: TaskBlockAssessment.TriggerPressed(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TASK.TaskBlockAssessment.TriggerPressed(InputAction.CallbackContext)
        VB: TASK.TaskBlockAssessment.TriggerPressed(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: TriggerPressed
        path: ''
        startLine: 22821
      syntax:
        content:
          CSharp: public void TriggerPressed(InputAction.CallbackContext context)
          VB: Public Sub TriggerPressed(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: TASK.TaskBlockAssessment.TriggerPressed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TASK.TaskBlockAssessment.OnBlockStart
      commentId: M:TASK.TaskBlockAssessment.OnBlockStart
      language: CSharp
      name:
        CSharp: OnBlockStart()
        VB: OnBlockStart()
      nameWithType:
        CSharp: TaskBlockAssessment.OnBlockStart()
        VB: TaskBlockAssessment.OnBlockStart()
      qualifiedName:
        CSharp: TASK.TaskBlockAssessment.OnBlockStart()
        VB: TASK.TaskBlockAssessment.OnBlockStart()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: OnBlockStart
        path: ''
        startLine: 22837
      syntax:
        content:
          CSharp: public override void OnBlockStart()
          VB: Public Overrides Sub OnBlockStart
      overload: TASK.TaskBlockAssessment.OnBlockStart*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TASK.TaskBlockAssessment.OnStartTrial
      commentId: M:TASK.TaskBlockAssessment.OnStartTrial
      language: CSharp
      name:
        CSharp: OnStartTrial()
        VB: OnStartTrial()
      nameWithType:
        CSharp: TaskBlockAssessment.OnStartTrial()
        VB: TaskBlockAssessment.OnStartTrial()
      qualifiedName:
        CSharp: TASK.TaskBlockAssessment.OnStartTrial()
        VB: TASK.TaskBlockAssessment.OnStartTrial()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: OnStartTrial
        path: ''
        startLine: 22840
      syntax:
        content:
          CSharp: public override void OnStartTrial()
          VB: Public Overrides Sub OnStartTrial
      overload: TASK.TaskBlockAssessment.OnStartTrial*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TASK.TaskBlockAssessment.OnEndTrial
      commentId: M:TASK.TaskBlockAssessment.OnEndTrial
      language: CSharp
      name:
        CSharp: OnEndTrial()
        VB: OnEndTrial()
      nameWithType:
        CSharp: TaskBlockAssessment.OnEndTrial()
        VB: TaskBlockAssessment.OnEndTrial()
      qualifiedName:
        CSharp: TASK.TaskBlockAssessment.OnEndTrial()
        VB: TASK.TaskBlockAssessment.OnEndTrial()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: OnEndTrial
        path: ''
        startLine: 22844
      syntax:
        content:
          CSharp: public override void OnEndTrial()
          VB: Public Overrides Sub OnEndTrial
      overload: TASK.TaskBlockAssessment.OnEndTrial*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TASK.TaskBlockAssessment.OnBetweenSteps
      commentId: M:TASK.TaskBlockAssessment.OnBetweenSteps
      language: CSharp
      name:
        CSharp: OnBetweenSteps()
        VB: OnBetweenSteps()
      nameWithType:
        CSharp: TaskBlockAssessment.OnBetweenSteps()
        VB: TaskBlockAssessment.OnBetweenSteps()
      qualifiedName:
        CSharp: TASK.TaskBlockAssessment.OnBetweenSteps()
        VB: TASK.TaskBlockAssessment.OnBetweenSteps()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: OnBetweenSteps
        path: ''
        startLine: 22847
      syntax:
        content:
          CSharp: public override void OnBetweenSteps()
          VB: Public Overrides Sub OnBetweenSteps
      overload: TASK.TaskBlockAssessment.OnBetweenSteps*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TASK.TaskBlockAssessment.OnBlockEnd
      commentId: M:TASK.TaskBlockAssessment.OnBlockEnd
      language: CSharp
      name:
        CSharp: OnBlockEnd()
        VB: OnBlockEnd()
      nameWithType:
        CSharp: TaskBlockAssessment.OnBlockEnd()
        VB: TaskBlockAssessment.OnBlockEnd()
      qualifiedName:
        CSharp: TASK.TaskBlockAssessment.OnBlockEnd()
        VB: TASK.TaskBlockAssessment.OnBlockEnd()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: OnBlockEnd
        path: ''
        startLine: 22850
      syntax:
        content:
          CSharp: public override void OnBlockEnd()
          VB: Public Overrides Sub OnBlockEnd
      overload: TASK.TaskBlockAssessment.OnBlockEnd*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: TASK.TaskBlockPractice
    commentId: T:TASK.TaskBlockPractice
    language: CSharp
    name:
      CSharp: TaskBlockPractice
      VB: TaskBlockPractice
    nameWithType:
      CSharp: TaskBlockPractice
      VB: TaskBlockPractice
    qualifiedName:
      CSharp: TASK.TaskBlockPractice
      VB: TASK.TaskBlockPractice
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TASK
    source:
      id: TaskBlockPractice
      path: ''
      startLine: 22869
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class TaskBlockPractice : TaskBlock
        VB: >-
          <Serializable>

          Public Class TaskBlockPractice

              Inherits TaskBlock
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TASK.TaskBlockPractice.theCube
      commentId: F:TASK.TaskBlockPractice.theCube
      language: CSharp
      name:
        CSharp: theCube
        VB: theCube
      nameWithType:
        CSharp: TaskBlockPractice.theCube
        VB: TaskBlockPractice.theCube
      qualifiedName:
        CSharp: TASK.TaskBlockPractice.theCube
        VB: TASK.TaskBlockPractice.theCube
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: theCube
        path: ''
        startLine: 22873
      syntax:
        content:
          CSharp: public GameObject theCube
          VB: Public theCube As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TASK.TaskBlockPractice.XRControllerListener
      commentId: F:TASK.TaskBlockPractice.XRControllerListener
      language: CSharp
      name:
        CSharp: XRControllerListener
        VB: XRControllerListener
      nameWithType:
        CSharp: TaskBlockPractice.XRControllerListener
        VB: TaskBlockPractice.XRControllerListener
      qualifiedName:
        CSharp: TASK.TaskBlockPractice.XRControllerListener
        VB: TASK.TaskBlockPractice.XRControllerListener
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: XRControllerListener
        path: ''
        startLine: 22878
      syntax:
        content:
          CSharp: public XRControllerInputRemapper XRControllerListener
          VB: Public XRControllerListener As XRControllerInputRemapper
        return:
          type: Global.XRControllerInputRemapper
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TASK.TaskBlockPractice.TaskStep1
      commentId: M:TASK.TaskBlockPractice.TaskStep1
      language: CSharp
      name:
        CSharp: TaskStep1()
        VB: TaskStep1()
      nameWithType:
        CSharp: TaskBlockPractice.TaskStep1()
        VB: TaskBlockPractice.TaskStep1()
      qualifiedName:
        CSharp: TASK.TaskBlockPractice.TaskStep1()
        VB: TASK.TaskBlockPractice.TaskStep1()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: TaskStep1
        path: ''
        startLine: 22921
      summary: Present Cube
      example: []
      syntax:
        content:
          CSharp: public void TaskStep1()
          VB: Public Sub TaskStep1
      overload: TASK.TaskBlockPractice.TaskStep1*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TASK.TaskBlockPractice.TaskStep2
      commentId: M:TASK.TaskBlockPractice.TaskStep2
      language: CSharp
      name:
        CSharp: TaskStep2()
        VB: TaskStep2()
      nameWithType:
        CSharp: TaskBlockPractice.TaskStep2()
        VB: TaskBlockPractice.TaskStep2()
      qualifiedName:
        CSharp: TASK.TaskBlockPractice.TaskStep2()
        VB: TASK.TaskBlockPractice.TaskStep2()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: TaskStep2
        path: ''
        startLine: 22947
      summary: Move cube, wait on user input
      example: []
      syntax:
        content:
          CSharp: public void TaskStep2()
          VB: Public Sub TaskStep2
      overload: TASK.TaskBlockPractice.TaskStep2*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TASK.TaskBlockPractice.TaskStep3
      commentId: M:TASK.TaskBlockPractice.TaskStep3
      language: CSharp
      name:
        CSharp: TaskStep3()
        VB: TaskStep3()
      nameWithType:
        CSharp: TaskBlockPractice.TaskStep3()
        VB: TaskBlockPractice.TaskStep3()
      qualifiedName:
        CSharp: TASK.TaskBlockPractice.TaskStep3()
        VB: TASK.TaskBlockPractice.TaskStep3()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: TaskStep3
        path: ''
        startLine: 22969
      summary: Move cube, wait on user input
      example: []
      syntax:
        content:
          CSharp: public void TaskStep3()
          VB: Public Sub TaskStep3
      overload: TASK.TaskBlockPractice.TaskStep3*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TASK.TaskBlockPractice.TaskStep4
      commentId: M:TASK.TaskBlockPractice.TaskStep4
      language: CSharp
      name:
        CSharp: TaskStep4()
        VB: TaskStep4()
      nameWithType:
        CSharp: TaskBlockPractice.TaskStep4()
        VB: TaskBlockPractice.TaskStep4()
      qualifiedName:
        CSharp: TASK.TaskBlockPractice.TaskStep4()
        VB: TASK.TaskBlockPractice.TaskStep4()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: TaskStep4
        path: ''
        startLine: 22987
      summary: Stop moving, change color
      example: []
      syntax:
        content:
          CSharp: public void TaskStep4()
          VB: Public Sub TaskStep4
      overload: TASK.TaskBlockPractice.TaskStep4*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TASK.TaskBlockPractice.TriggerPressed(InputAction.CallbackContext)
      commentId: M:TASK.TaskBlockPractice.TriggerPressed(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: TriggerPressed(InputAction.CallbackContext)
        VB: TriggerPressed(InputAction.CallbackContext)
      nameWithType:
        CSharp: TaskBlockPractice.TriggerPressed(InputAction.CallbackContext)
        VB: TaskBlockPractice.TriggerPressed(InputAction.CallbackContext)
      qualifiedName:
        CSharp: TASK.TaskBlockPractice.TriggerPressed(InputAction.CallbackContext)
        VB: TASK.TaskBlockPractice.TriggerPressed(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: TriggerPressed
        path: ''
        startLine: 23019
      syntax:
        content:
          CSharp: public void TriggerPressed(InputAction.CallbackContext context)
          VB: Public Sub TriggerPressed(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: Global.InputAction.CallbackContext
      overload: TASK.TaskBlockPractice.TriggerPressed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TASK.TaskBlockPractice.TaskStep5
      commentId: M:TASK.TaskBlockPractice.TaskStep5
      language: CSharp
      name:
        CSharp: TaskStep5()
        VB: TaskStep5()
      nameWithType:
        CSharp: TaskBlockPractice.TaskStep5()
        VB: TaskBlockPractice.TaskStep5()
      qualifiedName:
        CSharp: TASK.TaskBlockPractice.TaskStep5()
        VB: TASK.TaskBlockPractice.TaskStep5()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: TaskStep5
        path: ''
        startLine: 23028
      summary: Wait
      example: []
      syntax:
        content:
          CSharp: public void TaskStep5()
          VB: Public Sub TaskStep5
      overload: TASK.TaskBlockPractice.TaskStep5*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TASK.TaskBlockPractice.OnBlockStart
      commentId: M:TASK.TaskBlockPractice.OnBlockStart
      language: CSharp
      name:
        CSharp: OnBlockStart()
        VB: OnBlockStart()
      nameWithType:
        CSharp: TaskBlockPractice.OnBlockStart()
        VB: TaskBlockPractice.OnBlockStart()
      qualifiedName:
        CSharp: TASK.TaskBlockPractice.OnBlockStart()
        VB: TASK.TaskBlockPractice.OnBlockStart()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: OnBlockStart
        path: ''
        startLine: 23061
      syntax:
        content:
          CSharp: public override void OnBlockStart()
          VB: Public Overrides Sub OnBlockStart
      overload: TASK.TaskBlockPractice.OnBlockStart*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TASK.TaskBlockPractice.OnStartTrial
      commentId: M:TASK.TaskBlockPractice.OnStartTrial
      language: CSharp
      name:
        CSharp: OnStartTrial()
        VB: OnStartTrial()
      nameWithType:
        CSharp: TaskBlockPractice.OnStartTrial()
        VB: TaskBlockPractice.OnStartTrial()
      qualifiedName:
        CSharp: TASK.TaskBlockPractice.OnStartTrial()
        VB: TASK.TaskBlockPractice.OnStartTrial()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: OnStartTrial
        path: ''
        startLine: 23064
      syntax:
        content:
          CSharp: public override void OnStartTrial()
          VB: Public Overrides Sub OnStartTrial
      overload: TASK.TaskBlockPractice.OnStartTrial*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TASK.TaskBlockPractice.OnEndTrial
      commentId: M:TASK.TaskBlockPractice.OnEndTrial
      language: CSharp
      name:
        CSharp: OnEndTrial()
        VB: OnEndTrial()
      nameWithType:
        CSharp: TaskBlockPractice.OnEndTrial()
        VB: TaskBlockPractice.OnEndTrial()
      qualifiedName:
        CSharp: TASK.TaskBlockPractice.OnEndTrial()
        VB: TASK.TaskBlockPractice.OnEndTrial()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: OnEndTrial
        path: ''
        startLine: 23068
      syntax:
        content:
          CSharp: public override void OnEndTrial()
          VB: Public Overrides Sub OnEndTrial
      overload: TASK.TaskBlockPractice.OnEndTrial*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TASK.TaskBlockPractice.OnBetweenSteps
      commentId: M:TASK.TaskBlockPractice.OnBetweenSteps
      language: CSharp
      name:
        CSharp: OnBetweenSteps()
        VB: OnBetweenSteps()
      nameWithType:
        CSharp: TaskBlockPractice.OnBetweenSteps()
        VB: TaskBlockPractice.OnBetweenSteps()
      qualifiedName:
        CSharp: TASK.TaskBlockPractice.OnBetweenSteps()
        VB: TASK.TaskBlockPractice.OnBetweenSteps()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: OnBetweenSteps
        path: ''
        startLine: 23072
      syntax:
        content:
          CSharp: public override void OnBetweenSteps()
          VB: Public Overrides Sub OnBetweenSteps
      overload: TASK.TaskBlockPractice.OnBetweenSteps*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TASK.TaskBlockPractice.OnBlockEnd
      commentId: M:TASK.TaskBlockPractice.OnBlockEnd
      language: CSharp
      name:
        CSharp: OnBlockEnd()
        VB: OnBlockEnd()
      nameWithType:
        CSharp: TaskBlockPractice.OnBlockEnd()
        VB: TaskBlockPractice.OnBlockEnd()
      qualifiedName:
        CSharp: TASK.TaskBlockPractice.OnBlockEnd()
        VB: TASK.TaskBlockPractice.OnBlockEnd()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: OnBlockEnd
        path: ''
        startLine: 23075
      syntax:
        content:
          CSharp: public override void OnBlockEnd()
          VB: Public Overrides Sub OnBlockEnd
      overload: TASK.TaskBlockPractice.OnBlockEnd*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: TASK.TaskBlockTemplate
    commentId: T:TASK.TaskBlockTemplate
    language: CSharp
    name:
      CSharp: TaskBlockTemplate
      VB: TaskBlockTemplate
    nameWithType:
      CSharp: TaskBlockTemplate
      VB: TaskBlockTemplate
    qualifiedName:
      CSharp: TASK.TaskBlockTemplate
      VB: TASK.TaskBlockTemplate
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TASK
    source:
      id: TaskBlockTemplate
      path: ''
      startLine: 23097
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class TaskBlockTemplate : TaskBlock
        VB: >-
          <Serializable>

          Public Class TaskBlockTemplate

              Inherits TaskBlock
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TASK.TaskBlockTemplate.OnBlockStart
      commentId: M:TASK.TaskBlockTemplate.OnBlockStart
      language: CSharp
      name:
        CSharp: OnBlockStart()
        VB: OnBlockStart()
      nameWithType:
        CSharp: TaskBlockTemplate.OnBlockStart()
        VB: TaskBlockTemplate.OnBlockStart()
      qualifiedName:
        CSharp: TASK.TaskBlockTemplate.OnBlockStart()
        VB: TASK.TaskBlockTemplate.OnBlockStart()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: OnBlockStart
        path: ''
        startLine: 23190
      syntax:
        content:
          CSharp: public override void OnBlockStart()
          VB: Public Overrides Sub OnBlockStart
      overload: TASK.TaskBlockTemplate.OnBlockStart*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TASK.TaskBlockTemplate.OnStartTrial
      commentId: M:TASK.TaskBlockTemplate.OnStartTrial
      language: CSharp
      name:
        CSharp: OnStartTrial()
        VB: OnStartTrial()
      nameWithType:
        CSharp: TaskBlockTemplate.OnStartTrial()
        VB: TaskBlockTemplate.OnStartTrial()
      qualifiedName:
        CSharp: TASK.TaskBlockTemplate.OnStartTrial()
        VB: TASK.TaskBlockTemplate.OnStartTrial()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: OnStartTrial
        path: ''
        startLine: 23193
      syntax:
        content:
          CSharp: public override void OnStartTrial()
          VB: Public Overrides Sub OnStartTrial
      overload: TASK.TaskBlockTemplate.OnStartTrial*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TASK.TaskBlockTemplate.OnEndTrial
      commentId: M:TASK.TaskBlockTemplate.OnEndTrial
      language: CSharp
      name:
        CSharp: OnEndTrial()
        VB: OnEndTrial()
      nameWithType:
        CSharp: TaskBlockTemplate.OnEndTrial()
        VB: TaskBlockTemplate.OnEndTrial()
      qualifiedName:
        CSharp: TASK.TaskBlockTemplate.OnEndTrial()
        VB: TASK.TaskBlockTemplate.OnEndTrial()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: OnEndTrial
        path: ''
        startLine: 23196
      syntax:
        content:
          CSharp: public override void OnEndTrial()
          VB: Public Overrides Sub OnEndTrial
      overload: TASK.TaskBlockTemplate.OnEndTrial*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TASK.TaskBlockTemplate.OnBetweenSteps
      commentId: M:TASK.TaskBlockTemplate.OnBetweenSteps
      language: CSharp
      name:
        CSharp: OnBetweenSteps()
        VB: OnBetweenSteps()
      nameWithType:
        CSharp: TaskBlockTemplate.OnBetweenSteps()
        VB: TaskBlockTemplate.OnBetweenSteps()
      qualifiedName:
        CSharp: TASK.TaskBlockTemplate.OnBetweenSteps()
        VB: TASK.TaskBlockTemplate.OnBetweenSteps()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: OnBetweenSteps
        path: ''
        startLine: 23199
      syntax:
        content:
          CSharp: public override void OnBetweenSteps()
          VB: Public Overrides Sub OnBetweenSteps
      overload: TASK.TaskBlockTemplate.OnBetweenSteps*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TASK.TaskBlockTemplate.OnBlockEnd
      commentId: M:TASK.TaskBlockTemplate.OnBlockEnd
      language: CSharp
      name:
        CSharp: OnBlockEnd()
        VB: OnBlockEnd()
      nameWithType:
        CSharp: TaskBlockTemplate.OnBlockEnd()
        VB: TaskBlockTemplate.OnBlockEnd()
      qualifiedName:
        CSharp: TASK.TaskBlockTemplate.OnBlockEnd()
        VB: TASK.TaskBlockTemplate.OnBlockEnd()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TASK
      source:
        id: OnBlockEnd
        path: ''
        startLine: 23202
      syntax:
        content:
          CSharp: public override void OnBlockEnd()
          VB: Public Overrides Sub OnBlockEnd
      overload: TASK.TaskBlockTemplate.OnBlockEnd*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  eDIA.eParam.#ctor*:
    name:
      CSharp:
      - id: eDIA.eParam.#ctor*
        name: eParam
        nameWithType: eParam.eParam
        qualifiedName: eDIA.eParam.eParam
      VB:
      - id: eDIA.eParam.#ctor*
        name: eParam
        nameWithType: eParam.eParam
        qualifiedName: eDIA.eParam.eParam
    isDefinition: true
    commentId: Overload:eDIA.eParam.#ctor
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  System.Single[]:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  eDIA.eParam.GetFloat*:
    name:
      CSharp:
      - id: eDIA.eParam.GetFloat*
        name: GetFloat
        nameWithType: eParam.GetFloat
        qualifiedName: eDIA.eParam.GetFloat
      VB:
      - id: eDIA.eParam.GetFloat*
        name: GetFloat
        nameWithType: eParam.GetFloat
        qualifiedName: eDIA.eParam.GetFloat
    isDefinition: true
    commentId: Overload:eDIA.eParam.GetFloat
  eDIA.eParam.GetFloats*:
    name:
      CSharp:
      - id: eDIA.eParam.GetFloats*
        name: GetFloats
        nameWithType: eParam.GetFloats
        qualifiedName: eDIA.eParam.GetFloats
      VB:
      - id: eDIA.eParam.GetFloats*
        name: GetFloats
        nameWithType: eParam.GetFloats
        qualifiedName: eDIA.eParam.GetFloats
    isDefinition: true
    commentId: Overload:eDIA.eParam.GetFloats
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  System.String[]:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  eDIA.eParam.GetString*:
    name:
      CSharp:
      - id: eDIA.eParam.GetString*
        name: GetString
        nameWithType: eParam.GetString
        qualifiedName: eDIA.eParam.GetString
      VB:
      - id: eDIA.eParam.GetString*
        name: GetString
        nameWithType: eParam.GetString
        qualifiedName: eDIA.eParam.GetString
    isDefinition: true
    commentId: Overload:eDIA.eParam.GetString
  eDIA.eParam.GetStrings*:
    name:
      CSharp:
      - id: eDIA.eParam.GetStrings*
        name: GetStrings
        nameWithType: eParam.GetStrings
        qualifiedName: eDIA.eParam.GetStrings
      VB:
      - id: eDIA.eParam.GetStrings*
        name: GetStrings
        nameWithType: eParam.GetStrings
        qualifiedName: eDIA.eParam.GetStrings
    isDefinition: true
    commentId: Overload:eDIA.eParam.GetStrings
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  System.Int32[]:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  eDIA.eParam.GetInt*:
    name:
      CSharp:
      - id: eDIA.eParam.GetInt*
        name: GetInt
        nameWithType: eParam.GetInt
        qualifiedName: eDIA.eParam.GetInt
      VB:
      - id: eDIA.eParam.GetInt*
        name: GetInt
        nameWithType: eParam.GetInt
        qualifiedName: eDIA.eParam.GetInt
    isDefinition: true
    commentId: Overload:eDIA.eParam.GetInt
  eDIA.eParam.GetInts*:
    name:
      CSharp:
      - id: eDIA.eParam.GetInts*
        name: GetInts
        nameWithType: eParam.GetInts
        qualifiedName: eDIA.eParam.GetInts
      VB:
      - id: eDIA.eParam.GetInts*
        name: GetInts
        nameWithType: eParam.GetInts
        qualifiedName: eDIA.eParam.GetInts
    isDefinition: true
    commentId: Overload:eDIA.eParam.GetInts
  eDIA.eParam.GetIntAt*:
    name:
      CSharp:
      - id: eDIA.eParam.GetIntAt*
        name: GetIntAt
        nameWithType: eParam.GetIntAt
        qualifiedName: eDIA.eParam.GetIntAt
      VB:
      - id: eDIA.eParam.GetIntAt*
        name: GetIntAt
        nameWithType: eParam.GetIntAt
        qualifiedName: eDIA.eParam.GetIntAt
    isDefinition: true
    commentId: Overload:eDIA.eParam.GetIntAt
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  System.Boolean[]:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  eDIA.eParam.GetBool*:
    name:
      CSharp:
      - id: eDIA.eParam.GetBool*
        name: GetBool
        nameWithType: eParam.GetBool
        qualifiedName: eDIA.eParam.GetBool
      VB:
      - id: eDIA.eParam.GetBool*
        name: GetBool
        nameWithType: eParam.GetBool
        qualifiedName: eDIA.eParam.GetBool
    isDefinition: true
    commentId: Overload:eDIA.eParam.GetBool
  eDIA.eParam.GetBools*:
    name:
      CSharp:
      - id: eDIA.eParam.GetBools*
        name: GetBools
        nameWithType: eParam.GetBools
        qualifiedName: eDIA.eParam.GetBools
      VB:
      - id: eDIA.eParam.GetBools*
        name: GetBools
        nameWithType: eParam.GetBools
        qualifiedName: eDIA.eParam.GetBools
    isDefinition: true
    commentId: Overload:eDIA.eParam.GetBools
  Global.Vector3:
    name:
      CSharp:
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      VB:
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
    isDefinition: true
  Global.Vector3[]:
    name:
      CSharp:
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  eDIA.eParam.GetVector3*:
    name:
      CSharp:
      - id: eDIA.eParam.GetVector3*
        name: GetVector3
        nameWithType: eParam.GetVector3
        qualifiedName: eDIA.eParam.GetVector3
      VB:
      - id: eDIA.eParam.GetVector3*
        name: GetVector3
        nameWithType: eParam.GetVector3
        qualifiedName: eDIA.eParam.GetVector3
    isDefinition: true
    commentId: Overload:eDIA.eParam.GetVector3
  eDIA.eParam.GetObject*:
    name:
      CSharp:
      - id: eDIA.eParam.GetObject*
        name: GetObject
        nameWithType: eParam.GetObject
        qualifiedName: eDIA.eParam.GetObject
      VB:
      - id: eDIA.eParam.GetObject*
        name: GetObject
        nameWithType: eParam.GetObject
        qualifiedName: eDIA.eParam.GetObject
    isDefinition: true
    commentId: Overload:eDIA.eParam.GetObject
  Global.Transform:
    name:
      CSharp:
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      VB:
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
    isDefinition: true
  eDIA.eParam.GetTransform*:
    name:
      CSharp:
      - id: eDIA.eParam.GetTransform*
        name: GetTransform
        nameWithType: eParam.GetTransform
        qualifiedName: eDIA.eParam.GetTransform
      VB:
      - id: eDIA.eParam.GetTransform*
        name: GetTransform
        nameWithType: eParam.GetTransform
        qualifiedName: eDIA.eParam.GetTransform
    isDefinition: true
    commentId: Overload:eDIA.eParam.GetTransform
  eDIA:
    name:
      CSharp:
      - name: eDIA
        nameWithType: eDIA
        qualifiedName: eDIA
      VB:
      - name: eDIA
        nameWithType: eDIA
        qualifiedName: eDIA
    isDefinition: true
    commentId: N:eDIA
  eDIA.eParam.StringBool:
    name:
      CSharp:
      - id: eDIA.eParam.StringBool
        name: eParam.StringBool
        nameWithType: eParam.StringBool
        qualifiedName: eDIA.eParam.StringBool
      VB:
      - id: eDIA.eParam.StringBool
        name: eParam.StringBool
        nameWithType: eParam.StringBool
        qualifiedName: eDIA.eParam.StringBool
    isDefinition: true
    parent: eDIA
    commentId: T:eDIA.eParam.StringBool
  eDIA.eParam.GetStringBoolString*:
    name:
      CSharp:
      - id: eDIA.eParam.GetStringBoolString*
        name: GetStringBoolString
        nameWithType: eParam.GetStringBoolString
        qualifiedName: eDIA.eParam.GetStringBoolString
      VB:
      - id: eDIA.eParam.GetStringBoolString*
        name: GetStringBoolString
        nameWithType: eParam.GetStringBoolString
        qualifiedName: eDIA.eParam.GetStringBoolString
    isDefinition: true
    commentId: Overload:eDIA.eParam.GetStringBoolString
  eDIA.eParam.GetStringBoolBool*:
    name:
      CSharp:
      - id: eDIA.eParam.GetStringBoolBool*
        name: GetStringBoolBool
        nameWithType: eParam.GetStringBoolBool
        qualifiedName: eDIA.eParam.GetStringBoolBool
      VB:
      - id: eDIA.eParam.GetStringBoolBool*
        name: GetStringBoolBool
        nameWithType: eParam.GetStringBoolBool
        qualifiedName: eDIA.eParam.GetStringBoolBool
    isDefinition: true
    commentId: Overload:eDIA.eParam.GetStringBoolBool
  eDIA.eParam:
    name:
      CSharp:
      - id: eDIA.eParam
        name: eParam
        nameWithType: eParam
        qualifiedName: eDIA.eParam
      VB:
      - id: eDIA.eParam
        name: eParam
        nameWithType: eParam
        qualifiedName: eDIA.eParam
    isDefinition: true
    parent: eDIA
    commentId: T:eDIA.eParam
  eDIA.EventManager.showLog*:
    name:
      CSharp:
      - id: eDIA.EventManager.showLog*
        name: showLog
        nameWithType: EventManager.showLog
        qualifiedName: eDIA.EventManager.showLog
      VB:
      - id: eDIA.EventManager.showLog*
        name: showLog
        nameWithType: EventManager.showLog
        qualifiedName: eDIA.EventManager.showLog
    isDefinition: true
    commentId: Overload:eDIA.EventManager.showLog
  System.Action`1:
    name:
      CSharp:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Action`1
  System.Action{eDIA.eParam}:
    name:
      CSharp:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: eDIA.eParam
        name: eParam
        nameWithType: eParam
        qualifiedName: eDIA.eParam
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: eDIA.eParam
        name: eParam
        nameWithType: eParam
        qualifiedName: eDIA.eParam
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Action`1
    parent: System
    commentId: T:System.Action{eDIA.eParam}
  eDIA.EventManager.StartListening*:
    name:
      CSharp:
      - id: eDIA.EventManager.StartListening*
        name: StartListening
        nameWithType: EventManager.StartListening
        qualifiedName: eDIA.EventManager.StartListening
      VB:
      - id: eDIA.EventManager.StartListening*
        name: StartListening
        nameWithType: EventManager.StartListening
        qualifiedName: eDIA.EventManager.StartListening
    isDefinition: true
    commentId: Overload:eDIA.EventManager.StartListening
  eDIA.EventManager.StopListening*:
    name:
      CSharp:
      - id: eDIA.EventManager.StopListening*
        name: StopListening
        nameWithType: EventManager.StopListening
        qualifiedName: eDIA.EventManager.StopListening
      VB:
      - id: eDIA.EventManager.StopListening*
        name: StopListening
        nameWithType: EventManager.StopListening
        qualifiedName: eDIA.EventManager.StopListening
    isDefinition: true
    commentId: Overload:eDIA.EventManager.StopListening
  eDIA.EventManager.TriggerEvent*:
    name:
      CSharp:
      - id: eDIA.EventManager.TriggerEvent*
        name: TriggerEvent
        nameWithType: EventManager.TriggerEvent
        qualifiedName: eDIA.EventManager.TriggerEvent
      VB:
      - id: eDIA.EventManager.TriggerEvent*
        name: TriggerEvent
        nameWithType: EventManager.TriggerEvent
        qualifiedName: eDIA.EventManager.TriggerEvent
    isDefinition: true
    commentId: Overload:eDIA.EventManager.TriggerEvent
  eDIA.EventManager:
    name:
      CSharp:
      - id: eDIA.EventManager
        name: EventManager
        nameWithType: EventManager
        qualifiedName: eDIA.EventManager
      VB:
      - id: eDIA.EventManager
        name: EventManager
        nameWithType: EventManager
        qualifiedName: eDIA.EventManager
    isDefinition: true
    commentId: T:eDIA.EventManager
  System.SerializableAttribute:
    name:
      CSharp:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
      VB:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.SerializableAttribute
  System.SerializableAttribute.#ctor:
    name:
      CSharp:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.SerializableAttribute
    commentId: M:System.SerializableAttribute.#ctor
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.List{Vector2}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Vector2}
  eDIA.Constants:
    name:
      CSharp:
      - id: eDIA.Constants
        name: Constants
        nameWithType: Constants
        qualifiedName: eDIA.Constants
      VB:
      - id: eDIA.Constants
        name: Constants
        nameWithType: Constants
        qualifiedName: eDIA.Constants
    isDefinition: true
    commentId: T:eDIA.Constants
  eDIA.Constants.Interactor:
    name:
      CSharp:
      - id: eDIA.Constants.Interactor
        name: Constants.Interactor
        nameWithType: Constants.Interactor
        qualifiedName: eDIA.Constants.Interactor
      VB:
      - id: eDIA.Constants.Interactor
        name: Constants.Interactor
        nameWithType: Constants.Interactor
        qualifiedName: eDIA.Constants.Interactor
    isDefinition: true
    parent: eDIA
    commentId: T:eDIA.Constants.Interactor
  eDIA.Constants.TargetHZ:
    name:
      CSharp:
      - id: eDIA.Constants.TargetHZ
        name: Constants.TargetHZ
        nameWithType: Constants.TargetHZ
        qualifiedName: eDIA.Constants.TargetHZ
      VB:
      - id: eDIA.Constants.TargetHZ
        name: Constants.TargetHZ
        nameWithType: Constants.TargetHZ
        qualifiedName: eDIA.Constants.TargetHZ
    isDefinition: true
    parent: eDIA
    commentId: T:eDIA.Constants.TargetHZ
  eDIA.Constants.Languages:
    name:
      CSharp:
      - id: eDIA.Constants.Languages
        name: Constants.Languages
        nameWithType: Constants.Languages
        qualifiedName: eDIA.Constants.Languages
      VB:
      - id: eDIA.Constants.Languages
        name: Constants.Languages
        nameWithType: Constants.Languages
        qualifiedName: eDIA.Constants.Languages
    isDefinition: true
    parent: eDIA
    commentId: T:eDIA.Constants.Languages
  Global.Singleton`1:
    name:
      CSharp:
      - id: Global.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Singleton
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Singleton
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Global.Singleton`1
  Global.Singleton{eDIA.Experiment}:
    name:
      CSharp:
      - id: Global.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Singleton
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: eDIA.Experiment
        name: Experiment
        nameWithType: Experiment
        qualifiedName: eDIA.Experiment
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Singleton
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: eDIA.Experiment
        name: Experiment
        nameWithType: Experiment
        qualifiedName: eDIA.Experiment
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Singleton`1
    commentId: T:Global.Singleton{eDIA.Experiment}
  Global.Color:
    name:
      CSharp:
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      VB:
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
    isDefinition: true
  System.Collections.Generic.List{eDIA.TaskBlock}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: eDIA.TaskBlock
        name: TaskBlock
        nameWithType: TaskBlock
        qualifiedName: eDIA.TaskBlock
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: eDIA.TaskBlock
        name: TaskBlock
        nameWithType: TaskBlock
        qualifiedName: eDIA.TaskBlock
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{eDIA.TaskBlock}
  Global.UnityEvent:
    name:
      CSharp:
      - id: Global.UnityEvent
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      VB:
      - id: Global.UnityEvent
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
    isDefinition: true
  eDIA.ExperimentConfig:
    name:
      CSharp:
      - id: eDIA.ExperimentConfig
        name: ExperimentConfig
        nameWithType: ExperimentConfig
        qualifiedName: eDIA.ExperimentConfig
      VB:
      - id: eDIA.ExperimentConfig
        name: ExperimentConfig
        nameWithType: ExperimentConfig
        qualifiedName: eDIA.ExperimentConfig
    isDefinition: true
    parent: eDIA
    commentId: T:eDIA.ExperimentConfig
  eDIA.TaskConfig:
    name:
      CSharp:
      - id: eDIA.TaskConfig
        name: TaskConfig
        nameWithType: TaskConfig
        qualifiedName: eDIA.TaskConfig
      VB:
      - id: eDIA.TaskConfig
        name: TaskConfig
        nameWithType: TaskConfig
        qualifiedName: eDIA.TaskConfig
    isDefinition: true
    parent: eDIA
    commentId: T:eDIA.TaskConfig
  eDIA.Experiment.StartExperiment*:
    name:
      CSharp:
      - id: eDIA.Experiment.StartExperiment*
        name: StartExperiment
        nameWithType: Experiment.StartExperiment
        qualifiedName: eDIA.Experiment.StartExperiment
      VB:
      - id: eDIA.Experiment.StartExperiment*
        name: StartExperiment
        nameWithType: Experiment.StartExperiment
        qualifiedName: eDIA.Experiment.StartExperiment
    isDefinition: true
    commentId: Overload:eDIA.Experiment.StartExperiment
  eDIA.Experiment.EnablePauseButton*:
    name:
      CSharp:
      - id: eDIA.Experiment.EnablePauseButton*
        name: EnablePauseButton
        nameWithType: Experiment.EnablePauseButton
        qualifiedName: eDIA.Experiment.EnablePauseButton
      VB:
      - id: eDIA.Experiment.EnablePauseButton*
        name: EnablePauseButton
        nameWithType: Experiment.EnablePauseButton
        qualifiedName: eDIA.Experiment.EnablePauseButton
    isDefinition: true
    commentId: Overload:eDIA.Experiment.EnablePauseButton
  eDIA.Experiment.WaitOnProceed*:
    name:
      CSharp:
      - id: eDIA.Experiment.WaitOnProceed*
        name: WaitOnProceed
        nameWithType: Experiment.WaitOnProceed
        qualifiedName: eDIA.Experiment.WaitOnProceed
      VB:
      - id: eDIA.Experiment.WaitOnProceed*
        name: WaitOnProceed
        nameWithType: Experiment.WaitOnProceed
        qualifiedName: eDIA.Experiment.WaitOnProceed
    isDefinition: true
    commentId: Overload:eDIA.Experiment.WaitOnProceed
  eDIA.Experiment.EnableEyeCalibrationTrigger*:
    name:
      CSharp:
      - id: eDIA.Experiment.EnableEyeCalibrationTrigger*
        name: EnableEyeCalibrationTrigger
        nameWithType: Experiment.EnableEyeCalibrationTrigger
        qualifiedName: eDIA.Experiment.EnableEyeCalibrationTrigger
      VB:
      - id: eDIA.Experiment.EnableEyeCalibrationTrigger*
        name: EnableEyeCalibrationTrigger
        nameWithType: Experiment.EnableEyeCalibrationTrigger
        qualifiedName: eDIA.Experiment.EnableEyeCalibrationTrigger
    isDefinition: true
    commentId: Overload:eDIA.Experiment.EnableEyeCalibrationTrigger
  eDIA.Experiment.AddToTrialResults*:
    name:
      CSharp:
      - id: eDIA.Experiment.AddToTrialResults*
        name: AddToTrialResults
        nameWithType: Experiment.AddToTrialResults
        qualifiedName: eDIA.Experiment.AddToTrialResults
      VB:
      - id: eDIA.Experiment.AddToTrialResults*
        name: AddToTrialResults
        nameWithType: Experiment.AddToTrialResults
        qualifiedName: eDIA.Experiment.AddToTrialResults
    isDefinition: true
    commentId: Overload:eDIA.Experiment.AddToTrialResults
  eDIA.Experiment.NextStepWithDelay*:
    name:
      CSharp:
      - id: eDIA.Experiment.NextStepWithDelay*
        name: NextStepWithDelay
        nameWithType: Experiment.NextStepWithDelay
        qualifiedName: eDIA.Experiment.NextStepWithDelay
      VB:
      - id: eDIA.Experiment.NextStepWithDelay*
        name: NextStepWithDelay
        nameWithType: Experiment.NextStepWithDelay
        qualifiedName: eDIA.Experiment.NextStepWithDelay
    isDefinition: true
    commentId: Overload:eDIA.Experiment.NextStepWithDelay
  eDIA.Experiment.NextStep*:
    name:
      CSharp:
      - id: eDIA.Experiment.NextStep*
        name: NextStep
        nameWithType: Experiment.NextStep
        qualifiedName: eDIA.Experiment.NextStep
      VB:
      - id: eDIA.Experiment.NextStep*
        name: NextStep
        nameWithType: Experiment.NextStep
        qualifiedName: eDIA.Experiment.NextStep
    isDefinition: true
    commentId: Overload:eDIA.Experiment.NextStep
  System.Collections.Generic.List{System.String[]}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.String[]}
  eDIA.Experiment.ConvertAndSaveDataToUXF*:
    name:
      CSharp:
      - id: eDIA.Experiment.ConvertAndSaveDataToUXF*
        name: ConvertAndSaveDataToUXF
        nameWithType: Experiment.ConvertAndSaveDataToUXF
        qualifiedName: eDIA.Experiment.ConvertAndSaveDataToUXF
      VB:
      - id: eDIA.Experiment.ConvertAndSaveDataToUXF*
        name: ConvertAndSaveDataToUXF
        nameWithType: Experiment.ConvertAndSaveDataToUXF
        qualifiedName: eDIA.Experiment.ConvertAndSaveDataToUXF
    isDefinition: true
    commentId: Overload:eDIA.Experiment.ConvertAndSaveDataToUXF
  System.Collections.Generic.List{System.Int32}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Int32}
  eDIA.Experiment.SendMarker*:
    name:
      CSharp:
      - id: eDIA.Experiment.SendMarker*
        name: SendMarker
        nameWithType: Experiment.SendMarker
        qualifiedName: eDIA.Experiment.SendMarker
      VB:
      - id: eDIA.Experiment.SendMarker*
        name: SendMarker
        nameWithType: Experiment.SendMarker
        qualifiedName: eDIA.Experiment.SendMarker
    isDefinition: true
    commentId: Overload:eDIA.Experiment.SendMarker
  eDIA.Experiment:
    name:
      CSharp:
      - id: eDIA.Experiment
        name: Experiment
        nameWithType: Experiment
        qualifiedName: eDIA.Experiment
      VB:
      - id: eDIA.Experiment
        name: Experiment
        nameWithType: Experiment
        qualifiedName: eDIA.Experiment
    isDefinition: true
    commentId: T:eDIA.Experiment
  eDIA.SettingsTuple:
    name:
      CSharp:
      - id: eDIA.SettingsTuple
        name: SettingsTuple
        nameWithType: SettingsTuple
        qualifiedName: eDIA.SettingsTuple
      VB:
      - id: eDIA.SettingsTuple
        name: SettingsTuple
        nameWithType: SettingsTuple
        qualifiedName: eDIA.SettingsTuple
    isDefinition: true
    commentId: T:eDIA.SettingsTuple
  System.Collections.Generic.List{System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.String}
  eDIA.ValueList:
    name:
      CSharp:
      - id: eDIA.ValueList
        name: ValueList
        nameWithType: ValueList
        qualifiedName: eDIA.ValueList
      VB:
      - id: eDIA.ValueList
        name: ValueList
        nameWithType: ValueList
        qualifiedName: eDIA.ValueList
    isDefinition: true
    commentId: T:eDIA.ValueList
  System.Collections.Generic.List{eDIA.ValueList}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: eDIA.ValueList
        name: ValueList
        nameWithType: ValueList
        qualifiedName: eDIA.ValueList
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: eDIA.ValueList
        name: ValueList
        nameWithType: ValueList
        qualifiedName: eDIA.ValueList
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{eDIA.ValueList}
  eDIA.TrialSettings:
    name:
      CSharp:
      - id: eDIA.TrialSettings
        name: TrialSettings
        nameWithType: TrialSettings
        qualifiedName: eDIA.TrialSettings
      VB:
      - id: eDIA.TrialSettings
        name: TrialSettings
        nameWithType: TrialSettings
        qualifiedName: eDIA.TrialSettings
    isDefinition: true
    parent: eDIA
    commentId: T:eDIA.TrialSettings
  System.Collections.Generic.List{eDIA.SettingsTuple}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: eDIA.SettingsTuple
        name: SettingsTuple
        nameWithType: SettingsTuple
        qualifiedName: eDIA.SettingsTuple
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: eDIA.SettingsTuple
        name: SettingsTuple
        nameWithType: SettingsTuple
        qualifiedName: eDIA.SettingsTuple
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{eDIA.SettingsTuple}
  eDIA.ExperimentBlock:
    name:
      CSharp:
      - id: eDIA.ExperimentBlock
        name: ExperimentBlock
        nameWithType: ExperimentBlock
        qualifiedName: eDIA.ExperimentBlock
      VB:
      - id: eDIA.ExperimentBlock
        name: ExperimentBlock
        nameWithType: ExperimentBlock
        qualifiedName: eDIA.ExperimentBlock
    isDefinition: true
    commentId: T:eDIA.ExperimentBlock
  eDIA.ExperimentConfig.GetExperimentSummary*:
    name:
      CSharp:
      - id: eDIA.ExperimentConfig.GetExperimentSummary*
        name: GetExperimentSummary
        nameWithType: ExperimentConfig.GetExperimentSummary
        qualifiedName: eDIA.ExperimentConfig.GetExperimentSummary
      VB:
      - id: eDIA.ExperimentConfig.GetExperimentSummary*
        name: GetExperimentSummary
        nameWithType: ExperimentConfig.GetExperimentSummary
        qualifiedName: eDIA.ExperimentConfig.GetExperimentSummary
    isDefinition: true
    commentId: Overload:eDIA.ExperimentConfig.GetExperimentSummary
  eDIA.ExperimentConfig.GetParticipantID*:
    name:
      CSharp:
      - id: eDIA.ExperimentConfig.GetParticipantID*
        name: GetParticipantID
        nameWithType: ExperimentConfig.GetParticipantID
        qualifiedName: eDIA.ExperimentConfig.GetParticipantID
      VB:
      - id: eDIA.ExperimentConfig.GetParticipantID*
        name: GetParticipantID
        nameWithType: ExperimentConfig.GetParticipantID
        qualifiedName: eDIA.ExperimentConfig.GetParticipantID
    isDefinition: true
    commentId: Overload:eDIA.ExperimentConfig.GetParticipantID
  System.Collections.Generic.Dictionary`2:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.Dictionary`2
  System.Collections.Generic.Dictionary{System.String,System.Object}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  eDIA.ExperimentConfig.GetParticipantDetailsAsDict*:
    name:
      CSharp:
      - id: eDIA.ExperimentConfig.GetParticipantDetailsAsDict*
        name: GetParticipantDetailsAsDict
        nameWithType: ExperimentConfig.GetParticipantDetailsAsDict
        qualifiedName: eDIA.ExperimentConfig.GetParticipantDetailsAsDict
      VB:
      - id: eDIA.ExperimentConfig.GetParticipantDetailsAsDict*
        name: GetParticipantDetailsAsDict
        nameWithType: ExperimentConfig.GetParticipantDetailsAsDict
        qualifiedName: eDIA.ExperimentConfig.GetParticipantDetailsAsDict
    isDefinition: true
    commentId: Overload:eDIA.ExperimentConfig.GetParticipantDetailsAsDict
  System.Collections.Generic.List{eDIA.ExperimentBlock}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: eDIA.ExperimentBlock
        name: ExperimentBlock
        nameWithType: ExperimentBlock
        qualifiedName: eDIA.ExperimentBlock
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: eDIA.ExperimentBlock
        name: ExperimentBlock
        nameWithType: ExperimentBlock
        qualifiedName: eDIA.ExperimentBlock
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{eDIA.ExperimentBlock}
  eDIA.TaskConfig.GetTaskSettingsAsDict*:
    name:
      CSharp:
      - id: eDIA.TaskConfig.GetTaskSettingsAsDict*
        name: GetTaskSettingsAsDict
        nameWithType: TaskConfig.GetTaskSettingsAsDict
        qualifiedName: eDIA.TaskConfig.GetTaskSettingsAsDict
      VB:
      - id: eDIA.TaskConfig.GetTaskSettingsAsDict*
        name: GetTaskSettingsAsDict
        nameWithType: TaskConfig.GetTaskSettingsAsDict
        qualifiedName: eDIA.TaskConfig.GetTaskSettingsAsDict
    isDefinition: true
    commentId: Overload:eDIA.TaskConfig.GetTaskSettingsAsDict
  eDIA.TaskConfig.GenerateUXFSequence*:
    name:
      CSharp:
      - id: eDIA.TaskConfig.GenerateUXFSequence*
        name: GenerateUXFSequence
        nameWithType: TaskConfig.GenerateUXFSequence
        qualifiedName: eDIA.TaskConfig.GenerateUXFSequence
      VB:
      - id: eDIA.TaskConfig.GenerateUXFSequence*
        name: GenerateUXFSequence
        nameWithType: TaskConfig.GenerateUXFSequence
        qualifiedName: eDIA.TaskConfig.GenerateUXFSequence
    isDefinition: true
    commentId: Overload:eDIA.TaskConfig.GenerateUXFSequence
  eDIA.Helpers.GetSettingsTupleListAsDict*:
    name:
      CSharp:
      - id: eDIA.Helpers.GetSettingsTupleListAsDict*
        name: GetSettingsTupleListAsDict
        nameWithType: Helpers.GetSettingsTupleListAsDict
        qualifiedName: eDIA.Helpers.GetSettingsTupleListAsDict
      VB:
      - id: eDIA.Helpers.GetSettingsTupleListAsDict*
        name: GetSettingsTupleListAsDict
        nameWithType: Helpers.GetSettingsTupleListAsDict
        qualifiedName: eDIA.Helpers.GetSettingsTupleListAsDict
    isDefinition: true
    commentId: Overload:eDIA.Helpers.GetSettingsTupleListAsDict
  eDIA.Helpers:
    name:
      CSharp:
      - id: eDIA.Helpers
        name: Helpers
        nameWithType: Helpers
        qualifiedName: eDIA.Helpers
      VB:
      - id: eDIA.Helpers
        name: Helpers
        nameWithType: Helpers
        qualifiedName: eDIA.Helpers
    isDefinition: true
    commentId: T:eDIA.Helpers
  System.Action:
    name:
      CSharp:
      - id: System.Action
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      VB:
      - id: System.Action
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Action
  eDIA.TrialStep.#ctor*:
    name:
      CSharp:
      - id: eDIA.TrialStep.#ctor*
        name: TrialStep
        nameWithType: TrialStep.TrialStep
        qualifiedName: eDIA.TrialStep.TrialStep
      VB:
      - id: eDIA.TrialStep.#ctor*
        name: TrialStep
        nameWithType: TrialStep.TrialStep
        qualifiedName: eDIA.TrialStep.TrialStep
    isDefinition: true
    commentId: Overload:eDIA.TrialStep.#ctor
  eDIA.TrialStep:
    name:
      CSharp:
      - id: eDIA.TrialStep
        name: TrialStep
        nameWithType: TrialStep
        qualifiedName: eDIA.TrialStep
      VB:
      - id: eDIA.TrialStep
        name: TrialStep
        nameWithType: TrialStep
        qualifiedName: eDIA.TrialStep
    isDefinition: true
    commentId: T:eDIA.TrialStep
  eDIA.SettingsDeclaration:
    name:
      CSharp:
      - id: eDIA.SettingsDeclaration
        name: SettingsDeclaration
        nameWithType: SettingsDeclaration
        qualifiedName: eDIA.SettingsDeclaration
      VB:
      - id: eDIA.SettingsDeclaration
        name: SettingsDeclaration
        nameWithType: SettingsDeclaration
        qualifiedName: eDIA.SettingsDeclaration
    isDefinition: true
    parent: eDIA
    commentId: T:eDIA.SettingsDeclaration
  Global.Singleton{eDIA.MessagePanelInVR}:
    name:
      CSharp:
      - id: Global.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Singleton
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: eDIA.MessagePanelInVR
        name: MessagePanelInVR
        nameWithType: MessagePanelInVR
        qualifiedName: eDIA.MessagePanelInVR
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Singleton
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: eDIA.MessagePanelInVR
        name: MessagePanelInVR
        nameWithType: MessagePanelInVR
        qualifiedName: eDIA.MessagePanelInVR
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Singleton`1
    commentId: T:Global.Singleton{eDIA.MessagePanelInVR}
  Global.TextMeshProUGUI:
    name:
      CSharp:
      - id: Global.TextMeshProUGUI
        name: TextMeshProUGUI
        nameWithType: TextMeshProUGUI
        qualifiedName: TextMeshProUGUI
        isExternal: true
      VB:
      - id: Global.TextMeshProUGUI
        name: TextMeshProUGUI
        nameWithType: TextMeshProUGUI
        qualifiedName: TextMeshProUGUI
        isExternal: true
    isDefinition: true
  Global.Button:
    name:
      CSharp:
      - id: Global.Button
        name: Button
        nameWithType: Button
        qualifiedName: Button
        isExternal: true
      VB:
      - id: Global.Button
        name: Button
        nameWithType: Button
        qualifiedName: Button
        isExternal: true
    isDefinition: true
  Global.GameObject:
    name:
      CSharp:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      VB:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
    isDefinition: true
  eDIA.MessagePanelInVR.ShowMessage*:
    name:
      CSharp:
      - id: eDIA.MessagePanelInVR.ShowMessage*
        name: ShowMessage
        nameWithType: MessagePanelInVR.ShowMessage
        qualifiedName: eDIA.MessagePanelInVR.ShowMessage
      VB:
      - id: eDIA.MessagePanelInVR.ShowMessage*
        name: ShowMessage
        nameWithType: MessagePanelInVR.ShowMessage
        qualifiedName: eDIA.MessagePanelInVR.ShowMessage
    isDefinition: true
    commentId: Overload:eDIA.MessagePanelInVR.ShowMessage
  eDIA.MessagePanelInVR.HidePanel*:
    name:
      CSharp:
      - id: eDIA.MessagePanelInVR.HidePanel*
        name: HidePanel
        nameWithType: MessagePanelInVR.HidePanel
        qualifiedName: eDIA.MessagePanelInVR.HidePanel
      VB:
      - id: eDIA.MessagePanelInVR.HidePanel*
        name: HidePanel
        nameWithType: MessagePanelInVR.HidePanel
        qualifiedName: eDIA.MessagePanelInVR.HidePanel
    isDefinition: true
    commentId: Overload:eDIA.MessagePanelInVR.HidePanel
  eDIA.MessagePanelInVR.BtnPressed*:
    name:
      CSharp:
      - id: eDIA.MessagePanelInVR.BtnPressed*
        name: BtnPressed
        nameWithType: MessagePanelInVR.BtnPressed
        qualifiedName: eDIA.MessagePanelInVR.BtnPressed
      VB:
      - id: eDIA.MessagePanelInVR.BtnPressed*
        name: BtnPressed
        nameWithType: MessagePanelInVR.BtnPressed
        qualifiedName: eDIA.MessagePanelInVR.BtnPressed
    isDefinition: true
    commentId: Overload:eDIA.MessagePanelInVR.BtnPressed
  eDIA.MessagePanelInVR:
    name:
      CSharp:
      - id: eDIA.MessagePanelInVR
        name: MessagePanelInVR
        nameWithType: MessagePanelInVR
        qualifiedName: eDIA.MessagePanelInVR
      VB:
      - id: eDIA.MessagePanelInVR
        name: MessagePanelInVR
        nameWithType: MessagePanelInVR
        qualifiedName: eDIA.MessagePanelInVR
    isDefinition: true
    commentId: T:eDIA.MessagePanelInVR
  eDIA.SystemSettings.InitSystemSettings*:
    name:
      CSharp:
      - id: eDIA.SystemSettings.InitSystemSettings*
        name: InitSystemSettings
        nameWithType: SystemSettings.InitSystemSettings
        qualifiedName: eDIA.SystemSettings.InitSystemSettings
      VB:
      - id: eDIA.SystemSettings.InitSystemSettings*
        name: InitSystemSettings
        nameWithType: SystemSettings.InitSystemSettings
        qualifiedName: eDIA.SystemSettings.InitSystemSettings
    isDefinition: true
    commentId: Overload:eDIA.SystemSettings.InitSystemSettings
  eDIA.SystemSettings.OnEvUpdateSystemSettings*:
    name:
      CSharp:
      - id: eDIA.SystemSettings.OnEvUpdateSystemSettings*
        name: OnEvUpdateSystemSettings
        nameWithType: SystemSettings.OnEvUpdateSystemSettings
        qualifiedName: eDIA.SystemSettings.OnEvUpdateSystemSettings
      VB:
      - id: eDIA.SystemSettings.OnEvUpdateSystemSettings*
        name: OnEvUpdateSystemSettings
        nameWithType: SystemSettings.OnEvUpdateSystemSettings
        qualifiedName: eDIA.SystemSettings.OnEvUpdateSystemSettings
    isDefinition: true
    commentId: Overload:eDIA.SystemSettings.OnEvUpdateSystemSettings
  eDIA.SystemSettings.GetSettingsAsJSONstring*:
    name:
      CSharp:
      - id: eDIA.SystemSettings.GetSettingsAsJSONstring*
        name: GetSettingsAsJSONstring
        nameWithType: SystemSettings.GetSettingsAsJSONstring
        qualifiedName: eDIA.SystemSettings.GetSettingsAsJSONstring
      VB:
      - id: eDIA.SystemSettings.GetSettingsAsJSONstring*
        name: GetSettingsAsJSONstring
        nameWithType: SystemSettings.GetSettingsAsJSONstring
        qualifiedName: eDIA.SystemSettings.GetSettingsAsJSONstring
    isDefinition: true
    commentId: Overload:eDIA.SystemSettings.GetSettingsAsJSONstring
  eDIA.SystemSettings:
    name:
      CSharp:
      - id: eDIA.SystemSettings
        name: SystemSettings
        nameWithType: SystemSettings
        qualifiedName: eDIA.SystemSettings
      VB:
      - id: eDIA.SystemSettings
        name: SystemSettings
        nameWithType: SystemSettings
        qualifiedName: eDIA.SystemSettings
    isDefinition: true
    commentId: T:eDIA.SystemSettings
  System.Collections.Generic.List{System.Action}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Action
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Action
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Action}
  eDIA.TaskBlock.AddToTrialSequence*:
    name:
      CSharp:
      - id: eDIA.TaskBlock.AddToTrialSequence*
        name: AddToTrialSequence
        nameWithType: TaskBlock.AddToTrialSequence
        qualifiedName: eDIA.TaskBlock.AddToTrialSequence
      VB:
      - id: eDIA.TaskBlock.AddToTrialSequence*
        name: AddToTrialSequence
        nameWithType: TaskBlock.AddToTrialSequence
        qualifiedName: eDIA.TaskBlock.AddToTrialSequence
    isDefinition: true
    commentId: Overload:eDIA.TaskBlock.AddToTrialSequence
  eDIA.TaskBlock.OnBlockStart*:
    name:
      CSharp:
      - id: eDIA.TaskBlock.OnBlockStart*
        name: OnBlockStart
        nameWithType: TaskBlock.OnBlockStart
        qualifiedName: eDIA.TaskBlock.OnBlockStart
      VB:
      - id: eDIA.TaskBlock.OnBlockStart*
        name: OnBlockStart
        nameWithType: TaskBlock.OnBlockStart
        qualifiedName: eDIA.TaskBlock.OnBlockStart
    isDefinition: true
    commentId: Overload:eDIA.TaskBlock.OnBlockStart
  eDIA.TaskBlock.OnStartTrial*:
    name:
      CSharp:
      - id: eDIA.TaskBlock.OnStartTrial*
        name: OnStartTrial
        nameWithType: TaskBlock.OnStartTrial
        qualifiedName: eDIA.TaskBlock.OnStartTrial
      VB:
      - id: eDIA.TaskBlock.OnStartTrial*
        name: OnStartTrial
        nameWithType: TaskBlock.OnStartTrial
        qualifiedName: eDIA.TaskBlock.OnStartTrial
    isDefinition: true
    commentId: Overload:eDIA.TaskBlock.OnStartTrial
  eDIA.TaskBlock.OnEndTrial*:
    name:
      CSharp:
      - id: eDIA.TaskBlock.OnEndTrial*
        name: OnEndTrial
        nameWithType: TaskBlock.OnEndTrial
        qualifiedName: eDIA.TaskBlock.OnEndTrial
      VB:
      - id: eDIA.TaskBlock.OnEndTrial*
        name: OnEndTrial
        nameWithType: TaskBlock.OnEndTrial
        qualifiedName: eDIA.TaskBlock.OnEndTrial
    isDefinition: true
    commentId: Overload:eDIA.TaskBlock.OnEndTrial
  eDIA.TaskBlock.OnBetweenSteps*:
    name:
      CSharp:
      - id: eDIA.TaskBlock.OnBetweenSteps*
        name: OnBetweenSteps
        nameWithType: TaskBlock.OnBetweenSteps
        qualifiedName: eDIA.TaskBlock.OnBetweenSteps
      VB:
      - id: eDIA.TaskBlock.OnBetweenSteps*
        name: OnBetweenSteps
        nameWithType: TaskBlock.OnBetweenSteps
        qualifiedName: eDIA.TaskBlock.OnBetweenSteps
    isDefinition: true
    commentId: Overload:eDIA.TaskBlock.OnBetweenSteps
  eDIA.TaskBlock.OnBlockEnd*:
    name:
      CSharp:
      - id: eDIA.TaskBlock.OnBlockEnd*
        name: OnBlockEnd
        nameWithType: TaskBlock.OnBlockEnd
        qualifiedName: eDIA.TaskBlock.OnBlockEnd
      VB:
      - id: eDIA.TaskBlock.OnBlockEnd*
        name: OnBlockEnd
        nameWithType: TaskBlock.OnBlockEnd
        qualifiedName: eDIA.TaskBlock.OnBlockEnd
    isDefinition: true
    commentId: Overload:eDIA.TaskBlock.OnBlockEnd
  eDIA.TaskBlock:
    name:
      CSharp:
      - id: eDIA.TaskBlock
        name: TaskBlock
        nameWithType: TaskBlock
        qualifiedName: eDIA.TaskBlock
      VB:
      - id: eDIA.TaskBlock
        name: TaskBlock
        nameWithType: TaskBlock
        qualifiedName: eDIA.TaskBlock
    isDefinition: true
    commentId: T:eDIA.TaskBlock
  System.Collections.Generic.List{eDIA.XRControllerInputRemapper.ControllerInputRemap}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: eDIA.XRControllerInputRemapper.ControllerInputRemap
        name: XRControllerInputRemapper.ControllerInputRemap
        nameWithType: XRControllerInputRemapper.ControllerInputRemap
        qualifiedName: eDIA.XRControllerInputRemapper.ControllerInputRemap
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: eDIA.XRControllerInputRemapper.ControllerInputRemap
        name: XRControllerInputRemapper.ControllerInputRemap
        nameWithType: XRControllerInputRemapper.ControllerInputRemap
        qualifiedName: eDIA.XRControllerInputRemapper.ControllerInputRemap
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{eDIA.XRControllerInputRemapper.ControllerInputRemap}
  eDIA.XRControllerInputRemapper.GetControllerRemappings*:
    name:
      CSharp:
      - id: eDIA.XRControllerInputRemapper.GetControllerRemappings*
        name: GetControllerRemappings
        nameWithType: XRControllerInputRemapper.GetControllerRemappings
        qualifiedName: eDIA.XRControllerInputRemapper.GetControllerRemappings
      VB:
      - id: eDIA.XRControllerInputRemapper.GetControllerRemappings*
        name: GetControllerRemappings
        nameWithType: XRControllerInputRemapper.GetControllerRemappings
        qualifiedName: eDIA.XRControllerInputRemapper.GetControllerRemappings
    isDefinition: true
    commentId: Overload:eDIA.XRControllerInputRemapper.GetControllerRemappings
  eDIA.XRControllerInputRemapper.EnableRemapping*:
    name:
      CSharp:
      - id: eDIA.XRControllerInputRemapper.EnableRemapping*
        name: EnableRemapping
        nameWithType: XRControllerInputRemapper.EnableRemapping
        qualifiedName: eDIA.XRControllerInputRemapper.EnableRemapping
      VB:
      - id: eDIA.XRControllerInputRemapper.EnableRemapping*
        name: EnableRemapping
        nameWithType: XRControllerInputRemapper.EnableRemapping
        qualifiedName: eDIA.XRControllerInputRemapper.EnableRemapping
    isDefinition: true
    commentId: Overload:eDIA.XRControllerInputRemapper.EnableRemapping
  eDIA.XRControllerInputRemapper:
    name:
      CSharp:
      - id: eDIA.XRControllerInputRemapper
        name: XRControllerInputRemapper
        nameWithType: XRControllerInputRemapper
        qualifiedName: eDIA.XRControllerInputRemapper
      VB:
      - id: eDIA.XRControllerInputRemapper
        name: XRControllerInputRemapper
        nameWithType: XRControllerInputRemapper
        qualifiedName: eDIA.XRControllerInputRemapper
    isDefinition: true
    commentId: T:eDIA.XRControllerInputRemapper
  Global.InputActionReference:
    name:
      CSharp:
      - id: Global.InputActionReference
        name: InputActionReference
        nameWithType: InputActionReference
        qualifiedName: InputActionReference
        isExternal: true
      VB:
      - id: Global.InputActionReference
        name: InputActionReference
        nameWithType: InputActionReference
        qualifiedName: InputActionReference
        isExternal: true
    isDefinition: true
    commentId: '!:Global.InputActionReference'
  Global.UnityEvent`1:
    name:
      CSharp:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.UnityEvent`1'
  Global.UnityEvent{InputAction.CallbackContext}:
    name:
      CSharp:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.InputAction.CallbackContext
        name: InputAction.CallbackContext
        nameWithType: InputAction.CallbackContext
        qualifiedName: InputAction.CallbackContext
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.InputAction.CallbackContext
        name: InputAction.CallbackContext
        nameWithType: InputAction.CallbackContext
        qualifiedName: InputAction.CallbackContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityEvent`1
    commentId: '!:Global.UnityEvent{InputAction.CallbackContext}'
  eDIA.XRControllerInputRemapper.ControllerInputRemap:
    name:
      CSharp:
      - id: eDIA.XRControllerInputRemapper.ControllerInputRemap
        name: XRControllerInputRemapper.ControllerInputRemap
        nameWithType: XRControllerInputRemapper.ControllerInputRemap
        qualifiedName: eDIA.XRControllerInputRemapper.ControllerInputRemap
      VB:
      - id: eDIA.XRControllerInputRemapper.ControllerInputRemap
        name: XRControllerInputRemapper.ControllerInputRemap
        nameWithType: XRControllerInputRemapper.ControllerInputRemap
        qualifiedName: eDIA.XRControllerInputRemapper.ControllerInputRemap
    isDefinition: true
    commentId: T:eDIA.XRControllerInputRemapper.ControllerInputRemap
  eDIA.InputActionHandler.SetActionMapName*:
    name:
      CSharp:
      - id: eDIA.InputActionHandler.SetActionMapName*
        name: SetActionMapName
        nameWithType: InputActionHandler.SetActionMapName
        qualifiedName: eDIA.InputActionHandler.SetActionMapName
      VB:
      - id: eDIA.InputActionHandler.SetActionMapName*
        name: SetActionMapName
        nameWithType: InputActionHandler.SetActionMapName
        qualifiedName: eDIA.InputActionHandler.SetActionMapName
    isDefinition: true
    commentId: Overload:eDIA.InputActionHandler.SetActionMapName
  Global.InputAction.CallbackContext:
    name:
      CSharp:
      - id: Global.InputAction.CallbackContext
        name: InputAction.CallbackContext
        nameWithType: InputAction.CallbackContext
        qualifiedName: InputAction.CallbackContext
        isExternal: true
      VB:
      - id: Global.InputAction.CallbackContext
        name: InputAction.CallbackContext
        nameWithType: InputAction.CallbackContext
        qualifiedName: InputAction.CallbackContext
        isExternal: true
    isDefinition: true
  eDIA.InputActionHandler.menuPerformed*:
    name:
      CSharp:
      - id: eDIA.InputActionHandler.menuPerformed*
        name: menuPerformed
        nameWithType: InputActionHandler.menuPerformed
        qualifiedName: eDIA.InputActionHandler.menuPerformed
      VB:
      - id: eDIA.InputActionHandler.menuPerformed*
        name: menuPerformed
        nameWithType: InputActionHandler.menuPerformed
        qualifiedName: eDIA.InputActionHandler.menuPerformed
    isDefinition: true
    commentId: Overload:eDIA.InputActionHandler.menuPerformed
  eDIA.InputActionHandler.proceedPerformed*:
    name:
      CSharp:
      - id: eDIA.InputActionHandler.proceedPerformed*
        name: proceedPerformed
        nameWithType: InputActionHandler.proceedPerformed
        qualifiedName: eDIA.InputActionHandler.proceedPerformed
      VB:
      - id: eDIA.InputActionHandler.proceedPerformed*
        name: proceedPerformed
        nameWithType: InputActionHandler.proceedPerformed
        qualifiedName: eDIA.InputActionHandler.proceedPerformed
    isDefinition: true
    commentId: Overload:eDIA.InputActionHandler.proceedPerformed
  eDIA.InputActionHandler.actionStartExperimentPerformed*:
    name:
      CSharp:
      - id: eDIA.InputActionHandler.actionStartExperimentPerformed*
        name: actionStartExperimentPerformed
        nameWithType: InputActionHandler.actionStartExperimentPerformed
        qualifiedName: eDIA.InputActionHandler.actionStartExperimentPerformed
      VB:
      - id: eDIA.InputActionHandler.actionStartExperimentPerformed*
        name: actionStartExperimentPerformed
        nameWithType: InputActionHandler.actionStartExperimentPerformed
        qualifiedName: eDIA.InputActionHandler.actionStartExperimentPerformed
    isDefinition: true
    commentId: Overload:eDIA.InputActionHandler.actionStartExperimentPerformed
  eDIA.InputActionHandler.actionPauseExperimentPerformed*:
    name:
      CSharp:
      - id: eDIA.InputActionHandler.actionPauseExperimentPerformed*
        name: actionPauseExperimentPerformed
        nameWithType: InputActionHandler.actionPauseExperimentPerformed
        qualifiedName: eDIA.InputActionHandler.actionPauseExperimentPerformed
      VB:
      - id: eDIA.InputActionHandler.actionPauseExperimentPerformed*
        name: actionPauseExperimentPerformed
        nameWithType: InputActionHandler.actionPauseExperimentPerformed
        qualifiedName: eDIA.InputActionHandler.actionPauseExperimentPerformed
    isDefinition: true
    commentId: Overload:eDIA.InputActionHandler.actionPauseExperimentPerformed
  eDIA.InputActionHandler:
    name:
      CSharp:
      - id: eDIA.InputActionHandler
        name: InputActionHandler
        nameWithType: InputActionHandler
        qualifiedName: eDIA.InputActionHandler
      VB:
      - id: eDIA.InputActionHandler
        name: InputActionHandler
        nameWithType: InputActionHandler
        qualifiedName: eDIA.InputActionHandler
    isDefinition: true
    commentId: T:eDIA.InputActionHandler
  eDIA.FileManager.GetAllFilenamesWithExtensionFrom*:
    name:
      CSharp:
      - id: eDIA.FileManager.GetAllFilenamesWithExtensionFrom*
        name: GetAllFilenamesWithExtensionFrom
        nameWithType: FileManager.GetAllFilenamesWithExtensionFrom
        qualifiedName: eDIA.FileManager.GetAllFilenamesWithExtensionFrom
      VB:
      - id: eDIA.FileManager.GetAllFilenamesWithExtensionFrom*
        name: GetAllFilenamesWithExtensionFrom
        nameWithType: FileManager.GetAllFilenamesWithExtensionFrom
        qualifiedName: eDIA.FileManager.GetAllFilenamesWithExtensionFrom
    isDefinition: true
    commentId: Overload:eDIA.FileManager.GetAllFilenamesWithExtensionFrom
  eDIA.FileManager.GetAllFilenamesFrom*:
    name:
      CSharp:
      - id: eDIA.FileManager.GetAllFilenamesFrom*
        name: GetAllFilenamesFrom
        nameWithType: FileManager.GetAllFilenamesFrom
        qualifiedName: eDIA.FileManager.GetAllFilenamesFrom
      VB:
      - id: eDIA.FileManager.GetAllFilenamesFrom*
        name: GetAllFilenamesFrom
        nameWithType: FileManager.GetAllFilenamesFrom
        qualifiedName: eDIA.FileManager.GetAllFilenamesFrom
    isDefinition: true
    commentId: Overload:eDIA.FileManager.GetAllFilenamesFrom
  eDIA.FileManager.GetAllSubFolders*:
    name:
      CSharp:
      - id: eDIA.FileManager.GetAllSubFolders*
        name: GetAllSubFolders
        nameWithType: FileManager.GetAllSubFolders
        qualifiedName: eDIA.FileManager.GetAllSubFolders
      VB:
      - id: eDIA.FileManager.GetAllSubFolders*
        name: GetAllSubFolders
        nameWithType: FileManager.GetAllSubFolders
        qualifiedName: eDIA.FileManager.GetAllSubFolders
    isDefinition: true
    commentId: Overload:eDIA.FileManager.GetAllSubFolders
  eDIA.FileManager.CopyDirectory*:
    name:
      CSharp:
      - id: eDIA.FileManager.CopyDirectory*
        name: CopyDirectory
        nameWithType: FileManager.CopyDirectory
        qualifiedName: eDIA.FileManager.CopyDirectory
      VB:
      - id: eDIA.FileManager.CopyDirectory*
        name: CopyDirectory
        nameWithType: FileManager.CopyDirectory
        qualifiedName: eDIA.FileManager.CopyDirectory
    isDefinition: true
    commentId: Overload:eDIA.FileManager.CopyDirectory
  Global.DirectoryInfo:
    name:
      CSharp:
      - id: Global.DirectoryInfo
        name: DirectoryInfo
        nameWithType: DirectoryInfo
        qualifiedName: DirectoryInfo
        isExternal: true
      VB:
      - id: Global.DirectoryInfo
        name: DirectoryInfo
        nameWithType: DirectoryInfo
        qualifiedName: DirectoryInfo
        isExternal: true
    isDefinition: true
  eDIA.FileManager.CopyAll*:
    name:
      CSharp:
      - id: eDIA.FileManager.CopyAll*
        name: CopyAll
        nameWithType: FileManager.CopyAll
        qualifiedName: eDIA.FileManager.CopyAll
      VB:
      - id: eDIA.FileManager.CopyAll*
        name: CopyAll
        nameWithType: FileManager.CopyAll
        qualifiedName: eDIA.FileManager.CopyAll
    isDefinition: true
    commentId: Overload:eDIA.FileManager.CopyAll
  eDIA.FileManager.ReadStringFromApplicationPathSubfolder*:
    name:
      CSharp:
      - id: eDIA.FileManager.ReadStringFromApplicationPathSubfolder*
        name: ReadStringFromApplicationPathSubfolder
        nameWithType: FileManager.ReadStringFromApplicationPathSubfolder
        qualifiedName: eDIA.FileManager.ReadStringFromApplicationPathSubfolder
      VB:
      - id: eDIA.FileManager.ReadStringFromApplicationPathSubfolder*
        name: ReadStringFromApplicationPathSubfolder
        nameWithType: FileManager.ReadStringFromApplicationPathSubfolder
        qualifiedName: eDIA.FileManager.ReadStringFromApplicationPathSubfolder
    isDefinition: true
    commentId: Overload:eDIA.FileManager.ReadStringFromApplicationPathSubfolder
  eDIA.FileManager.ReadStringFromApplicationPath*:
    name:
      CSharp:
      - id: eDIA.FileManager.ReadStringFromApplicationPath*
        name: ReadStringFromApplicationPath
        nameWithType: FileManager.ReadStringFromApplicationPath
        qualifiedName: eDIA.FileManager.ReadStringFromApplicationPath
      VB:
      - id: eDIA.FileManager.ReadStringFromApplicationPath*
        name: ReadStringFromApplicationPath
        nameWithType: FileManager.ReadStringFromApplicationPath
        qualifiedName: eDIA.FileManager.ReadStringFromApplicationPath
    isDefinition: true
    commentId: Overload:eDIA.FileManager.ReadStringFromApplicationPath
  eDIA.FileManager.FileExists*:
    name:
      CSharp:
      - id: eDIA.FileManager.FileExists*
        name: FileExists
        nameWithType: FileManager.FileExists
        qualifiedName: eDIA.FileManager.FileExists
      VB:
      - id: eDIA.FileManager.FileExists*
        name: FileExists
        nameWithType: FileManager.FileExists
        qualifiedName: eDIA.FileManager.FileExists
    isDefinition: true
    commentId: Overload:eDIA.FileManager.FileExists
  eDIA.FileManager.ReadString*:
    name:
      CSharp:
      - id: eDIA.FileManager.ReadString*
        name: ReadString
        nameWithType: FileManager.ReadString
        qualifiedName: eDIA.FileManager.ReadString
      VB:
      - id: eDIA.FileManager.ReadString*
        name: ReadString
        nameWithType: FileManager.ReadString
        qualifiedName: eDIA.FileManager.ReadString
    isDefinition: true
    commentId: Overload:eDIA.FileManager.ReadString
  eDIA.FileManager.CopyFileTo*:
    name:
      CSharp:
      - id: eDIA.FileManager.CopyFileTo*
        name: CopyFileTo
        nameWithType: FileManager.CopyFileTo
        qualifiedName: eDIA.FileManager.CopyFileTo
      VB:
      - id: eDIA.FileManager.CopyFileTo*
        name: CopyFileTo
        nameWithType: FileManager.CopyFileTo
        qualifiedName: eDIA.FileManager.CopyFileTo
    isDefinition: true
    commentId: Overload:eDIA.FileManager.CopyFileTo
  eDIA.FileManager.WriteString*:
    name:
      CSharp:
      - id: eDIA.FileManager.WriteString*
        name: WriteString
        nameWithType: FileManager.WriteString
        qualifiedName: eDIA.FileManager.WriteString
      VB:
      - id: eDIA.FileManager.WriteString*
        name: WriteString
        nameWithType: FileManager.WriteString
        qualifiedName: eDIA.FileManager.WriteString
    isDefinition: true
    commentId: Overload:eDIA.FileManager.WriteString
  eDIA.FileManager.CreateFolder*:
    name:
      CSharp:
      - id: eDIA.FileManager.CreateFolder*
        name: CreateFolder
        nameWithType: FileManager.CreateFolder
        qualifiedName: eDIA.FileManager.CreateFolder
      VB:
      - id: eDIA.FileManager.CreateFolder*
        name: CreateFolder
        nameWithType: FileManager.CreateFolder
        qualifiedName: eDIA.FileManager.CreateFolder
    isDefinition: true
    commentId: Overload:eDIA.FileManager.CreateFolder
  eDIA.FileManager:
    name:
      CSharp:
      - id: eDIA.FileManager
        name: FileManager
        nameWithType: FileManager
        qualifiedName: eDIA.FileManager
      VB:
      - id: eDIA.FileManager
        name: FileManager
        nameWithType: FileManager
        qualifiedName: eDIA.FileManager
    isDefinition: true
    commentId: T:eDIA.FileManager
  eDIA.NetworkComManager:
    name:
      CSharp:
      - id: eDIA.NetworkComManager
        name: NetworkComManager
        nameWithType: NetworkComManager
        qualifiedName: eDIA.NetworkComManager
      VB:
      - id: eDIA.NetworkComManager
        name: NetworkComManager
        nameWithType: NetworkComManager
        qualifiedName: eDIA.NetworkComManager
    isDefinition: true
    commentId: T:eDIA.NetworkComManager
  eDIA.NetworkManager:
    name:
      CSharp:
      - id: eDIA.NetworkManager
        name: NetworkManager
        nameWithType: NetworkManager
        qualifiedName: eDIA.NetworkManager
      VB:
      - id: eDIA.NetworkManager
        name: NetworkManager
        nameWithType: NetworkManager
        qualifiedName: eDIA.NetworkManager
    isDefinition: true
    commentId: T:eDIA.NetworkManager
  eDIA.LogUtilities.AddToLog*:
    name:
      CSharp:
      - id: eDIA.LogUtilities.AddToLog*
        name: AddToLog
        nameWithType: LogUtilities.AddToLog
        qualifiedName: eDIA.LogUtilities.AddToLog
      VB:
      - id: eDIA.LogUtilities.AddToLog*
        name: AddToLog
        nameWithType: LogUtilities.AddToLog
        qualifiedName: eDIA.LogUtilities.AddToLog
    isDefinition: true
    commentId: Overload:eDIA.LogUtilities.AddToLog
  eDIA.LogUtilities:
    name:
      CSharp:
      - id: eDIA.LogUtilities
        name: LogUtilities
        nameWithType: LogUtilities
        qualifiedName: eDIA.LogUtilities
      VB:
      - id: eDIA.LogUtilities
        name: LogUtilities
        nameWithType: LogUtilities
        qualifiedName: eDIA.LogUtilities
    isDefinition: true
    commentId: T:eDIA.LogUtilities
  Global.Camera:
    name:
      CSharp:
      - id: Global.Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Camera
        isExternal: true
      VB:
      - id: Global.Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Camera
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Camera'
  Global.RectTransform:
    name:
      CSharp:
      - id: Global.RectTransform
        name: RectTransform
        nameWithType: RectTransform
        qualifiedName: RectTransform
        isExternal: true
      VB:
      - id: Global.RectTransform
        name: RectTransform
        nameWithType: RectTransform
        qualifiedName: RectTransform
        isExternal: true
    isDefinition: true
    commentId: '!:Global.RectTransform'
  eDIA.MainMenu.OpenMenu*:
    name:
      CSharp:
      - id: eDIA.MainMenu.OpenMenu*
        name: OpenMenu
        nameWithType: MainMenu.OpenMenu
        qualifiedName: eDIA.MainMenu.OpenMenu
      VB:
      - id: eDIA.MainMenu.OpenMenu*
        name: OpenMenu
        nameWithType: MainMenu.OpenMenu
        qualifiedName: eDIA.MainMenu.OpenMenu
    isDefinition: true
    commentId: Overload:eDIA.MainMenu.OpenMenu
  eDIA.MainMenu:
    name:
      CSharp:
      - id: eDIA.MainMenu
        name: MainMenu
        nameWithType: MainMenu
        qualifiedName: eDIA.MainMenu
      VB:
      - id: eDIA.MainMenu
        name: MainMenu
        nameWithType: MainMenu
        qualifiedName: eDIA.MainMenu
    isDefinition: true
    commentId: T:eDIA.MainMenu
  eDIA.MainMenu.aScene.#ctor*:
    name:
      CSharp:
      - id: eDIA.MainMenu.aScene.#ctor*
        name: aScene
        nameWithType: MainMenu.aScene.aScene
        qualifiedName: eDIA.MainMenu.aScene.aScene
      VB:
      - id: eDIA.MainMenu.aScene.#ctor*
        name: aScene
        nameWithType: MainMenu.aScene.aScene
        qualifiedName: eDIA.MainMenu.aScene.aScene
    isDefinition: true
    commentId: Overload:eDIA.MainMenu.aScene.#ctor
  eDIA.MainMenu.aScene:
    name:
      CSharp:
      - id: eDIA.MainMenu.aScene
        name: MainMenu.aScene
        nameWithType: MainMenu.aScene
        qualifiedName: eDIA.MainMenu.aScene
      VB:
      - id: eDIA.MainMenu.aScene
        name: MainMenu.aScene
        nameWithType: MainMenu.aScene
        qualifiedName: eDIA.MainMenu.aScene
    isDefinition: true
    commentId: T:eDIA.MainMenu.aScene
  eDIA.XRController.EnableInteraction*:
    name:
      CSharp:
      - id: eDIA.XRController.EnableInteraction*
        name: EnableInteraction
        nameWithType: XRController.EnableInteraction
        qualifiedName: eDIA.XRController.EnableInteraction
      VB:
      - id: eDIA.XRController.EnableInteraction*
        name: EnableInteraction
        nameWithType: XRController.EnableInteraction
        qualifiedName: eDIA.XRController.EnableInteraction
    isDefinition: true
    commentId: Overload:eDIA.XRController.EnableInteraction
  eDIA.XRController.Show*:
    name:
      CSharp:
      - id: eDIA.XRController.Show*
        name: Show
        nameWithType: XRController.Show
        qualifiedName: eDIA.XRController.Show
      VB:
      - id: eDIA.XRController.Show*
        name: Show
        nameWithType: XRController.Show
        qualifiedName: eDIA.XRController.Show
    isDefinition: true
    commentId: Overload:eDIA.XRController.Show
  eDIA.XRController:
    name:
      CSharp:
      - id: eDIA.XRController
        name: XRController
        nameWithType: XRController
        qualifiedName: eDIA.XRController
      VB:
      - id: eDIA.XRController
        name: XRController
        nameWithType: XRController
        qualifiedName: eDIA.XRController
    isDefinition: true
    commentId: T:eDIA.XRController
  Global.Singleton{eDIA.XRManager}:
    name:
      CSharp:
      - id: Global.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Singleton
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: eDIA.XRManager
        name: XRManager
        nameWithType: XRManager
        qualifiedName: eDIA.XRManager
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Singleton
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: eDIA.XRManager
        name: XRManager
        nameWithType: XRManager
        qualifiedName: eDIA.XRManager
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Singleton`1
    commentId: T:Global.Singleton{eDIA.XRManager}
  eDIA.XRManager.TurnOnRayInteractor*:
    name:
      CSharp:
      - id: eDIA.XRManager.TurnOnRayInteractor*
        name: TurnOnRayInteractor
        nameWithType: XRManager.TurnOnRayInteractor
        qualifiedName: eDIA.XRManager.TurnOnRayInteractor
      VB:
      - id: eDIA.XRManager.TurnOnRayInteractor*
        name: TurnOnRayInteractor
        nameWithType: XRManager.TurnOnRayInteractor
        qualifiedName: eDIA.XRManager.TurnOnRayInteractor
    isDefinition: true
    commentId: Overload:eDIA.XRManager.TurnOnRayInteractor
  eDIA.XRManager.MovePlayarea*:
    name:
      CSharp:
      - id: eDIA.XRManager.MovePlayarea*
        name: MovePlayarea
        nameWithType: XRManager.MovePlayarea
        qualifiedName: eDIA.XRManager.MovePlayarea
      VB:
      - id: eDIA.XRManager.MovePlayarea*
        name: MovePlayarea
        nameWithType: XRManager.MovePlayarea
        qualifiedName: eDIA.XRManager.MovePlayarea
    isDefinition: true
    commentId: Overload:eDIA.XRManager.MovePlayarea
  eDIA.XRManager.EnableXRInteraction*:
    name:
      CSharp:
      - id: eDIA.XRManager.EnableXRInteraction*
        name: EnableXRInteraction
        nameWithType: XRManager.EnableXRInteraction
        qualifiedName: eDIA.XRManager.EnableXRInteraction
      VB:
      - id: eDIA.XRManager.EnableXRInteraction*
        name: EnableXRInteraction
        nameWithType: XRManager.EnableXRInteraction
        qualifiedName: eDIA.XRManager.EnableXRInteraction
    isDefinition: true
    commentId: Overload:eDIA.XRManager.EnableXRInteraction
  eDIA.XRManager.SetHandPose*:
    name:
      CSharp:
      - id: eDIA.XRManager.SetHandPose*
        name: SetHandPose
        nameWithType: XRManager.SetHandPose
        qualifiedName: eDIA.XRManager.SetHandPose
      VB:
      - id: eDIA.XRManager.SetHandPose*
        name: SetHandPose
        nameWithType: XRManager.SetHandPose
        qualifiedName: eDIA.XRManager.SetHandPose
    isDefinition: true
    commentId: Overload:eDIA.XRManager.SetHandPose
  eDIA.XRManager.EnableCustomHandPoses*:
    name:
      CSharp:
      - id: eDIA.XRManager.EnableCustomHandPoses*
        name: EnableCustomHandPoses
        nameWithType: XRManager.EnableCustomHandPoses
        qualifiedName: eDIA.XRManager.EnableCustomHandPoses
      VB:
      - id: eDIA.XRManager.EnableCustomHandPoses*
        name: EnableCustomHandPoses
        nameWithType: XRManager.EnableCustomHandPoses
        qualifiedName: eDIA.XRManager.EnableCustomHandPoses
    isDefinition: true
    commentId: Overload:eDIA.XRManager.EnableCustomHandPoses
  eDIA.XRManager.ShowHands*:
    name:
      CSharp:
      - id: eDIA.XRManager.ShowHands*
        name: ShowHands
        nameWithType: XRManager.ShowHands
        qualifiedName: eDIA.XRManager.ShowHands
      VB:
      - id: eDIA.XRManager.ShowHands*
        name: ShowHands
        nameWithType: XRManager.ShowHands
        qualifiedName: eDIA.XRManager.ShowHands
    isDefinition: true
    commentId: Overload:eDIA.XRManager.ShowHands
  eDIA.XRManager.AddToLog*:
    name:
      CSharp:
      - id: eDIA.XRManager.AddToLog*
        name: AddToLog
        nameWithType: XRManager.AddToLog
        qualifiedName: eDIA.XRManager.AddToLog
      VB:
      - id: eDIA.XRManager.AddToLog*
        name: AddToLog
        nameWithType: XRManager.AddToLog
        qualifiedName: eDIA.XRManager.AddToLog
    isDefinition: true
    commentId: Overload:eDIA.XRManager.AddToLog
  eDIA.XRManager:
    name:
      CSharp:
      - id: eDIA.XRManager
        name: XRManager
        nameWithType: XRManager
        qualifiedName: eDIA.XRManager
      VB:
      - id: eDIA.XRManager
        name: XRManager
        nameWithType: XRManager
        qualifiedName: eDIA.XRManager
    isDefinition: true
    commentId: T:eDIA.XRManager
  eDIA.XRrigInitialiser:
    name:
      CSharp:
      - id: eDIA.XRrigInitialiser
        name: XRrigInitialiser
        nameWithType: XRrigInitialiser
        qualifiedName: eDIA.XRrigInitialiser
      VB:
      - id: eDIA.XRrigInitialiser
        name: XRrigInitialiser
        nameWithType: XRrigInitialiser
        qualifiedName: eDIA.XRrigInitialiser
    isDefinition: true
    commentId: T:eDIA.XRrigInitialiser
  Global.Coroutine:
    name:
      CSharp:
      - id: Global.Coroutine
        name: Coroutine
        nameWithType: Coroutine
        qualifiedName: Coroutine
        isExternal: true
      VB:
      - id: Global.Coroutine
        name: Coroutine
        nameWithType: Coroutine
        qualifiedName: Coroutine
        isExternal: true
    isDefinition: true
  eDIA.ScreenFader.StartFadeIn*:
    name:
      CSharp:
      - id: eDIA.ScreenFader.StartFadeIn*
        name: StartFadeIn
        nameWithType: ScreenFader.StartFadeIn
        qualifiedName: eDIA.ScreenFader.StartFadeIn
      VB:
      - id: eDIA.ScreenFader.StartFadeIn*
        name: StartFadeIn
        nameWithType: ScreenFader.StartFadeIn
        qualifiedName: eDIA.ScreenFader.StartFadeIn
    isDefinition: true
    commentId: Overload:eDIA.ScreenFader.StartFadeIn
  eDIA.ScreenFader.StartFadeOut*:
    name:
      CSharp:
      - id: eDIA.ScreenFader.StartFadeOut*
        name: StartFadeOut
        nameWithType: ScreenFader.StartFadeOut
        qualifiedName: eDIA.ScreenFader.StartFadeOut
      VB:
      - id: eDIA.ScreenFader.StartFadeOut*
        name: StartFadeOut
        nameWithType: ScreenFader.StartFadeOut
        qualifiedName: eDIA.ScreenFader.StartFadeOut
    isDefinition: true
    commentId: Overload:eDIA.ScreenFader.StartFadeOut
  eDIA.ScreenFader:
    name:
      CSharp:
      - id: eDIA.ScreenFader
        name: ScreenFader
        nameWithType: ScreenFader
        qualifiedName: eDIA.ScreenFader
      VB:
      - id: eDIA.ScreenFader
        name: ScreenFader
        nameWithType: ScreenFader
        qualifiedName: eDIA.ScreenFader
    isDefinition: true
    commentId: T:eDIA.ScreenFader
  eDIA.ControlPanelManager.ControlPanelModes:
    name:
      CSharp:
      - id: eDIA.ControlPanelManager.ControlPanelModes
        name: ControlPanelManager.ControlPanelModes
        nameWithType: ControlPanelManager.ControlPanelModes
        qualifiedName: eDIA.ControlPanelManager.ControlPanelModes
      VB:
      - id: eDIA.ControlPanelManager.ControlPanelModes
        name: ControlPanelManager.ControlPanelModes
        nameWithType: ControlPanelManager.ControlPanelModes
        qualifiedName: eDIA.ControlPanelManager.ControlPanelModes
    isDefinition: true
    parent: eDIA
    commentId: T:eDIA.ControlPanelManager.ControlPanelModes
  eDIA.ControlPanelManager.SetControlPanelMode*:
    name:
      CSharp:
      - id: eDIA.ControlPanelManager.SetControlPanelMode*
        name: SetControlPanelMode
        nameWithType: ControlPanelManager.SetControlPanelMode
        qualifiedName: eDIA.ControlPanelManager.SetControlPanelMode
      VB:
      - id: eDIA.ControlPanelManager.SetControlPanelMode*
        name: SetControlPanelMode
        nameWithType: ControlPanelManager.SetControlPanelMode
        qualifiedName: eDIA.ControlPanelManager.SetControlPanelMode
    isDefinition: true
    commentId: Overload:eDIA.ControlPanelManager.SetControlPanelMode
  eDIA.ControlPanelManager:
    name:
      CSharp:
      - id: eDIA.ControlPanelManager
        name: ControlPanelManager
        nameWithType: ControlPanelManager
        qualifiedName: eDIA.ControlPanelManager
      VB:
      - id: eDIA.ControlPanelManager
        name: ControlPanelManager
        nameWithType: ControlPanelManager
        qualifiedName: eDIA.ControlPanelManager
    isDefinition: true
    commentId: T:eDIA.ControlPanelManager
  System.Collections.Generic.List{Transform}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Transform}
  eDIA.ExperimenterPanel.Awake*:
    name:
      CSharp:
      - id: eDIA.ExperimenterPanel.Awake*
        name: Awake
        nameWithType: ExperimenterPanel.Awake
        qualifiedName: eDIA.ExperimenterPanel.Awake
      VB:
      - id: eDIA.ExperimenterPanel.Awake*
        name: Awake
        nameWithType: ExperimenterPanel.Awake
        qualifiedName: eDIA.ExperimenterPanel.Awake
    isDefinition: true
    commentId: Overload:eDIA.ExperimenterPanel.Awake
  eDIA.ExperimenterPanel.ShowPanel*:
    name:
      CSharp:
      - id: eDIA.ExperimenterPanel.ShowPanel*
        name: ShowPanel
        nameWithType: ExperimenterPanel.ShowPanel
        qualifiedName: eDIA.ExperimenterPanel.ShowPanel
      VB:
      - id: eDIA.ExperimenterPanel.ShowPanel*
        name: ShowPanel
        nameWithType: ExperimenterPanel.ShowPanel
        qualifiedName: eDIA.ExperimenterPanel.ShowPanel
    isDefinition: true
    commentId: Overload:eDIA.ExperimenterPanel.ShowPanel
  eDIA.ExperimenterPanel.HidePanel*:
    name:
      CSharp:
      - id: eDIA.ExperimenterPanel.HidePanel*
        name: HidePanel
        nameWithType: ExperimenterPanel.HidePanel
        qualifiedName: eDIA.ExperimenterPanel.HidePanel
      VB:
      - id: eDIA.ExperimenterPanel.HidePanel*
        name: HidePanel
        nameWithType: ExperimenterPanel.HidePanel
        qualifiedName: eDIA.ExperimenterPanel.HidePanel
    isDefinition: true
    commentId: Overload:eDIA.ExperimenterPanel.HidePanel
  eDIA.ExperimenterPanel.ApplyTheme*:
    name:
      CSharp:
      - id: eDIA.ExperimenterPanel.ApplyTheme*
        name: ApplyTheme
        nameWithType: ExperimenterPanel.ApplyTheme
        qualifiedName: eDIA.ExperimenterPanel.ApplyTheme
      VB:
      - id: eDIA.ExperimenterPanel.ApplyTheme*
        name: ApplyTheme
        nameWithType: ExperimenterPanel.ApplyTheme
        qualifiedName: eDIA.ExperimenterPanel.ApplyTheme
    isDefinition: true
    commentId: Overload:eDIA.ExperimenterPanel.ApplyTheme
  eDIA.ExperimenterPanel:
    name:
      CSharp:
      - id: eDIA.ExperimenterPanel
        name: ExperimenterPanel
        nameWithType: ExperimenterPanel
        qualifiedName: eDIA.ExperimenterPanel
      VB:
      - id: eDIA.ExperimenterPanel
        name: ExperimenterPanel
        nameWithType: ExperimenterPanel
        qualifiedName: eDIA.ExperimenterPanel
    isDefinition: true
    parent: eDIA
    commentId: T:eDIA.ExperimenterPanel
  eDIA.ExperimenterPanel.children:
    name:
      CSharp:
      - id: eDIA.ExperimenterPanel.children
        name: children
        nameWithType: ExperimenterPanel.children
        qualifiedName: eDIA.ExperimenterPanel.children
      VB:
      - id: eDIA.ExperimenterPanel.children
        name: children
        nameWithType: ExperimenterPanel.children
        qualifiedName: eDIA.ExperimenterPanel.children
    isDefinition: true
    parent: eDIA.ExperimenterPanel
    commentId: F:eDIA.ExperimenterPanel.children
  eDIA.ExperimenterPanel.ShowPanel:
    name:
      CSharp:
      - id: eDIA.ExperimenterPanel.ShowPanel
        name: ShowPanel
        nameWithType: ExperimenterPanel.ShowPanel
        qualifiedName: eDIA.ExperimenterPanel.ShowPanel
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: eDIA.ExperimenterPanel.ShowPanel
        name: ShowPanel
        nameWithType: ExperimenterPanel.ShowPanel
        qualifiedName: eDIA.ExperimenterPanel.ShowPanel
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: eDIA.ExperimenterPanel
    commentId: M:eDIA.ExperimenterPanel.ShowPanel
  eDIA.ExperimenterPanel.HidePanel:
    name:
      CSharp:
      - id: eDIA.ExperimenterPanel.HidePanel
        name: HidePanel
        nameWithType: ExperimenterPanel.HidePanel
        qualifiedName: eDIA.ExperimenterPanel.HidePanel
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: eDIA.ExperimenterPanel.HidePanel
        name: HidePanel
        nameWithType: ExperimenterPanel.HidePanel
        qualifiedName: eDIA.ExperimenterPanel.HidePanel
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: eDIA.ExperimenterPanel
    commentId: M:eDIA.ExperimenterPanel.HidePanel
  eDIA.ExperimenterPanel.ApplyTheme:
    name:
      CSharp:
      - id: eDIA.ExperimenterPanel.ApplyTheme
        name: ApplyTheme
        nameWithType: ExperimenterPanel.ApplyTheme
        qualifiedName: eDIA.ExperimenterPanel.ApplyTheme
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: eDIA.ExperimenterPanel.ApplyTheme
        name: ApplyTheme
        nameWithType: ExperimenterPanel.ApplyTheme
        qualifiedName: eDIA.ExperimenterPanel.ApplyTheme
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: eDIA.ExperimenterPanel
    commentId: M:eDIA.ExperimenterPanel.ApplyTheme
  Global.Slider:
    name:
      CSharp:
      - id: Global.Slider
        name: Slider
        nameWithType: Slider
        qualifiedName: Slider
        isExternal: true
      VB:
      - id: Global.Slider
        name: Slider
        nameWithType: Slider
        qualifiedName: Slider
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Slider'
  Global.TMP_Dropdown:
    name:
      CSharp:
      - id: Global.TMP_Dropdown
        name: TMP_Dropdown
        nameWithType: TMP_Dropdown
        qualifiedName: TMP_Dropdown
        isExternal: true
      VB:
      - id: Global.TMP_Dropdown
        name: TMP_Dropdown
        nameWithType: TMP_Dropdown
        qualifiedName: TMP_Dropdown
        isExternal: true
    isDefinition: true
  eDIA.ExperimenterPanel.Awake:
    name:
      CSharp:
      - id: eDIA.ExperimenterPanel.Awake
        name: Awake
        nameWithType: ExperimenterPanel.Awake
        qualifiedName: eDIA.ExperimenterPanel.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: eDIA.ExperimenterPanel.Awake
        name: Awake
        nameWithType: ExperimenterPanel.Awake
        qualifiedName: eDIA.ExperimenterPanel.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: eDIA.ExperimenterPanel
    commentId: M:eDIA.ExperimenterPanel.Awake
  eDIA.PanelApplicationSettings.Awake*:
    name:
      CSharp:
      - id: eDIA.PanelApplicationSettings.Awake*
        name: Awake
        nameWithType: PanelApplicationSettings.Awake
        qualifiedName: eDIA.PanelApplicationSettings.Awake
      VB:
      - id: eDIA.PanelApplicationSettings.Awake*
        name: Awake
        nameWithType: PanelApplicationSettings.Awake
        qualifiedName: eDIA.PanelApplicationSettings.Awake
    isDefinition: true
    commentId: Overload:eDIA.PanelApplicationSettings.Awake
  eDIA.PanelApplicationSettings.ValueChanged*:
    name:
      CSharp:
      - id: eDIA.PanelApplicationSettings.ValueChanged*
        name: ValueChanged
        nameWithType: PanelApplicationSettings.ValueChanged
        qualifiedName: eDIA.PanelApplicationSettings.ValueChanged
      VB:
      - id: eDIA.PanelApplicationSettings.ValueChanged*
        name: ValueChanged
        nameWithType: PanelApplicationSettings.ValueChanged
        qualifiedName: eDIA.PanelApplicationSettings.ValueChanged
    isDefinition: true
    commentId: Overload:eDIA.PanelApplicationSettings.ValueChanged
  eDIA.PanelApplicationSettings:
    name:
      CSharp:
      - id: eDIA.PanelApplicationSettings
        name: PanelApplicationSettings
        nameWithType: PanelApplicationSettings
        qualifiedName: eDIA.PanelApplicationSettings
      VB:
      - id: eDIA.PanelApplicationSettings
        name: PanelApplicationSettings
        nameWithType: PanelApplicationSettings
        qualifiedName: eDIA.PanelApplicationSettings
    isDefinition: true
    commentId: T:eDIA.PanelApplicationSettings
  eDIA.PanelConfigSelection.UpdateParticipantConfigList*:
    name:
      CSharp:
      - id: eDIA.PanelConfigSelection.UpdateParticipantConfigList*
        name: UpdateParticipantConfigList
        nameWithType: PanelConfigSelection.UpdateParticipantConfigList
        qualifiedName: eDIA.PanelConfigSelection.UpdateParticipantConfigList
      VB:
      - id: eDIA.PanelConfigSelection.UpdateParticipantConfigList*
        name: UpdateParticipantConfigList
        nameWithType: PanelConfigSelection.UpdateParticipantConfigList
        qualifiedName: eDIA.PanelConfigSelection.UpdateParticipantConfigList
    isDefinition: true
    commentId: Overload:eDIA.PanelConfigSelection.UpdateParticipantConfigList
  eDIA.PanelConfigSelection.BtnSubmitPressed*:
    name:
      CSharp:
      - id: eDIA.PanelConfigSelection.BtnSubmitPressed*
        name: BtnSubmitPressed
        nameWithType: PanelConfigSelection.BtnSubmitPressed
        qualifiedName: eDIA.PanelConfigSelection.BtnSubmitPressed
      VB:
      - id: eDIA.PanelConfigSelection.BtnSubmitPressed*
        name: BtnSubmitPressed
        nameWithType: PanelConfigSelection.BtnSubmitPressed
        qualifiedName: eDIA.PanelConfigSelection.BtnSubmitPressed
    isDefinition: true
    commentId: Overload:eDIA.PanelConfigSelection.BtnSubmitPressed
  eDIA.PanelConfigSelection:
    name:
      CSharp:
      - id: eDIA.PanelConfigSelection
        name: PanelConfigSelection
        nameWithType: PanelConfigSelection
        qualifiedName: eDIA.PanelConfigSelection
      VB:
      - id: eDIA.PanelConfigSelection
        name: PanelConfigSelection
        nameWithType: PanelConfigSelection
        qualifiedName: eDIA.PanelConfigSelection
    isDefinition: true
    commentId: T:eDIA.PanelConfigSelection
  Global.SliderExperimenterStatus:
    name:
      CSharp:
      - id: Global.SliderExperimenterStatus
        name: SliderExperimenterStatus
        nameWithType: SliderExperimenterStatus
        qualifiedName: SliderExperimenterStatus
      VB:
      - id: Global.SliderExperimenterStatus
        name: SliderExperimenterStatus
        nameWithType: SliderExperimenterStatus
        qualifiedName: SliderExperimenterStatus
    isDefinition: true
    commentId: T:Global.SliderExperimenterStatus
  eDIA.PanelExperimentControl.Awake*:
    name:
      CSharp:
      - id: eDIA.PanelExperimentControl.Awake*
        name: Awake
        nameWithType: PanelExperimentControl.Awake
        qualifiedName: eDIA.PanelExperimentControl.Awake
      VB:
      - id: eDIA.PanelExperimentControl.Awake*
        name: Awake
        nameWithType: PanelExperimentControl.Awake
        qualifiedName: eDIA.PanelExperimentControl.Awake
    isDefinition: true
    commentId: Overload:eDIA.PanelExperimentControl.Awake
  eDIA.PanelExperimentControl:
    name:
      CSharp:
      - id: eDIA.PanelExperimentControl
        name: PanelExperimentControl
        nameWithType: PanelExperimentControl
        qualifiedName: eDIA.PanelExperimentControl
      VB:
      - id: eDIA.PanelExperimentControl
        name: PanelExperimentControl
        nameWithType: PanelExperimentControl
        qualifiedName: eDIA.PanelExperimentControl
    isDefinition: true
    commentId: T:eDIA.PanelExperimentControl
  Global.Image:
    name:
      CSharp:
      - id: Global.Image
        name: Image
        nameWithType: Image
        qualifiedName: Image
        isExternal: true
      VB:
      - id: Global.Image
        name: Image
        nameWithType: Image
        qualifiedName: Image
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Image'
  eDIA.PanelHeader.LogoClicked*:
    name:
      CSharp:
      - id: eDIA.PanelHeader.LogoClicked*
        name: LogoClicked
        nameWithType: PanelHeader.LogoClicked
        qualifiedName: eDIA.PanelHeader.LogoClicked
      VB:
      - id: eDIA.PanelHeader.LogoClicked*
        name: LogoClicked
        nameWithType: PanelHeader.LogoClicked
        qualifiedName: eDIA.PanelHeader.LogoClicked
    isDefinition: true
    commentId: Overload:eDIA.PanelHeader.LogoClicked
  eDIA.PanelHeader:
    name:
      CSharp:
      - id: eDIA.PanelHeader
        name: PanelHeader
        nameWithType: PanelHeader
        qualifiedName: eDIA.PanelHeader
      VB:
      - id: eDIA.PanelHeader
        name: PanelHeader
        nameWithType: PanelHeader
        qualifiedName: eDIA.PanelHeader
    isDefinition: true
    commentId: T:eDIA.PanelHeader
  eDIA.PanelLayoutManager.UpdatePanelOrder*:
    name:
      CSharp:
      - id: eDIA.PanelLayoutManager.UpdatePanelOrder*
        name: UpdatePanelOrder
        nameWithType: PanelLayoutManager.UpdatePanelOrder
        qualifiedName: eDIA.PanelLayoutManager.UpdatePanelOrder
      VB:
      - id: eDIA.PanelLayoutManager.UpdatePanelOrder*
        name: UpdatePanelOrder
        nameWithType: PanelLayoutManager.UpdatePanelOrder
        qualifiedName: eDIA.PanelLayoutManager.UpdatePanelOrder
    isDefinition: true
    commentId: Overload:eDIA.PanelLayoutManager.UpdatePanelOrder
  eDIA.PanelLayoutManager:
    name:
      CSharp:
      - id: eDIA.PanelLayoutManager
        name: PanelLayoutManager
        nameWithType: PanelLayoutManager
        qualifiedName: eDIA.PanelLayoutManager
      VB:
      - id: eDIA.PanelLayoutManager
        name: PanelLayoutManager
        nameWithType: PanelLayoutManager
        qualifiedName: eDIA.PanelLayoutManager
    isDefinition: true
    commentId: T:eDIA.PanelLayoutManager
  eDIA.PanelMessageBox.Awake*:
    name:
      CSharp:
      - id: eDIA.PanelMessageBox.Awake*
        name: Awake
        nameWithType: PanelMessageBox.Awake
        qualifiedName: eDIA.PanelMessageBox.Awake
      VB:
      - id: eDIA.PanelMessageBox.Awake*
        name: Awake
        nameWithType: PanelMessageBox.Awake
        qualifiedName: eDIA.PanelMessageBox.Awake
    isDefinition: true
    commentId: Overload:eDIA.PanelMessageBox.Awake
  eDIA.PanelMessageBox:
    name:
      CSharp:
      - id: eDIA.PanelMessageBox
        name: PanelMessageBox
        nameWithType: PanelMessageBox
        qualifiedName: eDIA.PanelMessageBox
      VB:
      - id: eDIA.PanelMessageBox
        name: PanelMessageBox
        nameWithType: PanelMessageBox
        qualifiedName: eDIA.PanelMessageBox
    isDefinition: true
    commentId: T:eDIA.PanelMessageBox
  eDIA.PanelTaskControl:
    name:
      CSharp:
      - id: eDIA.PanelTaskControl
        name: PanelTaskControl
        nameWithType: PanelTaskControl
        qualifiedName: eDIA.PanelTaskControl
      VB:
      - id: eDIA.PanelTaskControl
        name: PanelTaskControl
        nameWithType: PanelTaskControl
        qualifiedName: eDIA.PanelTaskControl
    isDefinition: true
    commentId: T:eDIA.PanelTaskControl
  Global.PointerEventData:
    name:
      CSharp:
      - id: Global.PointerEventData
        name: PointerEventData
        nameWithType: PointerEventData
        qualifiedName: PointerEventData
        isExternal: true
      VB:
      - id: Global.PointerEventData
        name: PointerEventData
        nameWithType: PointerEventData
        qualifiedName: PointerEventData
        isExternal: true
    isDefinition: true
  eDIA.Tooltip.OnPointerEnter*:
    name:
      CSharp:
      - id: eDIA.Tooltip.OnPointerEnter*
        name: OnPointerEnter
        nameWithType: Tooltip.OnPointerEnter
        qualifiedName: eDIA.Tooltip.OnPointerEnter
      VB:
      - id: eDIA.Tooltip.OnPointerEnter*
        name: OnPointerEnter
        nameWithType: Tooltip.OnPointerEnter
        qualifiedName: eDIA.Tooltip.OnPointerEnter
    isDefinition: true
    commentId: Overload:eDIA.Tooltip.OnPointerEnter
  eDIA.Tooltip.OnPointerClick*:
    name:
      CSharp:
      - id: eDIA.Tooltip.OnPointerClick*
        name: OnPointerClick
        nameWithType: Tooltip.OnPointerClick
        qualifiedName: eDIA.Tooltip.OnPointerClick
      VB:
      - id: eDIA.Tooltip.OnPointerClick*
        name: OnPointerClick
        nameWithType: Tooltip.OnPointerClick
        qualifiedName: eDIA.Tooltip.OnPointerClick
    isDefinition: true
    commentId: Overload:eDIA.Tooltip.OnPointerClick
  eDIA.Tooltip.OnPointerExit*:
    name:
      CSharp:
      - id: eDIA.Tooltip.OnPointerExit*
        name: OnPointerExit
        nameWithType: Tooltip.OnPointerExit
        qualifiedName: eDIA.Tooltip.OnPointerExit
      VB:
      - id: eDIA.Tooltip.OnPointerExit*
        name: OnPointerExit
        nameWithType: Tooltip.OnPointerExit
        qualifiedName: eDIA.Tooltip.OnPointerExit
    isDefinition: true
    commentId: Overload:eDIA.Tooltip.OnPointerExit
  eDIA.Tooltip:
    name:
      CSharp:
      - id: eDIA.Tooltip
        name: Tooltip
        nameWithType: Tooltip
        qualifiedName: eDIA.Tooltip
      VB:
      - id: eDIA.Tooltip
        name: Tooltip
        nameWithType: Tooltip
        qualifiedName: eDIA.Tooltip
    isDefinition: true
    commentId: T:eDIA.Tooltip
  eDIA.TooltipManager.OnEvShowTooltip*:
    name:
      CSharp:
      - id: eDIA.TooltipManager.OnEvShowTooltip*
        name: OnEvShowTooltip
        nameWithType: TooltipManager.OnEvShowTooltip
        qualifiedName: eDIA.TooltipManager.OnEvShowTooltip
      VB:
      - id: eDIA.TooltipManager.OnEvShowTooltip*
        name: OnEvShowTooltip
        nameWithType: TooltipManager.OnEvShowTooltip
        qualifiedName: eDIA.TooltipManager.OnEvShowTooltip
    isDefinition: true
    commentId: Overload:eDIA.TooltipManager.OnEvShowTooltip
  eDIA.TooltipManager.OnEvHideTooltip*:
    name:
      CSharp:
      - id: eDIA.TooltipManager.OnEvHideTooltip*
        name: OnEvHideTooltip
        nameWithType: TooltipManager.OnEvHideTooltip
        qualifiedName: eDIA.TooltipManager.OnEvHideTooltip
      VB:
      - id: eDIA.TooltipManager.OnEvHideTooltip*
        name: OnEvHideTooltip
        nameWithType: TooltipManager.OnEvHideTooltip
        qualifiedName: eDIA.TooltipManager.OnEvHideTooltip
    isDefinition: true
    commentId: Overload:eDIA.TooltipManager.OnEvHideTooltip
  eDIA.TooltipManager:
    name:
      CSharp:
      - id: eDIA.TooltipManager
        name: TooltipManager
        nameWithType: TooltipManager
        qualifiedName: eDIA.TooltipManager
      VB:
      - id: eDIA.TooltipManager
        name: TooltipManager
        nameWithType: TooltipManager
        qualifiedName: eDIA.TooltipManager
    isDefinition: true
    commentId: T:eDIA.TooltipManager
  eDIA.InputRemapper.SetActionMapName*:
    name:
      CSharp:
      - id: eDIA.InputRemapper.SetActionMapName*
        name: SetActionMapName
        nameWithType: InputRemapper.SetActionMapName
        qualifiedName: eDIA.InputRemapper.SetActionMapName
      VB:
      - id: eDIA.InputRemapper.SetActionMapName*
        name: SetActionMapName
        nameWithType: InputRemapper.SetActionMapName
        qualifiedName: eDIA.InputRemapper.SetActionMapName
    isDefinition: true
    commentId: Overload:eDIA.InputRemapper.SetActionMapName
  eDIA.InputRemapper.menuPerformed*:
    name:
      CSharp:
      - id: eDIA.InputRemapper.menuPerformed*
        name: menuPerformed
        nameWithType: InputRemapper.menuPerformed
        qualifiedName: eDIA.InputRemapper.menuPerformed
      VB:
      - id: eDIA.InputRemapper.menuPerformed*
        name: menuPerformed
        nameWithType: InputRemapper.menuPerformed
        qualifiedName: eDIA.InputRemapper.menuPerformed
    isDefinition: true
    commentId: Overload:eDIA.InputRemapper.menuPerformed
  eDIA.InputRemapper.proceedPerformed*:
    name:
      CSharp:
      - id: eDIA.InputRemapper.proceedPerformed*
        name: proceedPerformed
        nameWithType: InputRemapper.proceedPerformed
        qualifiedName: eDIA.InputRemapper.proceedPerformed
      VB:
      - id: eDIA.InputRemapper.proceedPerformed*
        name: proceedPerformed
        nameWithType: InputRemapper.proceedPerformed
        qualifiedName: eDIA.InputRemapper.proceedPerformed
    isDefinition: true
    commentId: Overload:eDIA.InputRemapper.proceedPerformed
  eDIA.InputRemapper.actionStartExperimentPerformed*:
    name:
      CSharp:
      - id: eDIA.InputRemapper.actionStartExperimentPerformed*
        name: actionStartExperimentPerformed
        nameWithType: InputRemapper.actionStartExperimentPerformed
        qualifiedName: eDIA.InputRemapper.actionStartExperimentPerformed
      VB:
      - id: eDIA.InputRemapper.actionStartExperimentPerformed*
        name: actionStartExperimentPerformed
        nameWithType: InputRemapper.actionStartExperimentPerformed
        qualifiedName: eDIA.InputRemapper.actionStartExperimentPerformed
    isDefinition: true
    commentId: Overload:eDIA.InputRemapper.actionStartExperimentPerformed
  eDIA.InputRemapper.actionPauseExperimentPerformed*:
    name:
      CSharp:
      - id: eDIA.InputRemapper.actionPauseExperimentPerformed*
        name: actionPauseExperimentPerformed
        nameWithType: InputRemapper.actionPauseExperimentPerformed
        qualifiedName: eDIA.InputRemapper.actionPauseExperimentPerformed
      VB:
      - id: eDIA.InputRemapper.actionPauseExperimentPerformed*
        name: actionPauseExperimentPerformed
        nameWithType: InputRemapper.actionPauseExperimentPerformed
        qualifiedName: eDIA.InputRemapper.actionPauseExperimentPerformed
    isDefinition: true
    commentId: Overload:eDIA.InputRemapper.actionPauseExperimentPerformed
  eDIA.InputRemapper:
    name:
      CSharp:
      - id: eDIA.InputRemapper
        name: InputRemapper
        nameWithType: InputRemapper
        qualifiedName: eDIA.InputRemapper
      VB:
      - id: eDIA.InputRemapper
        name: InputRemapper
        nameWithType: InputRemapper
        qualifiedName: eDIA.InputRemapper
    isDefinition: true
    commentId: T:eDIA.InputRemapper
  Global.Texture2D:
    name:
      CSharp:
      - id: Global.Texture2D
        name: Texture2D
        nameWithType: Texture2D
        qualifiedName: Texture2D
        isExternal: true
      VB:
      - id: Global.Texture2D
        name: Texture2D
        nameWithType: Texture2D
        qualifiedName: Texture2D
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Texture2D'
  eDIA.EditorUtils.eDIAcontrolPanel.OnGUI*:
    name:
      CSharp:
      - id: eDIA.EditorUtils.eDIAcontrolPanel.OnGUI*
        name: OnGUI
        nameWithType: eDIAcontrolPanel.OnGUI
        qualifiedName: eDIA.EditorUtils.eDIAcontrolPanel.OnGUI
      VB:
      - id: eDIA.EditorUtils.eDIAcontrolPanel.OnGUI*
        name: OnGUI
        nameWithType: eDIAcontrolPanel.OnGUI
        qualifiedName: eDIA.EditorUtils.eDIAcontrolPanel.OnGUI
    isDefinition: true
    commentId: Overload:eDIA.EditorUtils.eDIAcontrolPanel.OnGUI
  eDIA.EditorUtils.eDIAcontrolPanel:
    name:
      CSharp:
      - id: eDIA.EditorUtils.eDIAcontrolPanel
        name: eDIAcontrolPanel
        nameWithType: eDIAcontrolPanel
        qualifiedName: eDIA.EditorUtils.eDIAcontrolPanel
      VB:
      - id: eDIA.EditorUtils.eDIAcontrolPanel
        name: eDIAcontrolPanel
        nameWithType: eDIAcontrolPanel
        qualifiedName: eDIA.EditorUtils.eDIAcontrolPanel
    isDefinition: true
    commentId: T:eDIA.EditorUtils.eDIAcontrolPanel
  eDIA.EditorUtils.Layers.CreateLayer*:
    name:
      CSharp:
      - id: eDIA.EditorUtils.Layers.CreateLayer*
        name: CreateLayer
        nameWithType: Layers.CreateLayer
        qualifiedName: eDIA.EditorUtils.Layers.CreateLayer
      VB:
      - id: eDIA.EditorUtils.Layers.CreateLayer*
        name: CreateLayer
        nameWithType: Layers.CreateLayer
        qualifiedName: eDIA.EditorUtils.Layers.CreateLayer
    isDefinition: true
    commentId: Overload:eDIA.EditorUtils.Layers.CreateLayer
  eDIA.EditorUtils.Layers.NewLayer*:
    name:
      CSharp:
      - id: eDIA.EditorUtils.Layers.NewLayer*
        name: NewLayer
        nameWithType: Layers.NewLayer
        qualifiedName: eDIA.EditorUtils.Layers.NewLayer
      VB:
      - id: eDIA.EditorUtils.Layers.NewLayer*
        name: NewLayer
        nameWithType: Layers.NewLayer
        qualifiedName: eDIA.EditorUtils.Layers.NewLayer
    isDefinition: true
    commentId: Overload:eDIA.EditorUtils.Layers.NewLayer
  eDIA.EditorUtils.Layers.RemoveLayer*:
    name:
      CSharp:
      - id: eDIA.EditorUtils.Layers.RemoveLayer*
        name: RemoveLayer
        nameWithType: Layers.RemoveLayer
        qualifiedName: eDIA.EditorUtils.Layers.RemoveLayer
      VB:
      - id: eDIA.EditorUtils.Layers.RemoveLayer*
        name: RemoveLayer
        nameWithType: Layers.RemoveLayer
        qualifiedName: eDIA.EditorUtils.Layers.RemoveLayer
    isDefinition: true
    commentId: Overload:eDIA.EditorUtils.Layers.RemoveLayer
  eDIA.EditorUtils.Layers.LayerExists*:
    name:
      CSharp:
      - id: eDIA.EditorUtils.Layers.LayerExists*
        name: LayerExists
        nameWithType: Layers.LayerExists
        qualifiedName: eDIA.EditorUtils.Layers.LayerExists
      VB:
      - id: eDIA.EditorUtils.Layers.LayerExists*
        name: LayerExists
        nameWithType: Layers.LayerExists
        qualifiedName: eDIA.EditorUtils.Layers.LayerExists
    isDefinition: true
    commentId: Overload:eDIA.EditorUtils.Layers.LayerExists
  eDIA.EditorUtils.Layers:
    name:
      CSharp:
      - id: eDIA.EditorUtils.Layers
        name: Layers
        nameWithType: Layers
        qualifiedName: eDIA.EditorUtils.Layers
      VB:
      - id: eDIA.EditorUtils.Layers
        name: Layers
        nameWithType: Layers
        qualifiedName: eDIA.EditorUtils.Layers
    isDefinition: true
    commentId: T:eDIA.EditorUtils.Layers
  eDIA.EditorUtils.ReadOnlyAttribute:
    name:
      CSharp:
      - id: eDIA.EditorUtils.ReadOnlyAttribute
        name: ReadOnlyAttribute
        nameWithType: ReadOnlyAttribute
        qualifiedName: eDIA.EditorUtils.ReadOnlyAttribute
      VB:
      - id: eDIA.EditorUtils.ReadOnlyAttribute
        name: ReadOnlyAttribute
        nameWithType: ReadOnlyAttribute
        qualifiedName: eDIA.EditorUtils.ReadOnlyAttribute
    isDefinition: true
    commentId: T:eDIA.EditorUtils.ReadOnlyAttribute
  Global.Rect:
    name:
      CSharp:
      - id: Global.Rect
        name: Rect
        nameWithType: Rect
        qualifiedName: Rect
        isExternal: true
      VB:
      - id: Global.Rect
        name: Rect
        nameWithType: Rect
        qualifiedName: Rect
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Rect'
  Global.SerializedProperty:
    name:
      CSharp:
      - id: Global.SerializedProperty
        name: SerializedProperty
        nameWithType: SerializedProperty
        qualifiedName: SerializedProperty
        isExternal: true
      VB:
      - id: Global.SerializedProperty
        name: SerializedProperty
        nameWithType: SerializedProperty
        qualifiedName: SerializedProperty
        isExternal: true
    isDefinition: true
    commentId: '!:Global.SerializedProperty'
  Global.GUIContent:
    name:
      CSharp:
      - id: Global.GUIContent
        name: GUIContent
        nameWithType: GUIContent
        qualifiedName: GUIContent
        isExternal: true
      VB:
      - id: Global.GUIContent
        name: GUIContent
        nameWithType: GUIContent
        qualifiedName: GUIContent
        isExternal: true
    isDefinition: true
    commentId: '!:Global.GUIContent'
  eDIA.EditorUtils.ReadOnlyDrawer.OnGUI*:
    name:
      CSharp:
      - id: eDIA.EditorUtils.ReadOnlyDrawer.OnGUI*
        name: OnGUI
        nameWithType: ReadOnlyDrawer.OnGUI
        qualifiedName: eDIA.EditorUtils.ReadOnlyDrawer.OnGUI
      VB:
      - id: eDIA.EditorUtils.ReadOnlyDrawer.OnGUI*
        name: OnGUI
        nameWithType: ReadOnlyDrawer.OnGUI
        qualifiedName: eDIA.EditorUtils.ReadOnlyDrawer.OnGUI
    isDefinition: true
    commentId: Overload:eDIA.EditorUtils.ReadOnlyDrawer.OnGUI
  eDIA.EditorUtils.ReadOnlyDrawer:
    name:
      CSharp:
      - id: eDIA.EditorUtils.ReadOnlyDrawer
        name: ReadOnlyDrawer
        nameWithType: ReadOnlyDrawer
        qualifiedName: eDIA.EditorUtils.ReadOnlyDrawer
      VB:
      - id: eDIA.EditorUtils.ReadOnlyDrawer
        name: ReadOnlyDrawer
        nameWithType: ReadOnlyDrawer
        qualifiedName: eDIA.EditorUtils.ReadOnlyDrawer
    isDefinition: true
    commentId: T:eDIA.EditorUtils.ReadOnlyDrawer
  eDIA.EditorUtils:
    name:
      CSharp:
      - name: eDIA.EditorUtils
        nameWithType: eDIA.EditorUtils
        qualifiedName: eDIA.EditorUtils
      VB:
      - name: eDIA.EditorUtils
        nameWithType: eDIA.EditorUtils
        qualifiedName: eDIA.EditorUtils
    isDefinition: true
    commentId: N:eDIA.EditorUtils
  eDIA.Events.System:
    name:
      CSharp:
      - id: eDIA.Events.System
        name: System
        nameWithType: System
        qualifiedName: eDIA.Events.System
      VB:
      - id: eDIA.Events.System
        name: System
        nameWithType: System
        qualifiedName: eDIA.Events.System
    isDefinition: true
    commentId: T:eDIA.Events.System
  eDIA.Events.Core:
    name:
      CSharp:
      - id: eDIA.Events.Core
        name: Core
        nameWithType: Core
        qualifiedName: eDIA.Events.Core
      VB:
      - id: eDIA.Events.Core
        name: Core
        nameWithType: Core
        qualifiedName: eDIA.Events.Core
    isDefinition: true
    commentId: T:eDIA.Events.Core
  eDIA.Events.ControlPanel:
    name:
      CSharp:
      - id: eDIA.Events.ControlPanel
        name: ControlPanel
        nameWithType: ControlPanel
        qualifiedName: eDIA.Events.ControlPanel
      VB:
      - id: eDIA.Events.ControlPanel
        name: ControlPanel
        nameWithType: ControlPanel
        qualifiedName: eDIA.Events.ControlPanel
    isDefinition: true
    commentId: T:eDIA.Events.ControlPanel
  eDIA.Events.Eye:
    name:
      CSharp:
      - id: eDIA.Events.Eye
        name: Eye
        nameWithType: Eye
        qualifiedName: eDIA.Events.Eye
      VB:
      - id: eDIA.Events.Eye
        name: Eye
        nameWithType: Eye
        qualifiedName: eDIA.Events.Eye
    isDefinition: true
    commentId: T:eDIA.Events.Eye
  eDIA.Events.XR:
    name:
      CSharp:
      - id: eDIA.Events.XR
        name: XR
        nameWithType: XR
        qualifiedName: eDIA.Events.XR
      VB:
      - id: eDIA.Events.XR
        name: XR
        nameWithType: XR
        qualifiedName: eDIA.Events.XR
    isDefinition: true
    commentId: T:eDIA.Events.XR
  eDIA.Events.DataHandlers:
    name:
      CSharp:
      - id: eDIA.Events.DataHandlers
        name: DataHandlers
        nameWithType: DataHandlers
        qualifiedName: eDIA.Events.DataHandlers
      VB:
      - id: eDIA.Events.DataHandlers
        name: DataHandlers
        nameWithType: DataHandlers
        qualifiedName: eDIA.Events.DataHandlers
    isDefinition: true
    commentId: T:eDIA.Events.DataHandlers
  eDIA.Events.GUI:
    name:
      CSharp:
      - id: eDIA.Events.GUI
        name: GUI
        nameWithType: GUI
        qualifiedName: eDIA.Events.GUI
      VB:
      - id: eDIA.Events.GUI
        name: GUI
        nameWithType: GUI
        qualifiedName: eDIA.Events.GUI
    isDefinition: true
    commentId: T:eDIA.Events.GUI
  eDIA.Events:
    name:
      CSharp:
      - name: eDIA.Events
        nameWithType: eDIA.Events
        qualifiedName: eDIA.Events
      VB:
      - name: eDIA.Events
        nameWithType: eDIA.Events
        qualifiedName: eDIA.Events
    isDefinition: true
    commentId: N:eDIA.Events
  eDIA.Utilities.ChangeLogEntry:
    name:
      CSharp:
      - id: eDIA.Utilities.ChangeLogEntry
        name: ChangeLogEntry
        nameWithType: ChangeLogEntry
        qualifiedName: eDIA.Utilities.ChangeLogEntry
      VB:
      - id: eDIA.Utilities.ChangeLogEntry
        name: ChangeLogEntry
        nameWithType: ChangeLogEntry
        qualifiedName: eDIA.Utilities.ChangeLogEntry
    isDefinition: true
    commentId: T:eDIA.Utilities.ChangeLogEntry
  System.Collections.Generic.List{eDIA.Utilities.ChangeLogEntry}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: eDIA.Utilities.ChangeLogEntry
        name: ChangeLogEntry
        nameWithType: ChangeLogEntry
        qualifiedName: eDIA.Utilities.ChangeLogEntry
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: eDIA.Utilities.ChangeLogEntry
        name: ChangeLogEntry
        nameWithType: ChangeLogEntry
        qualifiedName: eDIA.Utilities.ChangeLogEntry
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{eDIA.Utilities.ChangeLogEntry}
  eDIA.Utilities.ProjectFileUtilities.UpdateChangelog*:
    name:
      CSharp:
      - id: eDIA.Utilities.ProjectFileUtilities.UpdateChangelog*
        name: UpdateChangelog
        nameWithType: ProjectFileUtilities.UpdateChangelog
        qualifiedName: eDIA.Utilities.ProjectFileUtilities.UpdateChangelog
      VB:
      - id: eDIA.Utilities.ProjectFileUtilities.UpdateChangelog*
        name: UpdateChangelog
        nameWithType: ProjectFileUtilities.UpdateChangelog
        qualifiedName: eDIA.Utilities.ProjectFileUtilities.UpdateChangelog
    isDefinition: true
    commentId: Overload:eDIA.Utilities.ProjectFileUtilities.UpdateChangelog
  eDIA.Utilities.ProjectFileUtilities.GenerateSingleVersionEntry*:
    name:
      CSharp:
      - id: eDIA.Utilities.ProjectFileUtilities.GenerateSingleVersionEntry*
        name: GenerateSingleVersionEntry
        nameWithType: ProjectFileUtilities.GenerateSingleVersionEntry
        qualifiedName: eDIA.Utilities.ProjectFileUtilities.GenerateSingleVersionEntry
      VB:
      - id: eDIA.Utilities.ProjectFileUtilities.GenerateSingleVersionEntry*
        name: GenerateSingleVersionEntry
        nameWithType: ProjectFileUtilities.GenerateSingleVersionEntry
        qualifiedName: eDIA.Utilities.ProjectFileUtilities.GenerateSingleVersionEntry
    isDefinition: true
    commentId: Overload:eDIA.Utilities.ProjectFileUtilities.GenerateSingleVersionEntry
  eDIA.Utilities.ProjectFileUtilities:
    name:
      CSharp:
      - id: eDIA.Utilities.ProjectFileUtilities
        name: ProjectFileUtilities
        nameWithType: ProjectFileUtilities
        qualifiedName: eDIA.Utilities.ProjectFileUtilities
      VB:
      - id: eDIA.Utilities.ProjectFileUtilities
        name: ProjectFileUtilities
        nameWithType: ProjectFileUtilities
        qualifiedName: eDIA.Utilities.ProjectFileUtilities
    isDefinition: true
    commentId: T:eDIA.Utilities.ProjectFileUtilities
  eDIA.Utilities:
    name:
      CSharp:
      - name: eDIA.Utilities
        nameWithType: eDIA.Utilities
        qualifiedName: eDIA.Utilities
      VB:
      - name: eDIA.Utilities
        nameWithType: eDIA.Utilities
        qualifiedName: eDIA.Utilities
    isDefinition: true
    commentId: N:eDIA.Utilities
  TASK.MessagesToUser.OnSessionStart*:
    name:
      CSharp:
      - id: TASK.MessagesToUser.OnSessionStart*
        name: OnSessionStart
        nameWithType: MessagesToUser.OnSessionStart
        qualifiedName: TASK.MessagesToUser.OnSessionStart
      VB:
      - id: TASK.MessagesToUser.OnSessionStart*
        name: OnSessionStart
        nameWithType: MessagesToUser.OnSessionStart
        qualifiedName: TASK.MessagesToUser.OnSessionStart
    isDefinition: true
    commentId: Overload:TASK.MessagesToUser.OnSessionStart
  TASK.MessagesToUser.OnSessionBreak*:
    name:
      CSharp:
      - id: TASK.MessagesToUser.OnSessionBreak*
        name: OnSessionBreak
        nameWithType: MessagesToUser.OnSessionBreak
        qualifiedName: TASK.MessagesToUser.OnSessionBreak
      VB:
      - id: TASK.MessagesToUser.OnSessionBreak*
        name: OnSessionBreak
        nameWithType: MessagesToUser.OnSessionBreak
        qualifiedName: TASK.MessagesToUser.OnSessionBreak
    isDefinition: true
    commentId: Overload:TASK.MessagesToUser.OnSessionBreak
  TASK.MessagesToUser.OnSessionEnd*:
    name:
      CSharp:
      - id: TASK.MessagesToUser.OnSessionEnd*
        name: OnSessionEnd
        nameWithType: MessagesToUser.OnSessionEnd
        qualifiedName: TASK.MessagesToUser.OnSessionEnd
      VB:
      - id: TASK.MessagesToUser.OnSessionEnd*
        name: OnSessionEnd
        nameWithType: MessagesToUser.OnSessionEnd
        qualifiedName: TASK.MessagesToUser.OnSessionEnd
    isDefinition: true
    commentId: Overload:TASK.MessagesToUser.OnSessionEnd
  TASK.MessagesToUser:
    name:
      CSharp:
      - id: TASK.MessagesToUser
        name: MessagesToUser
        nameWithType: MessagesToUser
        qualifiedName: TASK.MessagesToUser
      VB:
      - id: TASK.MessagesToUser
        name: MessagesToUser
        nameWithType: MessagesToUser
        qualifiedName: TASK.MessagesToUser
    isDefinition: true
    commentId: T:TASK.MessagesToUser
  Global.XRControllerInputRemapper:
    name:
      CSharp:
      - id: Global.XRControllerInputRemapper
        name: XRControllerInputRemapper
        nameWithType: XRControllerInputRemapper
        qualifiedName: XRControllerInputRemapper
        isExternal: true
      VB:
      - id: Global.XRControllerInputRemapper
        name: XRControllerInputRemapper
        nameWithType: XRControllerInputRemapper
        qualifiedName: XRControllerInputRemapper
        isExternal: true
    isDefinition: true
  TASK.TaskBlockAssessment.TaskStep1*:
    name:
      CSharp:
      - id: TASK.TaskBlockAssessment.TaskStep1*
        name: TaskStep1
        nameWithType: TaskBlockAssessment.TaskStep1
        qualifiedName: TASK.TaskBlockAssessment.TaskStep1
      VB:
      - id: TASK.TaskBlockAssessment.TaskStep1*
        name: TaskStep1
        nameWithType: TaskBlockAssessment.TaskStep1
        qualifiedName: TASK.TaskBlockAssessment.TaskStep1
    isDefinition: true
    commentId: Overload:TASK.TaskBlockAssessment.TaskStep1
  TASK.TaskBlockAssessment.TaskStep2*:
    name:
      CSharp:
      - id: TASK.TaskBlockAssessment.TaskStep2*
        name: TaskStep2
        nameWithType: TaskBlockAssessment.TaskStep2
        qualifiedName: TASK.TaskBlockAssessment.TaskStep2
      VB:
      - id: TASK.TaskBlockAssessment.TaskStep2*
        name: TaskStep2
        nameWithType: TaskBlockAssessment.TaskStep2
        qualifiedName: TASK.TaskBlockAssessment.TaskStep2
    isDefinition: true
    commentId: Overload:TASK.TaskBlockAssessment.TaskStep2
  TASK.TaskBlockAssessment.TaskStep3*:
    name:
      CSharp:
      - id: TASK.TaskBlockAssessment.TaskStep3*
        name: TaskStep3
        nameWithType: TaskBlockAssessment.TaskStep3
        qualifiedName: TASK.TaskBlockAssessment.TaskStep3
      VB:
      - id: TASK.TaskBlockAssessment.TaskStep3*
        name: TaskStep3
        nameWithType: TaskBlockAssessment.TaskStep3
        qualifiedName: TASK.TaskBlockAssessment.TaskStep3
    isDefinition: true
    commentId: Overload:TASK.TaskBlockAssessment.TaskStep3
  TASK.TaskBlockAssessment.TriggerPressed*:
    name:
      CSharp:
      - id: TASK.TaskBlockAssessment.TriggerPressed*
        name: TriggerPressed
        nameWithType: TaskBlockAssessment.TriggerPressed
        qualifiedName: TASK.TaskBlockAssessment.TriggerPressed
      VB:
      - id: TASK.TaskBlockAssessment.TriggerPressed*
        name: TriggerPressed
        nameWithType: TaskBlockAssessment.TriggerPressed
        qualifiedName: TASK.TaskBlockAssessment.TriggerPressed
    isDefinition: true
    commentId: Overload:TASK.TaskBlockAssessment.TriggerPressed
  TASK.TaskBlockAssessment.OnBlockStart*:
    name:
      CSharp:
      - id: TASK.TaskBlockAssessment.OnBlockStart*
        name: OnBlockStart
        nameWithType: TaskBlockAssessment.OnBlockStart
        qualifiedName: TASK.TaskBlockAssessment.OnBlockStart
      VB:
      - id: TASK.TaskBlockAssessment.OnBlockStart*
        name: OnBlockStart
        nameWithType: TaskBlockAssessment.OnBlockStart
        qualifiedName: TASK.TaskBlockAssessment.OnBlockStart
    isDefinition: true
    commentId: Overload:TASK.TaskBlockAssessment.OnBlockStart
  TASK.TaskBlockAssessment.OnStartTrial*:
    name:
      CSharp:
      - id: TASK.TaskBlockAssessment.OnStartTrial*
        name: OnStartTrial
        nameWithType: TaskBlockAssessment.OnStartTrial
        qualifiedName: TASK.TaskBlockAssessment.OnStartTrial
      VB:
      - id: TASK.TaskBlockAssessment.OnStartTrial*
        name: OnStartTrial
        nameWithType: TaskBlockAssessment.OnStartTrial
        qualifiedName: TASK.TaskBlockAssessment.OnStartTrial
    isDefinition: true
    commentId: Overload:TASK.TaskBlockAssessment.OnStartTrial
  TASK.TaskBlockAssessment.OnEndTrial*:
    name:
      CSharp:
      - id: TASK.TaskBlockAssessment.OnEndTrial*
        name: OnEndTrial
        nameWithType: TaskBlockAssessment.OnEndTrial
        qualifiedName: TASK.TaskBlockAssessment.OnEndTrial
      VB:
      - id: TASK.TaskBlockAssessment.OnEndTrial*
        name: OnEndTrial
        nameWithType: TaskBlockAssessment.OnEndTrial
        qualifiedName: TASK.TaskBlockAssessment.OnEndTrial
    isDefinition: true
    commentId: Overload:TASK.TaskBlockAssessment.OnEndTrial
  TASK.TaskBlockAssessment.OnBetweenSteps*:
    name:
      CSharp:
      - id: TASK.TaskBlockAssessment.OnBetweenSteps*
        name: OnBetweenSteps
        nameWithType: TaskBlockAssessment.OnBetweenSteps
        qualifiedName: TASK.TaskBlockAssessment.OnBetweenSteps
      VB:
      - id: TASK.TaskBlockAssessment.OnBetweenSteps*
        name: OnBetweenSteps
        nameWithType: TaskBlockAssessment.OnBetweenSteps
        qualifiedName: TASK.TaskBlockAssessment.OnBetweenSteps
    isDefinition: true
    commentId: Overload:TASK.TaskBlockAssessment.OnBetweenSteps
  TASK.TaskBlockAssessment.OnBlockEnd*:
    name:
      CSharp:
      - id: TASK.TaskBlockAssessment.OnBlockEnd*
        name: OnBlockEnd
        nameWithType: TaskBlockAssessment.OnBlockEnd
        qualifiedName: TASK.TaskBlockAssessment.OnBlockEnd
      VB:
      - id: TASK.TaskBlockAssessment.OnBlockEnd*
        name: OnBlockEnd
        nameWithType: TaskBlockAssessment.OnBlockEnd
        qualifiedName: TASK.TaskBlockAssessment.OnBlockEnd
    isDefinition: true
    commentId: Overload:TASK.TaskBlockAssessment.OnBlockEnd
  TASK.TaskBlockAssessment:
    name:
      CSharp:
      - id: TASK.TaskBlockAssessment
        name: TaskBlockAssessment
        nameWithType: TaskBlockAssessment
        qualifiedName: TASK.TaskBlockAssessment
      VB:
      - id: TASK.TaskBlockAssessment
        name: TaskBlockAssessment
        nameWithType: TaskBlockAssessment
        qualifiedName: TASK.TaskBlockAssessment
    isDefinition: true
    commentId: T:TASK.TaskBlockAssessment
  TASK.TaskBlockPractice.TaskStep1*:
    name:
      CSharp:
      - id: TASK.TaskBlockPractice.TaskStep1*
        name: TaskStep1
        nameWithType: TaskBlockPractice.TaskStep1
        qualifiedName: TASK.TaskBlockPractice.TaskStep1
      VB:
      - id: TASK.TaskBlockPractice.TaskStep1*
        name: TaskStep1
        nameWithType: TaskBlockPractice.TaskStep1
        qualifiedName: TASK.TaskBlockPractice.TaskStep1
    isDefinition: true
    commentId: Overload:TASK.TaskBlockPractice.TaskStep1
  TASK.TaskBlockPractice.TaskStep2*:
    name:
      CSharp:
      - id: TASK.TaskBlockPractice.TaskStep2*
        name: TaskStep2
        nameWithType: TaskBlockPractice.TaskStep2
        qualifiedName: TASK.TaskBlockPractice.TaskStep2
      VB:
      - id: TASK.TaskBlockPractice.TaskStep2*
        name: TaskStep2
        nameWithType: TaskBlockPractice.TaskStep2
        qualifiedName: TASK.TaskBlockPractice.TaskStep2
    isDefinition: true
    commentId: Overload:TASK.TaskBlockPractice.TaskStep2
  TASK.TaskBlockPractice.TaskStep3*:
    name:
      CSharp:
      - id: TASK.TaskBlockPractice.TaskStep3*
        name: TaskStep3
        nameWithType: TaskBlockPractice.TaskStep3
        qualifiedName: TASK.TaskBlockPractice.TaskStep3
      VB:
      - id: TASK.TaskBlockPractice.TaskStep3*
        name: TaskStep3
        nameWithType: TaskBlockPractice.TaskStep3
        qualifiedName: TASK.TaskBlockPractice.TaskStep3
    isDefinition: true
    commentId: Overload:TASK.TaskBlockPractice.TaskStep3
  TASK.TaskBlockPractice.TaskStep4*:
    name:
      CSharp:
      - id: TASK.TaskBlockPractice.TaskStep4*
        name: TaskStep4
        nameWithType: TaskBlockPractice.TaskStep4
        qualifiedName: TASK.TaskBlockPractice.TaskStep4
      VB:
      - id: TASK.TaskBlockPractice.TaskStep4*
        name: TaskStep4
        nameWithType: TaskBlockPractice.TaskStep4
        qualifiedName: TASK.TaskBlockPractice.TaskStep4
    isDefinition: true
    commentId: Overload:TASK.TaskBlockPractice.TaskStep4
  TASK.TaskBlockPractice.TriggerPressed*:
    name:
      CSharp:
      - id: TASK.TaskBlockPractice.TriggerPressed*
        name: TriggerPressed
        nameWithType: TaskBlockPractice.TriggerPressed
        qualifiedName: TASK.TaskBlockPractice.TriggerPressed
      VB:
      - id: TASK.TaskBlockPractice.TriggerPressed*
        name: TriggerPressed
        nameWithType: TaskBlockPractice.TriggerPressed
        qualifiedName: TASK.TaskBlockPractice.TriggerPressed
    isDefinition: true
    commentId: Overload:TASK.TaskBlockPractice.TriggerPressed
  TASK.TaskBlockPractice.TaskStep5*:
    name:
      CSharp:
      - id: TASK.TaskBlockPractice.TaskStep5*
        name: TaskStep5
        nameWithType: TaskBlockPractice.TaskStep5
        qualifiedName: TASK.TaskBlockPractice.TaskStep5
      VB:
      - id: TASK.TaskBlockPractice.TaskStep5*
        name: TaskStep5
        nameWithType: TaskBlockPractice.TaskStep5
        qualifiedName: TASK.TaskBlockPractice.TaskStep5
    isDefinition: true
    commentId: Overload:TASK.TaskBlockPractice.TaskStep5
  TASK.TaskBlockPractice.OnBlockStart*:
    name:
      CSharp:
      - id: TASK.TaskBlockPractice.OnBlockStart*
        name: OnBlockStart
        nameWithType: TaskBlockPractice.OnBlockStart
        qualifiedName: TASK.TaskBlockPractice.OnBlockStart
      VB:
      - id: TASK.TaskBlockPractice.OnBlockStart*
        name: OnBlockStart
        nameWithType: TaskBlockPractice.OnBlockStart
        qualifiedName: TASK.TaskBlockPractice.OnBlockStart
    isDefinition: true
    commentId: Overload:TASK.TaskBlockPractice.OnBlockStart
  TASK.TaskBlockPractice.OnStartTrial*:
    name:
      CSharp:
      - id: TASK.TaskBlockPractice.OnStartTrial*
        name: OnStartTrial
        nameWithType: TaskBlockPractice.OnStartTrial
        qualifiedName: TASK.TaskBlockPractice.OnStartTrial
      VB:
      - id: TASK.TaskBlockPractice.OnStartTrial*
        name: OnStartTrial
        nameWithType: TaskBlockPractice.OnStartTrial
        qualifiedName: TASK.TaskBlockPractice.OnStartTrial
    isDefinition: true
    commentId: Overload:TASK.TaskBlockPractice.OnStartTrial
  TASK.TaskBlockPractice.OnEndTrial*:
    name:
      CSharp:
      - id: TASK.TaskBlockPractice.OnEndTrial*
        name: OnEndTrial
        nameWithType: TaskBlockPractice.OnEndTrial
        qualifiedName: TASK.TaskBlockPractice.OnEndTrial
      VB:
      - id: TASK.TaskBlockPractice.OnEndTrial*
        name: OnEndTrial
        nameWithType: TaskBlockPractice.OnEndTrial
        qualifiedName: TASK.TaskBlockPractice.OnEndTrial
    isDefinition: true
    commentId: Overload:TASK.TaskBlockPractice.OnEndTrial
  TASK.TaskBlockPractice.OnBetweenSteps*:
    name:
      CSharp:
      - id: TASK.TaskBlockPractice.OnBetweenSteps*
        name: OnBetweenSteps
        nameWithType: TaskBlockPractice.OnBetweenSteps
        qualifiedName: TASK.TaskBlockPractice.OnBetweenSteps
      VB:
      - id: TASK.TaskBlockPractice.OnBetweenSteps*
        name: OnBetweenSteps
        nameWithType: TaskBlockPractice.OnBetweenSteps
        qualifiedName: TASK.TaskBlockPractice.OnBetweenSteps
    isDefinition: true
    commentId: Overload:TASK.TaskBlockPractice.OnBetweenSteps
  TASK.TaskBlockPractice.OnBlockEnd*:
    name:
      CSharp:
      - id: TASK.TaskBlockPractice.OnBlockEnd*
        name: OnBlockEnd
        nameWithType: TaskBlockPractice.OnBlockEnd
        qualifiedName: TASK.TaskBlockPractice.OnBlockEnd
      VB:
      - id: TASK.TaskBlockPractice.OnBlockEnd*
        name: OnBlockEnd
        nameWithType: TaskBlockPractice.OnBlockEnd
        qualifiedName: TASK.TaskBlockPractice.OnBlockEnd
    isDefinition: true
    commentId: Overload:TASK.TaskBlockPractice.OnBlockEnd
  TASK.TaskBlockPractice:
    name:
      CSharp:
      - id: TASK.TaskBlockPractice
        name: TaskBlockPractice
        nameWithType: TaskBlockPractice
        qualifiedName: TASK.TaskBlockPractice
      VB:
      - id: TASK.TaskBlockPractice
        name: TaskBlockPractice
        nameWithType: TaskBlockPractice
        qualifiedName: TASK.TaskBlockPractice
    isDefinition: true
    commentId: T:TASK.TaskBlockPractice
  TASK.TaskBlockTemplate.OnBlockStart*:
    name:
      CSharp:
      - id: TASK.TaskBlockTemplate.OnBlockStart*
        name: OnBlockStart
        nameWithType: TaskBlockTemplate.OnBlockStart
        qualifiedName: TASK.TaskBlockTemplate.OnBlockStart
      VB:
      - id: TASK.TaskBlockTemplate.OnBlockStart*
        name: OnBlockStart
        nameWithType: TaskBlockTemplate.OnBlockStart
        qualifiedName: TASK.TaskBlockTemplate.OnBlockStart
    isDefinition: true
    commentId: Overload:TASK.TaskBlockTemplate.OnBlockStart
  TASK.TaskBlockTemplate.OnStartTrial*:
    name:
      CSharp:
      - id: TASK.TaskBlockTemplate.OnStartTrial*
        name: OnStartTrial
        nameWithType: TaskBlockTemplate.OnStartTrial
        qualifiedName: TASK.TaskBlockTemplate.OnStartTrial
      VB:
      - id: TASK.TaskBlockTemplate.OnStartTrial*
        name: OnStartTrial
        nameWithType: TaskBlockTemplate.OnStartTrial
        qualifiedName: TASK.TaskBlockTemplate.OnStartTrial
    isDefinition: true
    commentId: Overload:TASK.TaskBlockTemplate.OnStartTrial
  TASK.TaskBlockTemplate.OnEndTrial*:
    name:
      CSharp:
      - id: TASK.TaskBlockTemplate.OnEndTrial*
        name: OnEndTrial
        nameWithType: TaskBlockTemplate.OnEndTrial
        qualifiedName: TASK.TaskBlockTemplate.OnEndTrial
      VB:
      - id: TASK.TaskBlockTemplate.OnEndTrial*
        name: OnEndTrial
        nameWithType: TaskBlockTemplate.OnEndTrial
        qualifiedName: TASK.TaskBlockTemplate.OnEndTrial
    isDefinition: true
    commentId: Overload:TASK.TaskBlockTemplate.OnEndTrial
  TASK.TaskBlockTemplate.OnBetweenSteps*:
    name:
      CSharp:
      - id: TASK.TaskBlockTemplate.OnBetweenSteps*
        name: OnBetweenSteps
        nameWithType: TaskBlockTemplate.OnBetweenSteps
        qualifiedName: TASK.TaskBlockTemplate.OnBetweenSteps
      VB:
      - id: TASK.TaskBlockTemplate.OnBetweenSteps*
        name: OnBetweenSteps
        nameWithType: TaskBlockTemplate.OnBetweenSteps
        qualifiedName: TASK.TaskBlockTemplate.OnBetweenSteps
    isDefinition: true
    commentId: Overload:TASK.TaskBlockTemplate.OnBetweenSteps
  TASK.TaskBlockTemplate.OnBlockEnd*:
    name:
      CSharp:
      - id: TASK.TaskBlockTemplate.OnBlockEnd*
        name: OnBlockEnd
        nameWithType: TaskBlockTemplate.OnBlockEnd
        qualifiedName: TASK.TaskBlockTemplate.OnBlockEnd
      VB:
      - id: TASK.TaskBlockTemplate.OnBlockEnd*
        name: OnBlockEnd
        nameWithType: TaskBlockTemplate.OnBlockEnd
        qualifiedName: TASK.TaskBlockTemplate.OnBlockEnd
    isDefinition: true
    commentId: Overload:TASK.TaskBlockTemplate.OnBlockEnd
  TASK.TaskBlockTemplate:
    name:
      CSharp:
      - id: TASK.TaskBlockTemplate
        name: TaskBlockTemplate
        nameWithType: TaskBlockTemplate
        qualifiedName: TASK.TaskBlockTemplate
      VB:
      - id: TASK.TaskBlockTemplate
        name: TaskBlockTemplate
        nameWithType: TaskBlockTemplate
        qualifiedName: TASK.TaskBlockTemplate
    isDefinition: true
    commentId: T:TASK.TaskBlockTemplate
  TASK:
    name:
      CSharp:
      - name: TASK
        nameWithType: TASK
        qualifiedName: TASK
      VB:
      - name: TASK
        nameWithType: TASK
        qualifiedName: TASK
    isDefinition: true
    commentId: N:TASK
